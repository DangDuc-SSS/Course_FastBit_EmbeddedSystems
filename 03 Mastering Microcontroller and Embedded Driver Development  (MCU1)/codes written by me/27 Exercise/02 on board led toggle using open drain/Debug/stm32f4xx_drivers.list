
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004f0  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000698  080006a0  000106a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000698  08000698  000106a0  2**0
                  CONTENTS
  4 .ARM          00000000  08000698  08000698  000106a0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000698  080006a0  000106a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000698  08000698  00010698  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800069c  0800069c  0001069c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000106a0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000106a0  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000086e  00000000  00000000  000106d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000212  00000000  00000000  00010f3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00011150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000090  00000000  00000000  00011208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001396  00000000  00000000  00011298  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c47  00000000  00000000  0001262e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000533c  00000000  00000000  00013275  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000185b1  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  00018604  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000680 	.word	0x08000680

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000680 	.word	0x08000680

080001e8 <delay>:


#include "stm32f407xx.h"

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0007a11f 	.word	0x0007a11f

08000214 <main>:

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOD;
 800021a:	4b0d      	ldr	r3, [pc, #52]	; (8000250 <main+0x3c>)
 800021c:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OP;
 800022a:	2301      	movs	r3, #1
 800022c:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800022e:	2301      	movs	r3, #1
 8000230:	72fb      	strb	r3, [r7, #11]

	GPIO_PeripheralClockControl(GPIOD, ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4806      	ldr	r0, [pc, #24]	; (8000250 <main+0x3c>)
 8000236:	f000 f837 	bl	80002a8 <GPIO_PeripheralClockControl>
	GPIO_Init(&GpioLed);
 800023a:	1d3b      	adds	r3, r7, #4
 800023c:	4618      	mov	r0, r3
 800023e:	f000 f91b 	bl	8000478 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000242:	210c      	movs	r1, #12
 8000244:	4802      	ldr	r0, [pc, #8]	; (8000250 <main+0x3c>)
 8000246:	f000 f9e1 	bl	800060c <GPIO_ToggleOutputPin>
		delay();
 800024a:	f7ff ffcd 	bl	80001e8 <delay>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800024e:	e7f8      	b.n	8000242 <main+0x2e>
 8000250:	40020c00 	.word	0x40020c00

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 f9d9 	bl	8000638 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ffc5 	bl	8000214 <main>

0800028a <LoopForever>:

LoopForever:
    b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000298:	080006a0 	.word	0x080006a0
  ldr r2, =_sbss
 800029c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a0:	2000001c 	.word	0x2000001c

080002a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC_IRQHandler>
	...

080002a8 <GPIO_PeripheralClockControl>:
 *
 *@Note					- none
 *
 */
void GPIO_PeripheralClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
 80002b0:	460b      	mov	r3, r1
 80002b2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002b4:	78fb      	ldrb	r3, [r7, #3]
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d162      	bne.n	8000380 <GPIO_PeripheralClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	4a64      	ldr	r2, [pc, #400]	; (8000450 <GPIO_PeripheralClockControl+0x1a8>)
 80002be:	4293      	cmp	r3, r2
 80002c0:	d106      	bne.n	80002d0 <GPIO_PeripheralClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002c2:	4b64      	ldr	r3, [pc, #400]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80002c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c6:	4a63      	ldr	r2, [pc, #396]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80002c8:	f043 0301 	orr.w	r3, r3, #1
 80002cc:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 80002ce:	e0b9      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a61      	ldr	r2, [pc, #388]	; (8000458 <GPIO_PeripheralClockControl+0x1b0>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d106      	bne.n	80002e6 <GPIO_PeripheralClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002d8:	4b5e      	ldr	r3, [pc, #376]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80002da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002dc:	4a5d      	ldr	r2, [pc, #372]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80002de:	f043 0302 	orr.w	r3, r3, #2
 80002e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e4:	e0ae      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4a5c      	ldr	r2, [pc, #368]	; (800045c <GPIO_PeripheralClockControl+0x1b4>)
 80002ea:	4293      	cmp	r3, r2
 80002ec:	d106      	bne.n	80002fc <GPIO_PeripheralClockControl+0x54>
			GPIOC_PCLK_EN();
 80002ee:	4b59      	ldr	r3, [pc, #356]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80002f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f2:	4a58      	ldr	r2, [pc, #352]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80002f4:	f043 0304 	orr.w	r3, r3, #4
 80002f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fa:	e0a3      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	4a58      	ldr	r2, [pc, #352]	; (8000460 <GPIO_PeripheralClockControl+0x1b8>)
 8000300:	4293      	cmp	r3, r2
 8000302:	d106      	bne.n	8000312 <GPIO_PeripheralClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000304:	4b53      	ldr	r3, [pc, #332]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000308:	4a52      	ldr	r2, [pc, #328]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800030a:	f043 0308 	orr.w	r3, r3, #8
 800030e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000310:	e098      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a53      	ldr	r2, [pc, #332]	; (8000464 <GPIO_PeripheralClockControl+0x1bc>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d106      	bne.n	8000328 <GPIO_PeripheralClockControl+0x80>
			GPIOE_PCLK_EN();
 800031a:	4b4e      	ldr	r3, [pc, #312]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800031c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031e:	4a4d      	ldr	r2, [pc, #308]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000320:	f043 0310 	orr.w	r3, r3, #16
 8000324:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000326:	e08d      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a4f      	ldr	r2, [pc, #316]	; (8000468 <GPIO_PeripheralClockControl+0x1c0>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d106      	bne.n	800033e <GPIO_PeripheralClockControl+0x96>
			GPIOF_PCLK_EN();
 8000330:	4b48      	ldr	r3, [pc, #288]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000332:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000334:	4a47      	ldr	r2, [pc, #284]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000336:	f043 0320 	orr.w	r3, r3, #32
 800033a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033c:	e082      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a4a      	ldr	r2, [pc, #296]	; (800046c <GPIO_PeripheralClockControl+0x1c4>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeripheralClockControl+0xac>
			GPIOG_PCLK_EN();
 8000346:	4b43      	ldr	r3, [pc, #268]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034a:	4a42      	ldr	r2, [pc, #264]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800034c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000350:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000352:	e077      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a46      	ldr	r2, [pc, #280]	; (8000470 <GPIO_PeripheralClockControl+0x1c8>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PeripheralClockControl+0xc2>
			GPIOH_PCLK_EN();
 800035c:	4b3d      	ldr	r3, [pc, #244]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000360:	4a3c      	ldr	r2, [pc, #240]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000362:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000366:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000368:	e06c      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a41      	ldr	r2, [pc, #260]	; (8000474 <GPIO_PeripheralClockControl+0x1cc>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d168      	bne.n	8000444 <GPIO_PeripheralClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000372:	4b38      	ldr	r3, [pc, #224]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000376:	4a37      	ldr	r2, [pc, #220]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000378:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800037c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037e:	e061      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a33      	ldr	r2, [pc, #204]	; (8000450 <GPIO_PeripheralClockControl+0x1a8>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PeripheralClockControl+0xee>
			GPIOA_PCLK_DI();
 8000388:	4b32      	ldr	r3, [pc, #200]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038c:	4a31      	ldr	r2, [pc, #196]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800038e:	f023 0301 	bic.w	r3, r3, #1
 8000392:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000394:	e056      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a2f      	ldr	r2, [pc, #188]	; (8000458 <GPIO_PeripheralClockControl+0x1b0>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PeripheralClockControl+0x104>
			GPIOB_PCLK_DI();
 800039e:	4b2d      	ldr	r3, [pc, #180]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a2:	4a2c      	ldr	r2, [pc, #176]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003a4:	f023 0302 	bic.w	r3, r3, #2
 80003a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003aa:	e04b      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a2b      	ldr	r2, [pc, #172]	; (800045c <GPIO_PeripheralClockControl+0x1b4>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d106      	bne.n	80003c2 <GPIO_PeripheralClockControl+0x11a>
			GPIOC_PCLK_DI();
 80003b4:	4b27      	ldr	r3, [pc, #156]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b8:	4a26      	ldr	r2, [pc, #152]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003ba:	f023 0304 	bic.w	r3, r3, #4
 80003be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c0:	e040      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a26      	ldr	r2, [pc, #152]	; (8000460 <GPIO_PeripheralClockControl+0x1b8>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d106      	bne.n	80003d8 <GPIO_PeripheralClockControl+0x130>
			GPIOD_PCLK_DI();
 80003ca:	4b22      	ldr	r3, [pc, #136]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ce:	4a21      	ldr	r2, [pc, #132]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003d0:	f023 0308 	bic.w	r3, r3, #8
 80003d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d6:	e035      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a22      	ldr	r2, [pc, #136]	; (8000464 <GPIO_PeripheralClockControl+0x1bc>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d106      	bne.n	80003ee <GPIO_PeripheralClockControl+0x146>
			GPIOE_PCLK_DI();
 80003e0:	4b1c      	ldr	r3, [pc, #112]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e4:	4a1b      	ldr	r2, [pc, #108]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003e6:	f023 0310 	bic.w	r3, r3, #16
 80003ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ec:	e02a      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4a1d      	ldr	r2, [pc, #116]	; (8000468 <GPIO_PeripheralClockControl+0x1c0>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d106      	bne.n	8000404 <GPIO_PeripheralClockControl+0x15c>
			GPIOF_PCLK_DI();
 80003f6:	4b17      	ldr	r3, [pc, #92]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fa:	4a16      	ldr	r2, [pc, #88]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 80003fc:	f023 0320 	bic.w	r3, r3, #32
 8000400:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000402:	e01f      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	4a19      	ldr	r2, [pc, #100]	; (800046c <GPIO_PeripheralClockControl+0x1c4>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d106      	bne.n	800041a <GPIO_PeripheralClockControl+0x172>
			GPIOG_PCLK_DI();
 800040c:	4b11      	ldr	r3, [pc, #68]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000410:	4a10      	ldr	r2, [pc, #64]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000412:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000416:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000418:	e014      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4a14      	ldr	r2, [pc, #80]	; (8000470 <GPIO_PeripheralClockControl+0x1c8>)
 800041e:	4293      	cmp	r3, r2
 8000420:	d106      	bne.n	8000430 <GPIO_PeripheralClockControl+0x188>
			GPIOH_PCLK_DI();
 8000422:	4b0c      	ldr	r3, [pc, #48]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000426:	4a0b      	ldr	r2, [pc, #44]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 8000428:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800042c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042e:	e009      	b.n	8000444 <GPIO_PeripheralClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	4a10      	ldr	r2, [pc, #64]	; (8000474 <GPIO_PeripheralClockControl+0x1cc>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d105      	bne.n	8000444 <GPIO_PeripheralClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000438:	4b06      	ldr	r3, [pc, #24]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800043a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043c:	4a05      	ldr	r2, [pc, #20]	; (8000454 <GPIO_PeripheralClockControl+0x1ac>)
 800043e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000442:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000444:	bf00      	nop
 8000446:	370c      	adds	r7, #12
 8000448:	46bd      	mov	sp, r7
 800044a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800044e:	4770      	bx	lr
 8000450:	40020000 	.word	0x40020000
 8000454:	40023800 	.word	0x40023800
 8000458:	40020400 	.word	0x40020400
 800045c:	40020800 	.word	0x40020800
 8000460:	40020c00 	.word	0x40020c00
 8000464:	40021000 	.word	0x40021000
 8000468:	40021400 	.word	0x40021400
 800046c:	40021800 	.word	0x40021800
 8000470:	40021c00 	.word	0x40021c00
 8000474:	40022000 	.word	0x40022000

08000478 <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000478:	b480      	push	{r7}
 800047a:	b085      	sub	sp, #20
 800047c:	af00      	add	r7, sp, #0
 800047e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; // temp register
 8000480:	2300      	movs	r3, #0
 8000482:	60fb      	str	r3, [r7, #12]

	// 1. configure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	795b      	ldrb	r3, [r3, #5]
 8000488:	2b03      	cmp	r3, #3
 800048a:	d81f      	bhi.n	80004cc <GPIO_Init+0x54>
	{
		// the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	795b      	ldrb	r3, [r3, #5]
 8000490:	461a      	mov	r2, r3
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	791b      	ldrb	r3, [r3, #4]
 8000496:	005b      	lsls	r3, r3, #1
 8000498:	fa02 f303 	lsl.w	r3, r2, r3
 800049c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clear
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	681a      	ldr	r2, [r3, #0]
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	791b      	ldrb	r3, [r3, #4]
 80004a8:	005b      	lsls	r3, r3, #1
 80004aa:	2103      	movs	r1, #3
 80004ac:	fa01 f303 	lsl.w	r3, r1, r3
 80004b0:	43db      	mvns	r3, r3
 80004b2:	4619      	mov	r1, r3
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	400a      	ands	r2, r1
 80004ba:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;	// setting
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	6819      	ldr	r1, [r3, #0]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	68fa      	ldr	r2, [r7, #12]
 80004c8:	430a      	orrs	r2, r1
 80004ca:	601a      	str	r2, [r3, #0]
	{
		// this part will code later (interrupt mode)
	}

	// 2. configure the speed
	temp = 0;
 80004cc:	2300      	movs	r3, #0
 80004ce:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	799b      	ldrb	r3, [r3, #6]
 80004d4:	461a      	mov	r2, r3
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	791b      	ldrb	r3, [r3, #4]
 80004da:	005b      	lsls	r3, r3, #1
 80004dc:	fa02 f303 	lsl.w	r3, r2, r3
 80004e0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clear
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	689a      	ldr	r2, [r3, #8]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	791b      	ldrb	r3, [r3, #4]
 80004ec:	005b      	lsls	r3, r3, #1
 80004ee:	2103      	movs	r1, #3
 80004f0:	fa01 f303 	lsl.w	r3, r1, r3
 80004f4:	43db      	mvns	r3, r3
 80004f6:	4619      	mov	r1, r3
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	400a      	ands	r2, r1
 80004fe:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;	// setting
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	6899      	ldr	r1, [r3, #8]
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	68fa      	ldr	r2, [r7, #12]
 800050c:	430a      	orrs	r2, r1
 800050e:	609a      	str	r2, [r3, #8]

	// 3. configure the pupd settings
	temp = 0;
 8000510:	2300      	movs	r3, #0
 8000512:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	79db      	ldrb	r3, [r3, #7]
 8000518:	461a      	mov	r2, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	791b      	ldrb	r3, [r3, #4]
 800051e:	005b      	lsls	r3, r3, #1
 8000520:	fa02 f303 	lsl.w	r3, r2, r3
 8000524:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clear
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	68da      	ldr	r2, [r3, #12]
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	791b      	ldrb	r3, [r3, #4]
 8000530:	005b      	lsls	r3, r3, #1
 8000532:	2103      	movs	r1, #3
 8000534:	fa01 f303 	lsl.w	r3, r1, r3
 8000538:	43db      	mvns	r3, r3
 800053a:	4619      	mov	r1, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	400a      	ands	r2, r1
 8000542:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;	// setting
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	68d9      	ldr	r1, [r3, #12]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	68fa      	ldr	r2, [r7, #12]
 8000550:	430a      	orrs	r2, r1
 8000552:	60da      	str	r2, [r3, #12]


	// 4. configure the optype
	temp = 0;
 8000554:	2300      	movs	r3, #0
 8000556:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	7a1b      	ldrb	r3, [r3, #8]
 800055c:	461a      	mov	r2, r3
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	791b      	ldrb	r3, [r3, #4]
 8000562:	fa02 f303 	lsl.w	r3, r2, r3
 8000566:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x01 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clear
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	685a      	ldr	r2, [r3, #4]
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	791b      	ldrb	r3, [r3, #4]
 8000572:	4619      	mov	r1, r3
 8000574:	2301      	movs	r3, #1
 8000576:	408b      	lsls	r3, r1
 8000578:	43db      	mvns	r3, r3
 800057a:	4619      	mov	r1, r3
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	400a      	ands	r2, r1
 8000582:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;	// setting
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	6859      	ldr	r1, [r3, #4]
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	68fa      	ldr	r2, [r7, #12]
 8000590:	430a      	orrs	r2, r1
 8000592:	605a      	str	r2, [r3, #4]

	// 5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	795b      	ldrb	r3, [r3, #5]
 8000598:	2b02      	cmp	r3, #2
 800059a:	d131      	bne.n	8000600 <GPIO_Init+0x188>
	{
		// configure the alt function register
		uint8_t temp1,temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	08db      	lsrs	r3, r3, #3
 80005a2:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	791b      	ldrb	r3, [r3, #4]
 80005a8:	f003 0307 	and.w	r3, r3, #7
 80005ac:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); // clearing
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	7afa      	ldrb	r2, [r7, #11]
 80005b4:	3208      	adds	r2, #8
 80005b6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005ba:	7abb      	ldrb	r3, [r7, #10]
 80005bc:	009b      	lsls	r3, r3, #2
 80005be:	220f      	movs	r2, #15
 80005c0:	fa02 f303 	lsl.w	r3, r2, r3
 80005c4:	43db      	mvns	r3, r3
 80005c6:	4618      	mov	r0, r3
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	7afa      	ldrb	r2, [r7, #11]
 80005ce:	4001      	ands	r1, r0
 80005d0:	3208      	adds	r2, #8
 80005d2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2); // setting
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	7afa      	ldrb	r2, [r7, #11]
 80005dc:	3208      	adds	r2, #8
 80005de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	7a5b      	ldrb	r3, [r3, #9]
 80005e6:	461a      	mov	r2, r3
 80005e8:	7abb      	ldrb	r3, [r7, #10]
 80005ea:	009b      	lsls	r3, r3, #2
 80005ec:	fa02 f303 	lsl.w	r3, r2, r3
 80005f0:	4618      	mov	r0, r3
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	7afa      	ldrb	r2, [r7, #11]
 80005f8:	4301      	orrs	r1, r0
 80005fa:	3208      	adds	r2, #8
 80005fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000600:	bf00      	nop
 8000602:	3714      	adds	r7, #20
 8000604:	46bd      	mov	sp, r7
 8000606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060a:	4770      	bx	lr

0800060c <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
	pGPIOx->ODR = Value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800060c:	b480      	push	{r7}
 800060e:	b083      	sub	sp, #12
 8000610:	af00      	add	r7, sp, #0
 8000612:	6078      	str	r0, [r7, #4]
 8000614:	460b      	mov	r3, r1
 8000616:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	695b      	ldr	r3, [r3, #20]
 800061c:	78fa      	ldrb	r2, [r7, #3]
 800061e:	2101      	movs	r1, #1
 8000620:	fa01 f202 	lsl.w	r2, r1, r2
 8000624:	405a      	eors	r2, r3
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	615a      	str	r2, [r3, #20]
}
 800062a:	bf00      	nop
 800062c:	370c      	adds	r7, #12
 800062e:	46bd      	mov	sp, r7
 8000630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000634:	4770      	bx	lr
	...

08000638 <__libc_init_array>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	4d0d      	ldr	r5, [pc, #52]	; (8000670 <__libc_init_array+0x38>)
 800063c:	4c0d      	ldr	r4, [pc, #52]	; (8000674 <__libc_init_array+0x3c>)
 800063e:	1b64      	subs	r4, r4, r5
 8000640:	10a4      	asrs	r4, r4, #2
 8000642:	2600      	movs	r6, #0
 8000644:	42a6      	cmp	r6, r4
 8000646:	d109      	bne.n	800065c <__libc_init_array+0x24>
 8000648:	4d0b      	ldr	r5, [pc, #44]	; (8000678 <__libc_init_array+0x40>)
 800064a:	4c0c      	ldr	r4, [pc, #48]	; (800067c <__libc_init_array+0x44>)
 800064c:	f000 f818 	bl	8000680 <_init>
 8000650:	1b64      	subs	r4, r4, r5
 8000652:	10a4      	asrs	r4, r4, #2
 8000654:	2600      	movs	r6, #0
 8000656:	42a6      	cmp	r6, r4
 8000658:	d105      	bne.n	8000666 <__libc_init_array+0x2e>
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000660:	4798      	blx	r3
 8000662:	3601      	adds	r6, #1
 8000664:	e7ee      	b.n	8000644 <__libc_init_array+0xc>
 8000666:	f855 3b04 	ldr.w	r3, [r5], #4
 800066a:	4798      	blx	r3
 800066c:	3601      	adds	r6, #1
 800066e:	e7f2      	b.n	8000656 <__libc_init_array+0x1e>
 8000670:	08000698 	.word	0x08000698
 8000674:	08000698 	.word	0x08000698
 8000678:	08000698 	.word	0x08000698
 800067c:	0800069c 	.word	0x0800069c

08000680 <_init>:
 8000680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000682:	bf00      	nop
 8000684:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000686:	bc08      	pop	{r3}
 8000688:	469e      	mov	lr, r3
 800068a:	4770      	bx	lr

0800068c <_fini>:
 800068c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800068e:	bf00      	nop
 8000690:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000692:	bc08      	pop	{r3}
 8000694:	469e      	mov	lr, r3
 8000696:	4770      	bx	lr
