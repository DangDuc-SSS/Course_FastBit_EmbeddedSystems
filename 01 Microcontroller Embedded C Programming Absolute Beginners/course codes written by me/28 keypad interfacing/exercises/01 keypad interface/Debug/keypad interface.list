
keypad interface.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000133c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  080014ec  080014ec  000114ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015a0  080015a0  00020074  2**0
                  CONTENTS
  4 .ARM          00000000  080015a0  080015a0  00020074  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015a0  080015a0  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015a0  080015a0  000115a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015a4  080015a4  000115a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  080015a8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020074  2**0
                  CONTENTS
 10 .bss          00000038  20000074  20000074  00020074  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200000ac  200000ac  00020074  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000249a  00000000  00000000  000200a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000668  00000000  00000000  0002253e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  00022ba8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e8  00000000  00000000  00022cc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c20  00000000  00000000  00022db0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000013cb  00000000  00000000  000259d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000981c  00000000  00000000  00026d9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000305b7  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000b6c  00000000  00000000  0003060c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000074 	.word	0x20000074
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080014d4 	.word	0x080014d4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000078 	.word	0x20000078
 80001ec:	080014d4 	.word	0x080014d4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
uint8_t characters[4][4] = {{'1','2','3','A'},{'4','5','6','B'},{'7','8','9','C'},{'*','0','#','D'}};
int main(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b088      	sub	sp, #32
 8000294:	af00      	add	r7, sp, #0
	uint32_t volatile *const pCtrlReg = (uint32_t*)AHB1ENR;
 8000296:	4b3c      	ldr	r3, [pc, #240]	; (8000388 <main+0xf8>)
 8000298:	617b      	str	r3, [r7, #20]
	uint32_t volatile *const pGPIOD_ModeReg = (uint32_t*)GPIOD_MODE;
 800029a:	4b3c      	ldr	r3, [pc, #240]	; (800038c <main+0xfc>)
 800029c:	613b      	str	r3, [r7, #16]
	uint32_t volatile *const pGPIOD_OutputReg = (uint32_t*)GPIOD_OUTPUT;
 800029e:	4b3c      	ldr	r3, [pc, #240]	; (8000390 <main+0x100>)
 80002a0:	60fb      	str	r3, [r7, #12]
	uint32_t volatile *const pGPIOD_InputReg = (uint32_t*)GPIOD_INPUT;
 80002a2:	4b3c      	ldr	r3, [pc, #240]	; (8000394 <main+0x104>)
 80002a4:	60bb      	str	r3, [r7, #8]
	uint32_t volatile *const pGPIOD_InputypeReg = (uint32_t*)GPIOD_PULLUP_PULLDOWN;
 80002a6:	4b3c      	ldr	r3, [pc, #240]	; (8000398 <main+0x108>)
 80002a8:	607b      	str	r3, [r7, #4]
	uint8_t volatile val = 1;
 80002aa:	2301      	movs	r3, #1
 80002ac:	70fb      	strb	r3, [r7, #3]
	// enable the register D clock
	*pCtrlReg |= 1<<3;
 80002ae:	697b      	ldr	r3, [r7, #20]
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	f043 0208 	orr.w	r2, r3, #8
 80002b6:	697b      	ldr	r3, [r7, #20]
 80002b8:	601a      	str	r2, [r3, #0]

	// configure PD8,PD9,PD10,PD11 as input pull up
	*pGPIOD_ModeReg &= ~(0xFF << 16); // make it as input
 80002ba:	693b      	ldr	r3, [r7, #16]
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f423 027f 	bic.w	r2, r3, #16711680	; 0xff0000
 80002c2:	693b      	ldr	r3, [r7, #16]
 80002c4:	601a      	str	r2, [r3, #0]
	*pGPIOD_InputypeReg &= ~(0xFF << 16); // make it as pull up
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	f423 027f 	bic.w	r2, r3, #16711680	; 0xff0000
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	601a      	str	r2, [r3, #0]
	*pGPIOD_InputypeReg |= (0x55 << 16);
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f443 02aa 	orr.w	r2, r3, #5570560	; 0x550000
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	601a      	str	r2, [r3, #0]

	// configure PD0,PD1,PD2,PD3 as output
	*pGPIOD_ModeReg &= ~(0xFF); // make it as output
 80002de:	693b      	ldr	r3, [r7, #16]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 80002e6:	693b      	ldr	r3, [r7, #16]
 80002e8:	601a      	str	r2, [r3, #0]
	*pGPIOD_ModeReg |= 0x55;
 80002ea:	693b      	ldr	r3, [r7, #16]
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	f043 0255 	orr.w	r2, r3, #85	; 0x55
 80002f2:	693b      	ldr	r3, [r7, #16]
 80002f4:	601a      	str	r2, [r3, #0]

	while(1){
		// make all rows HIGH
		*pGPIOD_OutputReg |= 0x0F;
 80002f6:	68fb      	ldr	r3, [r7, #12]
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	f043 020f 	orr.w	r2, r3, #15
 80002fe:	68fb      	ldr	r3, [r7, #12]
 8000300:	601a      	str	r2, [r3, #0]

		// make every row low and check for the column
		for(int i = 0; i < 4;i++){
 8000302:	2300      	movs	r3, #0
 8000304:	61fb      	str	r3, [r7, #28]
 8000306:	e03b      	b.n	8000380 <main+0xf0>
			*pGPIOD_OutputReg &= ~(1<<i);	// make row low at a time
 8000308:	68fb      	ldr	r3, [r7, #12]
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	2101      	movs	r1, #1
 800030e:	69fa      	ldr	r2, [r7, #28]
 8000310:	fa01 f202 	lsl.w	r2, r1, r2
 8000314:	43d2      	mvns	r2, r2
 8000316:	401a      	ands	r2, r3
 8000318:	68fb      	ldr	r3, [r7, #12]
 800031a:	601a      	str	r2, [r3, #0]
			for(int j = 8; j < 12;j++){
 800031c:	2308      	movs	r3, #8
 800031e:	61bb      	str	r3, [r7, #24]
 8000320:	e01f      	b.n	8000362 <main+0xd2>
				val = (*pGPIOD_InputReg >> j) & 1;
 8000322:	68bb      	ldr	r3, [r7, #8]
 8000324:	681a      	ldr	r2, [r3, #0]
 8000326:	69bb      	ldr	r3, [r7, #24]
 8000328:	fa22 f303 	lsr.w	r3, r2, r3
 800032c:	b2db      	uxtb	r3, r3
 800032e:	f003 0301 	and.w	r3, r3, #1
 8000332:	b2db      	uxtb	r3, r3
 8000334:	70fb      	strb	r3, [r7, #3]
				if(val == 0){
 8000336:	78fb      	ldrb	r3, [r7, #3]
 8000338:	b2db      	uxtb	r3, r3
 800033a:	2b00      	cmp	r3, #0
 800033c:	d10e      	bne.n	800035c <main+0xcc>
					softwareDelay(200);
 800033e:	20c8      	movs	r0, #200	; 0xc8
 8000340:	f000 f830 	bl	80003a4 <softwareDelay>
					printf("Key pressed which is %c\n",characters[i][j-8]);
 8000344:	69bb      	ldr	r3, [r7, #24]
 8000346:	3b08      	subs	r3, #8
 8000348:	4914      	ldr	r1, [pc, #80]	; (800039c <main+0x10c>)
 800034a:	69fa      	ldr	r2, [r7, #28]
 800034c:	0092      	lsls	r2, r2, #2
 800034e:	440a      	add	r2, r1
 8000350:	4413      	add	r3, r2
 8000352:	781b      	ldrb	r3, [r3, #0]
 8000354:	4619      	mov	r1, r3
 8000356:	4812      	ldr	r0, [pc, #72]	; (80003a0 <main+0x110>)
 8000358:	f000 f966 	bl	8000628 <iprintf>
			for(int j = 8; j < 12;j++){
 800035c:	69bb      	ldr	r3, [r7, #24]
 800035e:	3301      	adds	r3, #1
 8000360:	61bb      	str	r3, [r7, #24]
 8000362:	69bb      	ldr	r3, [r7, #24]
 8000364:	2b0b      	cmp	r3, #11
 8000366:	dddc      	ble.n	8000322 <main+0x92>
				}
			}
			*pGPIOD_OutputReg |= (1<<i);	// make row high back
 8000368:	68fb      	ldr	r3, [r7, #12]
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	2101      	movs	r1, #1
 800036e:	69fa      	ldr	r2, [r7, #28]
 8000370:	fa01 f202 	lsl.w	r2, r1, r2
 8000374:	431a      	orrs	r2, r3
 8000376:	68fb      	ldr	r3, [r7, #12]
 8000378:	601a      	str	r2, [r3, #0]
		for(int i = 0; i < 4;i++){
 800037a:	69fb      	ldr	r3, [r7, #28]
 800037c:	3301      	adds	r3, #1
 800037e:	61fb      	str	r3, [r7, #28]
 8000380:	69fb      	ldr	r3, [r7, #28]
 8000382:	2b03      	cmp	r3, #3
 8000384:	ddc0      	ble.n	8000308 <main+0x78>
		*pGPIOD_OutputReg |= 0x0F;
 8000386:	e7b6      	b.n	80002f6 <main+0x66>
 8000388:	40023830 	.word	0x40023830
 800038c:	40020c00 	.word	0x40020c00
 8000390:	40020c14 	.word	0x40020c14
 8000394:	40020c10 	.word	0x40020c10
 8000398:	40020c0c 	.word	0x40020c0c
 800039c:	20000000 	.word	0x20000000
 80003a0:	080014ec 	.word	0x080014ec

080003a4 <softwareDelay>:
    /* Loop forever */
	for(;;);
}

void softwareDelay(uint32_t timeInMillis)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b085      	sub	sp, #20
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
	for(uint32_t i = 0;  i < timeInMillis * 1600 ; i++);
 80003ac:	2300      	movs	r3, #0
 80003ae:	60fb      	str	r3, [r7, #12]
 80003b0:	e002      	b.n	80003b8 <softwareDelay+0x14>
 80003b2:	68fb      	ldr	r3, [r7, #12]
 80003b4:	3301      	adds	r3, #1
 80003b6:	60fb      	str	r3, [r7, #12]
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	f44f 62c8 	mov.w	r2, #1600	; 0x640
 80003be:	fb02 f303 	mul.w	r3, r2, r3
 80003c2:	68fa      	ldr	r2, [r7, #12]
 80003c4:	429a      	cmp	r2, r3
 80003c6:	d3f4      	bcc.n	80003b2 <softwareDelay+0xe>
}
 80003c8:	bf00      	nop
 80003ca:	bf00      	nop
 80003cc:	3714      	adds	r7, #20
 80003ce:	46bd      	mov	sp, r7
 80003d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d4:	4770      	bx	lr
	...

080003d8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003d8:	b480      	push	{r7}
 80003da:	b083      	sub	sp, #12
 80003dc:	af00      	add	r7, sp, #0
 80003de:	4603      	mov	r3, r0
 80003e0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003e2:	4b0f      	ldr	r3, [pc, #60]	; (8000420 <ITM_SendChar+0x48>)
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	4a0e      	ldr	r2, [pc, #56]	; (8000420 <ITM_SendChar+0x48>)
 80003e8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003ec:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003ee:	4b0d      	ldr	r3, [pc, #52]	; (8000424 <ITM_SendChar+0x4c>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a0c      	ldr	r2, [pc, #48]	; (8000424 <ITM_SendChar+0x4c>)
 80003f4:	f043 0301 	orr.w	r3, r3, #1
 80003f8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003fa:	bf00      	nop
 80003fc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	f003 0301 	and.w	r3, r3, #1
 8000406:	2b00      	cmp	r3, #0
 8000408:	d0f8      	beq.n	80003fc <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800040a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800040e:	79fb      	ldrb	r3, [r7, #7]
 8000410:	6013      	str	r3, [r2, #0]
}
 8000412:	bf00      	nop
 8000414:	370c      	adds	r7, #12
 8000416:	46bd      	mov	sp, r7
 8000418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041c:	4770      	bx	lr
 800041e:	bf00      	nop
 8000420:	e000edfc 	.word	0xe000edfc
 8000424:	e0000e00 	.word	0xe0000e00

08000428 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000428:	b580      	push	{r7, lr}
 800042a:	b086      	sub	sp, #24
 800042c:	af00      	add	r7, sp, #0
 800042e:	60f8      	str	r0, [r7, #12]
 8000430:	60b9      	str	r1, [r7, #8]
 8000432:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000434:	2300      	movs	r3, #0
 8000436:	617b      	str	r3, [r7, #20]
 8000438:	e00a      	b.n	8000450 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800043a:	f3af 8000 	nop.w
 800043e:	4601      	mov	r1, r0
 8000440:	68bb      	ldr	r3, [r7, #8]
 8000442:	1c5a      	adds	r2, r3, #1
 8000444:	60ba      	str	r2, [r7, #8]
 8000446:	b2ca      	uxtb	r2, r1
 8000448:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044a:	697b      	ldr	r3, [r7, #20]
 800044c:	3301      	adds	r3, #1
 800044e:	617b      	str	r3, [r7, #20]
 8000450:	697a      	ldr	r2, [r7, #20]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	429a      	cmp	r2, r3
 8000456:	dbf0      	blt.n	800043a <_read+0x12>
	}

return len;
 8000458:	687b      	ldr	r3, [r7, #4]
}
 800045a:	4618      	mov	r0, r3
 800045c:	3718      	adds	r7, #24
 800045e:	46bd      	mov	sp, r7
 8000460:	bd80      	pop	{r7, pc}

08000462 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000462:	b580      	push	{r7, lr}
 8000464:	b086      	sub	sp, #24
 8000466:	af00      	add	r7, sp, #0
 8000468:	60f8      	str	r0, [r7, #12]
 800046a:	60b9      	str	r1, [r7, #8]
 800046c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800046e:	2300      	movs	r3, #0
 8000470:	617b      	str	r3, [r7, #20]
 8000472:	e009      	b.n	8000488 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000474:	68bb      	ldr	r3, [r7, #8]
 8000476:	1c5a      	adds	r2, r3, #1
 8000478:	60ba      	str	r2, [r7, #8]
 800047a:	781b      	ldrb	r3, [r3, #0]
 800047c:	4618      	mov	r0, r3
 800047e:	f7ff ffab 	bl	80003d8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000482:	697b      	ldr	r3, [r7, #20]
 8000484:	3301      	adds	r3, #1
 8000486:	617b      	str	r3, [r7, #20]
 8000488:	697a      	ldr	r2, [r7, #20]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	429a      	cmp	r2, r3
 800048e:	dbf1      	blt.n	8000474 <_write+0x12>
	}
	return len;
 8000490:	687b      	ldr	r3, [r7, #4]
}
 8000492:	4618      	mov	r0, r3
 8000494:	3718      	adds	r7, #24
 8000496:	46bd      	mov	sp, r7
 8000498:	bd80      	pop	{r7, pc}

0800049a <_close>:

int _close(int file)
{
 800049a:	b480      	push	{r7}
 800049c:	b083      	sub	sp, #12
 800049e:	af00      	add	r7, sp, #0
 80004a0:	6078      	str	r0, [r7, #4]
	return -1;
 80004a2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004a6:	4618      	mov	r0, r3
 80004a8:	370c      	adds	r7, #12
 80004aa:	46bd      	mov	sp, r7
 80004ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b0:	4770      	bx	lr

080004b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004b2:	b480      	push	{r7}
 80004b4:	b083      	sub	sp, #12
 80004b6:	af00      	add	r7, sp, #0
 80004b8:	6078      	str	r0, [r7, #4]
 80004ba:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004bc:	683b      	ldr	r3, [r7, #0]
 80004be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004c2:	605a      	str	r2, [r3, #4]
	return 0;
 80004c4:	2300      	movs	r3, #0
}
 80004c6:	4618      	mov	r0, r3
 80004c8:	370c      	adds	r7, #12
 80004ca:	46bd      	mov	sp, r7
 80004cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d0:	4770      	bx	lr

080004d2 <_isatty>:

int _isatty(int file)
{
 80004d2:	b480      	push	{r7}
 80004d4:	b083      	sub	sp, #12
 80004d6:	af00      	add	r7, sp, #0
 80004d8:	6078      	str	r0, [r7, #4]
	return 1;
 80004da:	2301      	movs	r3, #1
}
 80004dc:	4618      	mov	r0, r3
 80004de:	370c      	adds	r7, #12
 80004e0:	46bd      	mov	sp, r7
 80004e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e6:	4770      	bx	lr

080004e8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004e8:	b480      	push	{r7}
 80004ea:	b085      	sub	sp, #20
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	60f8      	str	r0, [r7, #12]
 80004f0:	60b9      	str	r1, [r7, #8]
 80004f2:	607a      	str	r2, [r7, #4]
	return 0;
 80004f4:	2300      	movs	r3, #0
}
 80004f6:	4618      	mov	r0, r3
 80004f8:	3714      	adds	r7, #20
 80004fa:	46bd      	mov	sp, r7
 80004fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000500:	4770      	bx	lr
	...

08000504 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000504:	b580      	push	{r7, lr}
 8000506:	b086      	sub	sp, #24
 8000508:	af00      	add	r7, sp, #0
 800050a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800050c:	4a14      	ldr	r2, [pc, #80]	; (8000560 <_sbrk+0x5c>)
 800050e:	4b15      	ldr	r3, [pc, #84]	; (8000564 <_sbrk+0x60>)
 8000510:	1ad3      	subs	r3, r2, r3
 8000512:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000514:	697b      	ldr	r3, [r7, #20]
 8000516:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000518:	4b13      	ldr	r3, [pc, #76]	; (8000568 <_sbrk+0x64>)
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	2b00      	cmp	r3, #0
 800051e:	d102      	bne.n	8000526 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000520:	4b11      	ldr	r3, [pc, #68]	; (8000568 <_sbrk+0x64>)
 8000522:	4a12      	ldr	r2, [pc, #72]	; (800056c <_sbrk+0x68>)
 8000524:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000526:	4b10      	ldr	r3, [pc, #64]	; (8000568 <_sbrk+0x64>)
 8000528:	681a      	ldr	r2, [r3, #0]
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	4413      	add	r3, r2
 800052e:	693a      	ldr	r2, [r7, #16]
 8000530:	429a      	cmp	r2, r3
 8000532:	d207      	bcs.n	8000544 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000534:	f000 f846 	bl	80005c4 <__errno>
 8000538:	4603      	mov	r3, r0
 800053a:	220c      	movs	r2, #12
 800053c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800053e:	f04f 33ff 	mov.w	r3, #4294967295
 8000542:	e009      	b.n	8000558 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000544:	4b08      	ldr	r3, [pc, #32]	; (8000568 <_sbrk+0x64>)
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800054a:	4b07      	ldr	r3, [pc, #28]	; (8000568 <_sbrk+0x64>)
 800054c:	681a      	ldr	r2, [r3, #0]
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	4413      	add	r3, r2
 8000552:	4a05      	ldr	r2, [pc, #20]	; (8000568 <_sbrk+0x64>)
 8000554:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000556:	68fb      	ldr	r3, [r7, #12]
}
 8000558:	4618      	mov	r0, r3
 800055a:	3718      	adds	r7, #24
 800055c:	46bd      	mov	sp, r7
 800055e:	bd80      	pop	{r7, pc}
 8000560:	20020000 	.word	0x20020000
 8000564:	00000400 	.word	0x00000400
 8000568:	20000090 	.word	0x20000090
 800056c:	200000b0 	.word	0x200000b0

08000570 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000570:	480d      	ldr	r0, [pc, #52]	; (80005a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000572:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000574:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000578:	480c      	ldr	r0, [pc, #48]	; (80005ac <LoopForever+0x6>)
  ldr r1, =_edata
 800057a:	490d      	ldr	r1, [pc, #52]	; (80005b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800057c:	4a0d      	ldr	r2, [pc, #52]	; (80005b4 <LoopForever+0xe>)
  movs r3, #0
 800057e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000580:	e002      	b.n	8000588 <LoopCopyDataInit>

08000582 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000582:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000584:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000586:	3304      	adds	r3, #4

08000588 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000588:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800058a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800058c:	d3f9      	bcc.n	8000582 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800058e:	4a0a      	ldr	r2, [pc, #40]	; (80005b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000590:	4c0a      	ldr	r4, [pc, #40]	; (80005bc <LoopForever+0x16>)
  movs r3, #0
 8000592:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000594:	e001      	b.n	800059a <LoopFillZerobss>

08000596 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000596:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000598:	3204      	adds	r2, #4

0800059a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800059a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800059c:	d3fb      	bcc.n	8000596 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800059e:	f000 f817 	bl	80005d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005a2:	f7ff fe75 	bl	8000290 <main>

080005a6 <LoopForever>:

LoopForever:
    b LoopForever
 80005a6:	e7fe      	b.n	80005a6 <LoopForever>
  ldr   r0, =_estack
 80005a8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005b0:	20000074 	.word	0x20000074
  ldr r2, =_sidata
 80005b4:	080015a8 	.word	0x080015a8
  ldr r2, =_sbss
 80005b8:	20000074 	.word	0x20000074
  ldr r4, =_ebss
 80005bc:	200000ac 	.word	0x200000ac

080005c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005c0:	e7fe      	b.n	80005c0 <ADC_IRQHandler>
	...

080005c4 <__errno>:
 80005c4:	4b01      	ldr	r3, [pc, #4]	; (80005cc <__errno+0x8>)
 80005c6:	6818      	ldr	r0, [r3, #0]
 80005c8:	4770      	bx	lr
 80005ca:	bf00      	nop
 80005cc:	20000010 	.word	0x20000010

080005d0 <__libc_init_array>:
 80005d0:	b570      	push	{r4, r5, r6, lr}
 80005d2:	4d0d      	ldr	r5, [pc, #52]	; (8000608 <__libc_init_array+0x38>)
 80005d4:	4c0d      	ldr	r4, [pc, #52]	; (800060c <__libc_init_array+0x3c>)
 80005d6:	1b64      	subs	r4, r4, r5
 80005d8:	10a4      	asrs	r4, r4, #2
 80005da:	2600      	movs	r6, #0
 80005dc:	42a6      	cmp	r6, r4
 80005de:	d109      	bne.n	80005f4 <__libc_init_array+0x24>
 80005e0:	4d0b      	ldr	r5, [pc, #44]	; (8000610 <__libc_init_array+0x40>)
 80005e2:	4c0c      	ldr	r4, [pc, #48]	; (8000614 <__libc_init_array+0x44>)
 80005e4:	f000 ff76 	bl	80014d4 <_init>
 80005e8:	1b64      	subs	r4, r4, r5
 80005ea:	10a4      	asrs	r4, r4, #2
 80005ec:	2600      	movs	r6, #0
 80005ee:	42a6      	cmp	r6, r4
 80005f0:	d105      	bne.n	80005fe <__libc_init_array+0x2e>
 80005f2:	bd70      	pop	{r4, r5, r6, pc}
 80005f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80005f8:	4798      	blx	r3
 80005fa:	3601      	adds	r6, #1
 80005fc:	e7ee      	b.n	80005dc <__libc_init_array+0xc>
 80005fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000602:	4798      	blx	r3
 8000604:	3601      	adds	r6, #1
 8000606:	e7f2      	b.n	80005ee <__libc_init_array+0x1e>
 8000608:	080015a0 	.word	0x080015a0
 800060c:	080015a0 	.word	0x080015a0
 8000610:	080015a0 	.word	0x080015a0
 8000614:	080015a4 	.word	0x080015a4

08000618 <memset>:
 8000618:	4402      	add	r2, r0
 800061a:	4603      	mov	r3, r0
 800061c:	4293      	cmp	r3, r2
 800061e:	d100      	bne.n	8000622 <memset+0xa>
 8000620:	4770      	bx	lr
 8000622:	f803 1b01 	strb.w	r1, [r3], #1
 8000626:	e7f9      	b.n	800061c <memset+0x4>

08000628 <iprintf>:
 8000628:	b40f      	push	{r0, r1, r2, r3}
 800062a:	4b0a      	ldr	r3, [pc, #40]	; (8000654 <iprintf+0x2c>)
 800062c:	b513      	push	{r0, r1, r4, lr}
 800062e:	681c      	ldr	r4, [r3, #0]
 8000630:	b124      	cbz	r4, 800063c <iprintf+0x14>
 8000632:	69a3      	ldr	r3, [r4, #24]
 8000634:	b913      	cbnz	r3, 800063c <iprintf+0x14>
 8000636:	4620      	mov	r0, r4
 8000638:	f000 f866 	bl	8000708 <__sinit>
 800063c:	ab05      	add	r3, sp, #20
 800063e:	9a04      	ldr	r2, [sp, #16]
 8000640:	68a1      	ldr	r1, [r4, #8]
 8000642:	9301      	str	r3, [sp, #4]
 8000644:	4620      	mov	r0, r4
 8000646:	f000 f983 	bl	8000950 <_vfiprintf_r>
 800064a:	b002      	add	sp, #8
 800064c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000650:	b004      	add	sp, #16
 8000652:	4770      	bx	lr
 8000654:	20000010 	.word	0x20000010

08000658 <std>:
 8000658:	2300      	movs	r3, #0
 800065a:	b510      	push	{r4, lr}
 800065c:	4604      	mov	r4, r0
 800065e:	e9c0 3300 	strd	r3, r3, [r0]
 8000662:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000666:	6083      	str	r3, [r0, #8]
 8000668:	8181      	strh	r1, [r0, #12]
 800066a:	6643      	str	r3, [r0, #100]	; 0x64
 800066c:	81c2      	strh	r2, [r0, #14]
 800066e:	6183      	str	r3, [r0, #24]
 8000670:	4619      	mov	r1, r3
 8000672:	2208      	movs	r2, #8
 8000674:	305c      	adds	r0, #92	; 0x5c
 8000676:	f7ff ffcf 	bl	8000618 <memset>
 800067a:	4b05      	ldr	r3, [pc, #20]	; (8000690 <std+0x38>)
 800067c:	6263      	str	r3, [r4, #36]	; 0x24
 800067e:	4b05      	ldr	r3, [pc, #20]	; (8000694 <std+0x3c>)
 8000680:	62a3      	str	r3, [r4, #40]	; 0x28
 8000682:	4b05      	ldr	r3, [pc, #20]	; (8000698 <std+0x40>)
 8000684:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000686:	4b05      	ldr	r3, [pc, #20]	; (800069c <std+0x44>)
 8000688:	6224      	str	r4, [r4, #32]
 800068a:	6323      	str	r3, [r4, #48]	; 0x30
 800068c:	bd10      	pop	{r4, pc}
 800068e:	bf00      	nop
 8000690:	08000ef9 	.word	0x08000ef9
 8000694:	08000f1b 	.word	0x08000f1b
 8000698:	08000f53 	.word	0x08000f53
 800069c:	08000f77 	.word	0x08000f77

080006a0 <_cleanup_r>:
 80006a0:	4901      	ldr	r1, [pc, #4]	; (80006a8 <_cleanup_r+0x8>)
 80006a2:	f000 b8af 	b.w	8000804 <_fwalk_reent>
 80006a6:	bf00      	nop
 80006a8:	08001251 	.word	0x08001251

080006ac <__sfmoreglue>:
 80006ac:	b570      	push	{r4, r5, r6, lr}
 80006ae:	1e4a      	subs	r2, r1, #1
 80006b0:	2568      	movs	r5, #104	; 0x68
 80006b2:	4355      	muls	r5, r2
 80006b4:	460e      	mov	r6, r1
 80006b6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006ba:	f000 f8c5 	bl	8000848 <_malloc_r>
 80006be:	4604      	mov	r4, r0
 80006c0:	b140      	cbz	r0, 80006d4 <__sfmoreglue+0x28>
 80006c2:	2100      	movs	r1, #0
 80006c4:	e9c0 1600 	strd	r1, r6, [r0]
 80006c8:	300c      	adds	r0, #12
 80006ca:	60a0      	str	r0, [r4, #8]
 80006cc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006d0:	f7ff ffa2 	bl	8000618 <memset>
 80006d4:	4620      	mov	r0, r4
 80006d6:	bd70      	pop	{r4, r5, r6, pc}

080006d8 <__sfp_lock_acquire>:
 80006d8:	4801      	ldr	r0, [pc, #4]	; (80006e0 <__sfp_lock_acquire+0x8>)
 80006da:	f000 b8b3 	b.w	8000844 <__retarget_lock_acquire_recursive>
 80006de:	bf00      	nop
 80006e0:	200000a4 	.word	0x200000a4

080006e4 <__sfp_lock_release>:
 80006e4:	4801      	ldr	r0, [pc, #4]	; (80006ec <__sfp_lock_release+0x8>)
 80006e6:	f000 b8ae 	b.w	8000846 <__retarget_lock_release_recursive>
 80006ea:	bf00      	nop
 80006ec:	200000a4 	.word	0x200000a4

080006f0 <__sinit_lock_acquire>:
 80006f0:	4801      	ldr	r0, [pc, #4]	; (80006f8 <__sinit_lock_acquire+0x8>)
 80006f2:	f000 b8a7 	b.w	8000844 <__retarget_lock_acquire_recursive>
 80006f6:	bf00      	nop
 80006f8:	2000009f 	.word	0x2000009f

080006fc <__sinit_lock_release>:
 80006fc:	4801      	ldr	r0, [pc, #4]	; (8000704 <__sinit_lock_release+0x8>)
 80006fe:	f000 b8a2 	b.w	8000846 <__retarget_lock_release_recursive>
 8000702:	bf00      	nop
 8000704:	2000009f 	.word	0x2000009f

08000708 <__sinit>:
 8000708:	b510      	push	{r4, lr}
 800070a:	4604      	mov	r4, r0
 800070c:	f7ff fff0 	bl	80006f0 <__sinit_lock_acquire>
 8000710:	69a3      	ldr	r3, [r4, #24]
 8000712:	b11b      	cbz	r3, 800071c <__sinit+0x14>
 8000714:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000718:	f7ff bff0 	b.w	80006fc <__sinit_lock_release>
 800071c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000720:	6523      	str	r3, [r4, #80]	; 0x50
 8000722:	4b13      	ldr	r3, [pc, #76]	; (8000770 <__sinit+0x68>)
 8000724:	4a13      	ldr	r2, [pc, #76]	; (8000774 <__sinit+0x6c>)
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	62a2      	str	r2, [r4, #40]	; 0x28
 800072a:	42a3      	cmp	r3, r4
 800072c:	bf04      	itt	eq
 800072e:	2301      	moveq	r3, #1
 8000730:	61a3      	streq	r3, [r4, #24]
 8000732:	4620      	mov	r0, r4
 8000734:	f000 f820 	bl	8000778 <__sfp>
 8000738:	6060      	str	r0, [r4, #4]
 800073a:	4620      	mov	r0, r4
 800073c:	f000 f81c 	bl	8000778 <__sfp>
 8000740:	60a0      	str	r0, [r4, #8]
 8000742:	4620      	mov	r0, r4
 8000744:	f000 f818 	bl	8000778 <__sfp>
 8000748:	2200      	movs	r2, #0
 800074a:	60e0      	str	r0, [r4, #12]
 800074c:	2104      	movs	r1, #4
 800074e:	6860      	ldr	r0, [r4, #4]
 8000750:	f7ff ff82 	bl	8000658 <std>
 8000754:	68a0      	ldr	r0, [r4, #8]
 8000756:	2201      	movs	r2, #1
 8000758:	2109      	movs	r1, #9
 800075a:	f7ff ff7d 	bl	8000658 <std>
 800075e:	68e0      	ldr	r0, [r4, #12]
 8000760:	2202      	movs	r2, #2
 8000762:	2112      	movs	r1, #18
 8000764:	f7ff ff78 	bl	8000658 <std>
 8000768:	2301      	movs	r3, #1
 800076a:	61a3      	str	r3, [r4, #24]
 800076c:	e7d2      	b.n	8000714 <__sinit+0xc>
 800076e:	bf00      	nop
 8000770:	08001508 	.word	0x08001508
 8000774:	080006a1 	.word	0x080006a1

08000778 <__sfp>:
 8000778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800077a:	4607      	mov	r7, r0
 800077c:	f7ff ffac 	bl	80006d8 <__sfp_lock_acquire>
 8000780:	4b1e      	ldr	r3, [pc, #120]	; (80007fc <__sfp+0x84>)
 8000782:	681e      	ldr	r6, [r3, #0]
 8000784:	69b3      	ldr	r3, [r6, #24]
 8000786:	b913      	cbnz	r3, 800078e <__sfp+0x16>
 8000788:	4630      	mov	r0, r6
 800078a:	f7ff ffbd 	bl	8000708 <__sinit>
 800078e:	3648      	adds	r6, #72	; 0x48
 8000790:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000794:	3b01      	subs	r3, #1
 8000796:	d503      	bpl.n	80007a0 <__sfp+0x28>
 8000798:	6833      	ldr	r3, [r6, #0]
 800079a:	b30b      	cbz	r3, 80007e0 <__sfp+0x68>
 800079c:	6836      	ldr	r6, [r6, #0]
 800079e:	e7f7      	b.n	8000790 <__sfp+0x18>
 80007a0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80007a4:	b9d5      	cbnz	r5, 80007dc <__sfp+0x64>
 80007a6:	4b16      	ldr	r3, [pc, #88]	; (8000800 <__sfp+0x88>)
 80007a8:	60e3      	str	r3, [r4, #12]
 80007aa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80007ae:	6665      	str	r5, [r4, #100]	; 0x64
 80007b0:	f000 f847 	bl	8000842 <__retarget_lock_init_recursive>
 80007b4:	f7ff ff96 	bl	80006e4 <__sfp_lock_release>
 80007b8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80007bc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80007c0:	6025      	str	r5, [r4, #0]
 80007c2:	61a5      	str	r5, [r4, #24]
 80007c4:	2208      	movs	r2, #8
 80007c6:	4629      	mov	r1, r5
 80007c8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007cc:	f7ff ff24 	bl	8000618 <memset>
 80007d0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007d4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007d8:	4620      	mov	r0, r4
 80007da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007dc:	3468      	adds	r4, #104	; 0x68
 80007de:	e7d9      	b.n	8000794 <__sfp+0x1c>
 80007e0:	2104      	movs	r1, #4
 80007e2:	4638      	mov	r0, r7
 80007e4:	f7ff ff62 	bl	80006ac <__sfmoreglue>
 80007e8:	4604      	mov	r4, r0
 80007ea:	6030      	str	r0, [r6, #0]
 80007ec:	2800      	cmp	r0, #0
 80007ee:	d1d5      	bne.n	800079c <__sfp+0x24>
 80007f0:	f7ff ff78 	bl	80006e4 <__sfp_lock_release>
 80007f4:	230c      	movs	r3, #12
 80007f6:	603b      	str	r3, [r7, #0]
 80007f8:	e7ee      	b.n	80007d8 <__sfp+0x60>
 80007fa:	bf00      	nop
 80007fc:	08001508 	.word	0x08001508
 8000800:	ffff0001 	.word	0xffff0001

08000804 <_fwalk_reent>:
 8000804:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000808:	4606      	mov	r6, r0
 800080a:	4688      	mov	r8, r1
 800080c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000810:	2700      	movs	r7, #0
 8000812:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000816:	f1b9 0901 	subs.w	r9, r9, #1
 800081a:	d505      	bpl.n	8000828 <_fwalk_reent+0x24>
 800081c:	6824      	ldr	r4, [r4, #0]
 800081e:	2c00      	cmp	r4, #0
 8000820:	d1f7      	bne.n	8000812 <_fwalk_reent+0xe>
 8000822:	4638      	mov	r0, r7
 8000824:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000828:	89ab      	ldrh	r3, [r5, #12]
 800082a:	2b01      	cmp	r3, #1
 800082c:	d907      	bls.n	800083e <_fwalk_reent+0x3a>
 800082e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000832:	3301      	adds	r3, #1
 8000834:	d003      	beq.n	800083e <_fwalk_reent+0x3a>
 8000836:	4629      	mov	r1, r5
 8000838:	4630      	mov	r0, r6
 800083a:	47c0      	blx	r8
 800083c:	4307      	orrs	r7, r0
 800083e:	3568      	adds	r5, #104	; 0x68
 8000840:	e7e9      	b.n	8000816 <_fwalk_reent+0x12>

08000842 <__retarget_lock_init_recursive>:
 8000842:	4770      	bx	lr

08000844 <__retarget_lock_acquire_recursive>:
 8000844:	4770      	bx	lr

08000846 <__retarget_lock_release_recursive>:
 8000846:	4770      	bx	lr

08000848 <_malloc_r>:
 8000848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084a:	1ccd      	adds	r5, r1, #3
 800084c:	f025 0503 	bic.w	r5, r5, #3
 8000850:	3508      	adds	r5, #8
 8000852:	2d0c      	cmp	r5, #12
 8000854:	bf38      	it	cc
 8000856:	250c      	movcc	r5, #12
 8000858:	2d00      	cmp	r5, #0
 800085a:	4606      	mov	r6, r0
 800085c:	db01      	blt.n	8000862 <_malloc_r+0x1a>
 800085e:	42a9      	cmp	r1, r5
 8000860:	d903      	bls.n	800086a <_malloc_r+0x22>
 8000862:	230c      	movs	r3, #12
 8000864:	6033      	str	r3, [r6, #0]
 8000866:	2000      	movs	r0, #0
 8000868:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800086a:	f000 fda3 	bl	80013b4 <__malloc_lock>
 800086e:	4921      	ldr	r1, [pc, #132]	; (80008f4 <_malloc_r+0xac>)
 8000870:	680a      	ldr	r2, [r1, #0]
 8000872:	4614      	mov	r4, r2
 8000874:	b99c      	cbnz	r4, 800089e <_malloc_r+0x56>
 8000876:	4f20      	ldr	r7, [pc, #128]	; (80008f8 <_malloc_r+0xb0>)
 8000878:	683b      	ldr	r3, [r7, #0]
 800087a:	b923      	cbnz	r3, 8000886 <_malloc_r+0x3e>
 800087c:	4621      	mov	r1, r4
 800087e:	4630      	mov	r0, r6
 8000880:	f000 fb2a 	bl	8000ed8 <_sbrk_r>
 8000884:	6038      	str	r0, [r7, #0]
 8000886:	4629      	mov	r1, r5
 8000888:	4630      	mov	r0, r6
 800088a:	f000 fb25 	bl	8000ed8 <_sbrk_r>
 800088e:	1c43      	adds	r3, r0, #1
 8000890:	d123      	bne.n	80008da <_malloc_r+0x92>
 8000892:	230c      	movs	r3, #12
 8000894:	6033      	str	r3, [r6, #0]
 8000896:	4630      	mov	r0, r6
 8000898:	f000 fd92 	bl	80013c0 <__malloc_unlock>
 800089c:	e7e3      	b.n	8000866 <_malloc_r+0x1e>
 800089e:	6823      	ldr	r3, [r4, #0]
 80008a0:	1b5b      	subs	r3, r3, r5
 80008a2:	d417      	bmi.n	80008d4 <_malloc_r+0x8c>
 80008a4:	2b0b      	cmp	r3, #11
 80008a6:	d903      	bls.n	80008b0 <_malloc_r+0x68>
 80008a8:	6023      	str	r3, [r4, #0]
 80008aa:	441c      	add	r4, r3
 80008ac:	6025      	str	r5, [r4, #0]
 80008ae:	e004      	b.n	80008ba <_malloc_r+0x72>
 80008b0:	6863      	ldr	r3, [r4, #4]
 80008b2:	42a2      	cmp	r2, r4
 80008b4:	bf0c      	ite	eq
 80008b6:	600b      	streq	r3, [r1, #0]
 80008b8:	6053      	strne	r3, [r2, #4]
 80008ba:	4630      	mov	r0, r6
 80008bc:	f000 fd80 	bl	80013c0 <__malloc_unlock>
 80008c0:	f104 000b 	add.w	r0, r4, #11
 80008c4:	1d23      	adds	r3, r4, #4
 80008c6:	f020 0007 	bic.w	r0, r0, #7
 80008ca:	1ac2      	subs	r2, r0, r3
 80008cc:	d0cc      	beq.n	8000868 <_malloc_r+0x20>
 80008ce:	1a1b      	subs	r3, r3, r0
 80008d0:	50a3      	str	r3, [r4, r2]
 80008d2:	e7c9      	b.n	8000868 <_malloc_r+0x20>
 80008d4:	4622      	mov	r2, r4
 80008d6:	6864      	ldr	r4, [r4, #4]
 80008d8:	e7cc      	b.n	8000874 <_malloc_r+0x2c>
 80008da:	1cc4      	adds	r4, r0, #3
 80008dc:	f024 0403 	bic.w	r4, r4, #3
 80008e0:	42a0      	cmp	r0, r4
 80008e2:	d0e3      	beq.n	80008ac <_malloc_r+0x64>
 80008e4:	1a21      	subs	r1, r4, r0
 80008e6:	4630      	mov	r0, r6
 80008e8:	f000 faf6 	bl	8000ed8 <_sbrk_r>
 80008ec:	3001      	adds	r0, #1
 80008ee:	d1dd      	bne.n	80008ac <_malloc_r+0x64>
 80008f0:	e7cf      	b.n	8000892 <_malloc_r+0x4a>
 80008f2:	bf00      	nop
 80008f4:	20000094 	.word	0x20000094
 80008f8:	20000098 	.word	0x20000098

080008fc <__sfputc_r>:
 80008fc:	6893      	ldr	r3, [r2, #8]
 80008fe:	3b01      	subs	r3, #1
 8000900:	2b00      	cmp	r3, #0
 8000902:	b410      	push	{r4}
 8000904:	6093      	str	r3, [r2, #8]
 8000906:	da08      	bge.n	800091a <__sfputc_r+0x1e>
 8000908:	6994      	ldr	r4, [r2, #24]
 800090a:	42a3      	cmp	r3, r4
 800090c:	db01      	blt.n	8000912 <__sfputc_r+0x16>
 800090e:	290a      	cmp	r1, #10
 8000910:	d103      	bne.n	800091a <__sfputc_r+0x1e>
 8000912:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000916:	f000 bb33 	b.w	8000f80 <__swbuf_r>
 800091a:	6813      	ldr	r3, [r2, #0]
 800091c:	1c58      	adds	r0, r3, #1
 800091e:	6010      	str	r0, [r2, #0]
 8000920:	7019      	strb	r1, [r3, #0]
 8000922:	4608      	mov	r0, r1
 8000924:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000928:	4770      	bx	lr

0800092a <__sfputs_r>:
 800092a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800092c:	4606      	mov	r6, r0
 800092e:	460f      	mov	r7, r1
 8000930:	4614      	mov	r4, r2
 8000932:	18d5      	adds	r5, r2, r3
 8000934:	42ac      	cmp	r4, r5
 8000936:	d101      	bne.n	800093c <__sfputs_r+0x12>
 8000938:	2000      	movs	r0, #0
 800093a:	e007      	b.n	800094c <__sfputs_r+0x22>
 800093c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000940:	463a      	mov	r2, r7
 8000942:	4630      	mov	r0, r6
 8000944:	f7ff ffda 	bl	80008fc <__sfputc_r>
 8000948:	1c43      	adds	r3, r0, #1
 800094a:	d1f3      	bne.n	8000934 <__sfputs_r+0xa>
 800094c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000950 <_vfiprintf_r>:
 8000950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000954:	460d      	mov	r5, r1
 8000956:	b09d      	sub	sp, #116	; 0x74
 8000958:	4614      	mov	r4, r2
 800095a:	4698      	mov	r8, r3
 800095c:	4606      	mov	r6, r0
 800095e:	b118      	cbz	r0, 8000968 <_vfiprintf_r+0x18>
 8000960:	6983      	ldr	r3, [r0, #24]
 8000962:	b90b      	cbnz	r3, 8000968 <_vfiprintf_r+0x18>
 8000964:	f7ff fed0 	bl	8000708 <__sinit>
 8000968:	4b89      	ldr	r3, [pc, #548]	; (8000b90 <_vfiprintf_r+0x240>)
 800096a:	429d      	cmp	r5, r3
 800096c:	d11b      	bne.n	80009a6 <_vfiprintf_r+0x56>
 800096e:	6875      	ldr	r5, [r6, #4]
 8000970:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000972:	07d9      	lsls	r1, r3, #31
 8000974:	d405      	bmi.n	8000982 <_vfiprintf_r+0x32>
 8000976:	89ab      	ldrh	r3, [r5, #12]
 8000978:	059a      	lsls	r2, r3, #22
 800097a:	d402      	bmi.n	8000982 <_vfiprintf_r+0x32>
 800097c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800097e:	f7ff ff61 	bl	8000844 <__retarget_lock_acquire_recursive>
 8000982:	89ab      	ldrh	r3, [r5, #12]
 8000984:	071b      	lsls	r3, r3, #28
 8000986:	d501      	bpl.n	800098c <_vfiprintf_r+0x3c>
 8000988:	692b      	ldr	r3, [r5, #16]
 800098a:	b9eb      	cbnz	r3, 80009c8 <_vfiprintf_r+0x78>
 800098c:	4629      	mov	r1, r5
 800098e:	4630      	mov	r0, r6
 8000990:	f000 fb5a 	bl	8001048 <__swsetup_r>
 8000994:	b1c0      	cbz	r0, 80009c8 <_vfiprintf_r+0x78>
 8000996:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000998:	07dc      	lsls	r4, r3, #31
 800099a:	d50e      	bpl.n	80009ba <_vfiprintf_r+0x6a>
 800099c:	f04f 30ff 	mov.w	r0, #4294967295
 80009a0:	b01d      	add	sp, #116	; 0x74
 80009a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009a6:	4b7b      	ldr	r3, [pc, #492]	; (8000b94 <_vfiprintf_r+0x244>)
 80009a8:	429d      	cmp	r5, r3
 80009aa:	d101      	bne.n	80009b0 <_vfiprintf_r+0x60>
 80009ac:	68b5      	ldr	r5, [r6, #8]
 80009ae:	e7df      	b.n	8000970 <_vfiprintf_r+0x20>
 80009b0:	4b79      	ldr	r3, [pc, #484]	; (8000b98 <_vfiprintf_r+0x248>)
 80009b2:	429d      	cmp	r5, r3
 80009b4:	bf08      	it	eq
 80009b6:	68f5      	ldreq	r5, [r6, #12]
 80009b8:	e7da      	b.n	8000970 <_vfiprintf_r+0x20>
 80009ba:	89ab      	ldrh	r3, [r5, #12]
 80009bc:	0598      	lsls	r0, r3, #22
 80009be:	d4ed      	bmi.n	800099c <_vfiprintf_r+0x4c>
 80009c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009c2:	f7ff ff40 	bl	8000846 <__retarget_lock_release_recursive>
 80009c6:	e7e9      	b.n	800099c <_vfiprintf_r+0x4c>
 80009c8:	2300      	movs	r3, #0
 80009ca:	9309      	str	r3, [sp, #36]	; 0x24
 80009cc:	2320      	movs	r3, #32
 80009ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009d2:	f8cd 800c 	str.w	r8, [sp, #12]
 80009d6:	2330      	movs	r3, #48	; 0x30
 80009d8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000b9c <_vfiprintf_r+0x24c>
 80009dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009e0:	f04f 0901 	mov.w	r9, #1
 80009e4:	4623      	mov	r3, r4
 80009e6:	469a      	mov	sl, r3
 80009e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009ec:	b10a      	cbz	r2, 80009f2 <_vfiprintf_r+0xa2>
 80009ee:	2a25      	cmp	r2, #37	; 0x25
 80009f0:	d1f9      	bne.n	80009e6 <_vfiprintf_r+0x96>
 80009f2:	ebba 0b04 	subs.w	fp, sl, r4
 80009f6:	d00b      	beq.n	8000a10 <_vfiprintf_r+0xc0>
 80009f8:	465b      	mov	r3, fp
 80009fa:	4622      	mov	r2, r4
 80009fc:	4629      	mov	r1, r5
 80009fe:	4630      	mov	r0, r6
 8000a00:	f7ff ff93 	bl	800092a <__sfputs_r>
 8000a04:	3001      	adds	r0, #1
 8000a06:	f000 80aa 	beq.w	8000b5e <_vfiprintf_r+0x20e>
 8000a0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a0c:	445a      	add	r2, fp
 8000a0e:	9209      	str	r2, [sp, #36]	; 0x24
 8000a10:	f89a 3000 	ldrb.w	r3, [sl]
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	f000 80a2 	beq.w	8000b5e <_vfiprintf_r+0x20e>
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	f04f 32ff 	mov.w	r2, #4294967295
 8000a20:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a24:	f10a 0a01 	add.w	sl, sl, #1
 8000a28:	9304      	str	r3, [sp, #16]
 8000a2a:	9307      	str	r3, [sp, #28]
 8000a2c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a30:	931a      	str	r3, [sp, #104]	; 0x68
 8000a32:	4654      	mov	r4, sl
 8000a34:	2205      	movs	r2, #5
 8000a36:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a3a:	4858      	ldr	r0, [pc, #352]	; (8000b9c <_vfiprintf_r+0x24c>)
 8000a3c:	f7ff fbd8 	bl	80001f0 <memchr>
 8000a40:	9a04      	ldr	r2, [sp, #16]
 8000a42:	b9d8      	cbnz	r0, 8000a7c <_vfiprintf_r+0x12c>
 8000a44:	06d1      	lsls	r1, r2, #27
 8000a46:	bf44      	itt	mi
 8000a48:	2320      	movmi	r3, #32
 8000a4a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a4e:	0713      	lsls	r3, r2, #28
 8000a50:	bf44      	itt	mi
 8000a52:	232b      	movmi	r3, #43	; 0x2b
 8000a54:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a58:	f89a 3000 	ldrb.w	r3, [sl]
 8000a5c:	2b2a      	cmp	r3, #42	; 0x2a
 8000a5e:	d015      	beq.n	8000a8c <_vfiprintf_r+0x13c>
 8000a60:	9a07      	ldr	r2, [sp, #28]
 8000a62:	4654      	mov	r4, sl
 8000a64:	2000      	movs	r0, #0
 8000a66:	f04f 0c0a 	mov.w	ip, #10
 8000a6a:	4621      	mov	r1, r4
 8000a6c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a70:	3b30      	subs	r3, #48	; 0x30
 8000a72:	2b09      	cmp	r3, #9
 8000a74:	d94e      	bls.n	8000b14 <_vfiprintf_r+0x1c4>
 8000a76:	b1b0      	cbz	r0, 8000aa6 <_vfiprintf_r+0x156>
 8000a78:	9207      	str	r2, [sp, #28]
 8000a7a:	e014      	b.n	8000aa6 <_vfiprintf_r+0x156>
 8000a7c:	eba0 0308 	sub.w	r3, r0, r8
 8000a80:	fa09 f303 	lsl.w	r3, r9, r3
 8000a84:	4313      	orrs	r3, r2
 8000a86:	9304      	str	r3, [sp, #16]
 8000a88:	46a2      	mov	sl, r4
 8000a8a:	e7d2      	b.n	8000a32 <_vfiprintf_r+0xe2>
 8000a8c:	9b03      	ldr	r3, [sp, #12]
 8000a8e:	1d19      	adds	r1, r3, #4
 8000a90:	681b      	ldr	r3, [r3, #0]
 8000a92:	9103      	str	r1, [sp, #12]
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	bfbb      	ittet	lt
 8000a98:	425b      	neglt	r3, r3
 8000a9a:	f042 0202 	orrlt.w	r2, r2, #2
 8000a9e:	9307      	strge	r3, [sp, #28]
 8000aa0:	9307      	strlt	r3, [sp, #28]
 8000aa2:	bfb8      	it	lt
 8000aa4:	9204      	strlt	r2, [sp, #16]
 8000aa6:	7823      	ldrb	r3, [r4, #0]
 8000aa8:	2b2e      	cmp	r3, #46	; 0x2e
 8000aaa:	d10c      	bne.n	8000ac6 <_vfiprintf_r+0x176>
 8000aac:	7863      	ldrb	r3, [r4, #1]
 8000aae:	2b2a      	cmp	r3, #42	; 0x2a
 8000ab0:	d135      	bne.n	8000b1e <_vfiprintf_r+0x1ce>
 8000ab2:	9b03      	ldr	r3, [sp, #12]
 8000ab4:	1d1a      	adds	r2, r3, #4
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	9203      	str	r2, [sp, #12]
 8000aba:	2b00      	cmp	r3, #0
 8000abc:	bfb8      	it	lt
 8000abe:	f04f 33ff 	movlt.w	r3, #4294967295
 8000ac2:	3402      	adds	r4, #2
 8000ac4:	9305      	str	r3, [sp, #20]
 8000ac6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000bac <_vfiprintf_r+0x25c>
 8000aca:	7821      	ldrb	r1, [r4, #0]
 8000acc:	2203      	movs	r2, #3
 8000ace:	4650      	mov	r0, sl
 8000ad0:	f7ff fb8e 	bl	80001f0 <memchr>
 8000ad4:	b140      	cbz	r0, 8000ae8 <_vfiprintf_r+0x198>
 8000ad6:	2340      	movs	r3, #64	; 0x40
 8000ad8:	eba0 000a 	sub.w	r0, r0, sl
 8000adc:	fa03 f000 	lsl.w	r0, r3, r0
 8000ae0:	9b04      	ldr	r3, [sp, #16]
 8000ae2:	4303      	orrs	r3, r0
 8000ae4:	3401      	adds	r4, #1
 8000ae6:	9304      	str	r3, [sp, #16]
 8000ae8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aec:	482c      	ldr	r0, [pc, #176]	; (8000ba0 <_vfiprintf_r+0x250>)
 8000aee:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000af2:	2206      	movs	r2, #6
 8000af4:	f7ff fb7c 	bl	80001f0 <memchr>
 8000af8:	2800      	cmp	r0, #0
 8000afa:	d03f      	beq.n	8000b7c <_vfiprintf_r+0x22c>
 8000afc:	4b29      	ldr	r3, [pc, #164]	; (8000ba4 <_vfiprintf_r+0x254>)
 8000afe:	bb1b      	cbnz	r3, 8000b48 <_vfiprintf_r+0x1f8>
 8000b00:	9b03      	ldr	r3, [sp, #12]
 8000b02:	3307      	adds	r3, #7
 8000b04:	f023 0307 	bic.w	r3, r3, #7
 8000b08:	3308      	adds	r3, #8
 8000b0a:	9303      	str	r3, [sp, #12]
 8000b0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b0e:	443b      	add	r3, r7
 8000b10:	9309      	str	r3, [sp, #36]	; 0x24
 8000b12:	e767      	b.n	80009e4 <_vfiprintf_r+0x94>
 8000b14:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b18:	460c      	mov	r4, r1
 8000b1a:	2001      	movs	r0, #1
 8000b1c:	e7a5      	b.n	8000a6a <_vfiprintf_r+0x11a>
 8000b1e:	2300      	movs	r3, #0
 8000b20:	3401      	adds	r4, #1
 8000b22:	9305      	str	r3, [sp, #20]
 8000b24:	4619      	mov	r1, r3
 8000b26:	f04f 0c0a 	mov.w	ip, #10
 8000b2a:	4620      	mov	r0, r4
 8000b2c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b30:	3a30      	subs	r2, #48	; 0x30
 8000b32:	2a09      	cmp	r2, #9
 8000b34:	d903      	bls.n	8000b3e <_vfiprintf_r+0x1ee>
 8000b36:	2b00      	cmp	r3, #0
 8000b38:	d0c5      	beq.n	8000ac6 <_vfiprintf_r+0x176>
 8000b3a:	9105      	str	r1, [sp, #20]
 8000b3c:	e7c3      	b.n	8000ac6 <_vfiprintf_r+0x176>
 8000b3e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b42:	4604      	mov	r4, r0
 8000b44:	2301      	movs	r3, #1
 8000b46:	e7f0      	b.n	8000b2a <_vfiprintf_r+0x1da>
 8000b48:	ab03      	add	r3, sp, #12
 8000b4a:	9300      	str	r3, [sp, #0]
 8000b4c:	462a      	mov	r2, r5
 8000b4e:	4b16      	ldr	r3, [pc, #88]	; (8000ba8 <_vfiprintf_r+0x258>)
 8000b50:	a904      	add	r1, sp, #16
 8000b52:	4630      	mov	r0, r6
 8000b54:	f3af 8000 	nop.w
 8000b58:	4607      	mov	r7, r0
 8000b5a:	1c78      	adds	r0, r7, #1
 8000b5c:	d1d6      	bne.n	8000b0c <_vfiprintf_r+0x1bc>
 8000b5e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b60:	07d9      	lsls	r1, r3, #31
 8000b62:	d405      	bmi.n	8000b70 <_vfiprintf_r+0x220>
 8000b64:	89ab      	ldrh	r3, [r5, #12]
 8000b66:	059a      	lsls	r2, r3, #22
 8000b68:	d402      	bmi.n	8000b70 <_vfiprintf_r+0x220>
 8000b6a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b6c:	f7ff fe6b 	bl	8000846 <__retarget_lock_release_recursive>
 8000b70:	89ab      	ldrh	r3, [r5, #12]
 8000b72:	065b      	lsls	r3, r3, #25
 8000b74:	f53f af12 	bmi.w	800099c <_vfiprintf_r+0x4c>
 8000b78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b7a:	e711      	b.n	80009a0 <_vfiprintf_r+0x50>
 8000b7c:	ab03      	add	r3, sp, #12
 8000b7e:	9300      	str	r3, [sp, #0]
 8000b80:	462a      	mov	r2, r5
 8000b82:	4b09      	ldr	r3, [pc, #36]	; (8000ba8 <_vfiprintf_r+0x258>)
 8000b84:	a904      	add	r1, sp, #16
 8000b86:	4630      	mov	r0, r6
 8000b88:	f000 f880 	bl	8000c8c <_printf_i>
 8000b8c:	e7e4      	b.n	8000b58 <_vfiprintf_r+0x208>
 8000b8e:	bf00      	nop
 8000b90:	0800152c 	.word	0x0800152c
 8000b94:	0800154c 	.word	0x0800154c
 8000b98:	0800150c 	.word	0x0800150c
 8000b9c:	0800156c 	.word	0x0800156c
 8000ba0:	08001576 	.word	0x08001576
 8000ba4:	00000000 	.word	0x00000000
 8000ba8:	0800092b 	.word	0x0800092b
 8000bac:	08001572 	.word	0x08001572

08000bb0 <_printf_common>:
 8000bb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bb4:	4616      	mov	r6, r2
 8000bb6:	4699      	mov	r9, r3
 8000bb8:	688a      	ldr	r2, [r1, #8]
 8000bba:	690b      	ldr	r3, [r1, #16]
 8000bbc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000bc0:	4293      	cmp	r3, r2
 8000bc2:	bfb8      	it	lt
 8000bc4:	4613      	movlt	r3, r2
 8000bc6:	6033      	str	r3, [r6, #0]
 8000bc8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bcc:	4607      	mov	r7, r0
 8000bce:	460c      	mov	r4, r1
 8000bd0:	b10a      	cbz	r2, 8000bd6 <_printf_common+0x26>
 8000bd2:	3301      	adds	r3, #1
 8000bd4:	6033      	str	r3, [r6, #0]
 8000bd6:	6823      	ldr	r3, [r4, #0]
 8000bd8:	0699      	lsls	r1, r3, #26
 8000bda:	bf42      	ittt	mi
 8000bdc:	6833      	ldrmi	r3, [r6, #0]
 8000bde:	3302      	addmi	r3, #2
 8000be0:	6033      	strmi	r3, [r6, #0]
 8000be2:	6825      	ldr	r5, [r4, #0]
 8000be4:	f015 0506 	ands.w	r5, r5, #6
 8000be8:	d106      	bne.n	8000bf8 <_printf_common+0x48>
 8000bea:	f104 0a19 	add.w	sl, r4, #25
 8000bee:	68e3      	ldr	r3, [r4, #12]
 8000bf0:	6832      	ldr	r2, [r6, #0]
 8000bf2:	1a9b      	subs	r3, r3, r2
 8000bf4:	42ab      	cmp	r3, r5
 8000bf6:	dc26      	bgt.n	8000c46 <_printf_common+0x96>
 8000bf8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000bfc:	1e13      	subs	r3, r2, #0
 8000bfe:	6822      	ldr	r2, [r4, #0]
 8000c00:	bf18      	it	ne
 8000c02:	2301      	movne	r3, #1
 8000c04:	0692      	lsls	r2, r2, #26
 8000c06:	d42b      	bmi.n	8000c60 <_printf_common+0xb0>
 8000c08:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c0c:	4649      	mov	r1, r9
 8000c0e:	4638      	mov	r0, r7
 8000c10:	47c0      	blx	r8
 8000c12:	3001      	adds	r0, #1
 8000c14:	d01e      	beq.n	8000c54 <_printf_common+0xa4>
 8000c16:	6823      	ldr	r3, [r4, #0]
 8000c18:	68e5      	ldr	r5, [r4, #12]
 8000c1a:	6832      	ldr	r2, [r6, #0]
 8000c1c:	f003 0306 	and.w	r3, r3, #6
 8000c20:	2b04      	cmp	r3, #4
 8000c22:	bf08      	it	eq
 8000c24:	1aad      	subeq	r5, r5, r2
 8000c26:	68a3      	ldr	r3, [r4, #8]
 8000c28:	6922      	ldr	r2, [r4, #16]
 8000c2a:	bf0c      	ite	eq
 8000c2c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c30:	2500      	movne	r5, #0
 8000c32:	4293      	cmp	r3, r2
 8000c34:	bfc4      	itt	gt
 8000c36:	1a9b      	subgt	r3, r3, r2
 8000c38:	18ed      	addgt	r5, r5, r3
 8000c3a:	2600      	movs	r6, #0
 8000c3c:	341a      	adds	r4, #26
 8000c3e:	42b5      	cmp	r5, r6
 8000c40:	d11a      	bne.n	8000c78 <_printf_common+0xc8>
 8000c42:	2000      	movs	r0, #0
 8000c44:	e008      	b.n	8000c58 <_printf_common+0xa8>
 8000c46:	2301      	movs	r3, #1
 8000c48:	4652      	mov	r2, sl
 8000c4a:	4649      	mov	r1, r9
 8000c4c:	4638      	mov	r0, r7
 8000c4e:	47c0      	blx	r8
 8000c50:	3001      	adds	r0, #1
 8000c52:	d103      	bne.n	8000c5c <_printf_common+0xac>
 8000c54:	f04f 30ff 	mov.w	r0, #4294967295
 8000c58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c5c:	3501      	adds	r5, #1
 8000c5e:	e7c6      	b.n	8000bee <_printf_common+0x3e>
 8000c60:	18e1      	adds	r1, r4, r3
 8000c62:	1c5a      	adds	r2, r3, #1
 8000c64:	2030      	movs	r0, #48	; 0x30
 8000c66:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c6a:	4422      	add	r2, r4
 8000c6c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c70:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c74:	3302      	adds	r3, #2
 8000c76:	e7c7      	b.n	8000c08 <_printf_common+0x58>
 8000c78:	2301      	movs	r3, #1
 8000c7a:	4622      	mov	r2, r4
 8000c7c:	4649      	mov	r1, r9
 8000c7e:	4638      	mov	r0, r7
 8000c80:	47c0      	blx	r8
 8000c82:	3001      	adds	r0, #1
 8000c84:	d0e6      	beq.n	8000c54 <_printf_common+0xa4>
 8000c86:	3601      	adds	r6, #1
 8000c88:	e7d9      	b.n	8000c3e <_printf_common+0x8e>
	...

08000c8c <_printf_i>:
 8000c8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c90:	460c      	mov	r4, r1
 8000c92:	4691      	mov	r9, r2
 8000c94:	7e27      	ldrb	r7, [r4, #24]
 8000c96:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000c98:	2f78      	cmp	r7, #120	; 0x78
 8000c9a:	4680      	mov	r8, r0
 8000c9c:	469a      	mov	sl, r3
 8000c9e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ca2:	d807      	bhi.n	8000cb4 <_printf_i+0x28>
 8000ca4:	2f62      	cmp	r7, #98	; 0x62
 8000ca6:	d80a      	bhi.n	8000cbe <_printf_i+0x32>
 8000ca8:	2f00      	cmp	r7, #0
 8000caa:	f000 80d8 	beq.w	8000e5e <_printf_i+0x1d2>
 8000cae:	2f58      	cmp	r7, #88	; 0x58
 8000cb0:	f000 80a3 	beq.w	8000dfa <_printf_i+0x16e>
 8000cb4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000cb8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000cbc:	e03a      	b.n	8000d34 <_printf_i+0xa8>
 8000cbe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000cc2:	2b15      	cmp	r3, #21
 8000cc4:	d8f6      	bhi.n	8000cb4 <_printf_i+0x28>
 8000cc6:	a001      	add	r0, pc, #4	; (adr r0, 8000ccc <_printf_i+0x40>)
 8000cc8:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000ccc:	08000d25 	.word	0x08000d25
 8000cd0:	08000d39 	.word	0x08000d39
 8000cd4:	08000cb5 	.word	0x08000cb5
 8000cd8:	08000cb5 	.word	0x08000cb5
 8000cdc:	08000cb5 	.word	0x08000cb5
 8000ce0:	08000cb5 	.word	0x08000cb5
 8000ce4:	08000d39 	.word	0x08000d39
 8000ce8:	08000cb5 	.word	0x08000cb5
 8000cec:	08000cb5 	.word	0x08000cb5
 8000cf0:	08000cb5 	.word	0x08000cb5
 8000cf4:	08000cb5 	.word	0x08000cb5
 8000cf8:	08000e45 	.word	0x08000e45
 8000cfc:	08000d69 	.word	0x08000d69
 8000d00:	08000e27 	.word	0x08000e27
 8000d04:	08000cb5 	.word	0x08000cb5
 8000d08:	08000cb5 	.word	0x08000cb5
 8000d0c:	08000e67 	.word	0x08000e67
 8000d10:	08000cb5 	.word	0x08000cb5
 8000d14:	08000d69 	.word	0x08000d69
 8000d18:	08000cb5 	.word	0x08000cb5
 8000d1c:	08000cb5 	.word	0x08000cb5
 8000d20:	08000e2f 	.word	0x08000e2f
 8000d24:	680b      	ldr	r3, [r1, #0]
 8000d26:	1d1a      	adds	r2, r3, #4
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	600a      	str	r2, [r1, #0]
 8000d2c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000d30:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d34:	2301      	movs	r3, #1
 8000d36:	e0a3      	b.n	8000e80 <_printf_i+0x1f4>
 8000d38:	6825      	ldr	r5, [r4, #0]
 8000d3a:	6808      	ldr	r0, [r1, #0]
 8000d3c:	062e      	lsls	r6, r5, #24
 8000d3e:	f100 0304 	add.w	r3, r0, #4
 8000d42:	d50a      	bpl.n	8000d5a <_printf_i+0xce>
 8000d44:	6805      	ldr	r5, [r0, #0]
 8000d46:	600b      	str	r3, [r1, #0]
 8000d48:	2d00      	cmp	r5, #0
 8000d4a:	da03      	bge.n	8000d54 <_printf_i+0xc8>
 8000d4c:	232d      	movs	r3, #45	; 0x2d
 8000d4e:	426d      	negs	r5, r5
 8000d50:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d54:	485e      	ldr	r0, [pc, #376]	; (8000ed0 <_printf_i+0x244>)
 8000d56:	230a      	movs	r3, #10
 8000d58:	e019      	b.n	8000d8e <_printf_i+0x102>
 8000d5a:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000d5e:	6805      	ldr	r5, [r0, #0]
 8000d60:	600b      	str	r3, [r1, #0]
 8000d62:	bf18      	it	ne
 8000d64:	b22d      	sxthne	r5, r5
 8000d66:	e7ef      	b.n	8000d48 <_printf_i+0xbc>
 8000d68:	680b      	ldr	r3, [r1, #0]
 8000d6a:	6825      	ldr	r5, [r4, #0]
 8000d6c:	1d18      	adds	r0, r3, #4
 8000d6e:	6008      	str	r0, [r1, #0]
 8000d70:	0628      	lsls	r0, r5, #24
 8000d72:	d501      	bpl.n	8000d78 <_printf_i+0xec>
 8000d74:	681d      	ldr	r5, [r3, #0]
 8000d76:	e002      	b.n	8000d7e <_printf_i+0xf2>
 8000d78:	0669      	lsls	r1, r5, #25
 8000d7a:	d5fb      	bpl.n	8000d74 <_printf_i+0xe8>
 8000d7c:	881d      	ldrh	r5, [r3, #0]
 8000d7e:	4854      	ldr	r0, [pc, #336]	; (8000ed0 <_printf_i+0x244>)
 8000d80:	2f6f      	cmp	r7, #111	; 0x6f
 8000d82:	bf0c      	ite	eq
 8000d84:	2308      	moveq	r3, #8
 8000d86:	230a      	movne	r3, #10
 8000d88:	2100      	movs	r1, #0
 8000d8a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d8e:	6866      	ldr	r6, [r4, #4]
 8000d90:	60a6      	str	r6, [r4, #8]
 8000d92:	2e00      	cmp	r6, #0
 8000d94:	bfa2      	ittt	ge
 8000d96:	6821      	ldrge	r1, [r4, #0]
 8000d98:	f021 0104 	bicge.w	r1, r1, #4
 8000d9c:	6021      	strge	r1, [r4, #0]
 8000d9e:	b90d      	cbnz	r5, 8000da4 <_printf_i+0x118>
 8000da0:	2e00      	cmp	r6, #0
 8000da2:	d04d      	beq.n	8000e40 <_printf_i+0x1b4>
 8000da4:	4616      	mov	r6, r2
 8000da6:	fbb5 f1f3 	udiv	r1, r5, r3
 8000daa:	fb03 5711 	mls	r7, r3, r1, r5
 8000dae:	5dc7      	ldrb	r7, [r0, r7]
 8000db0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000db4:	462f      	mov	r7, r5
 8000db6:	42bb      	cmp	r3, r7
 8000db8:	460d      	mov	r5, r1
 8000dba:	d9f4      	bls.n	8000da6 <_printf_i+0x11a>
 8000dbc:	2b08      	cmp	r3, #8
 8000dbe:	d10b      	bne.n	8000dd8 <_printf_i+0x14c>
 8000dc0:	6823      	ldr	r3, [r4, #0]
 8000dc2:	07df      	lsls	r7, r3, #31
 8000dc4:	d508      	bpl.n	8000dd8 <_printf_i+0x14c>
 8000dc6:	6923      	ldr	r3, [r4, #16]
 8000dc8:	6861      	ldr	r1, [r4, #4]
 8000dca:	4299      	cmp	r1, r3
 8000dcc:	bfde      	ittt	le
 8000dce:	2330      	movle	r3, #48	; 0x30
 8000dd0:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000dd4:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000dd8:	1b92      	subs	r2, r2, r6
 8000dda:	6122      	str	r2, [r4, #16]
 8000ddc:	f8cd a000 	str.w	sl, [sp]
 8000de0:	464b      	mov	r3, r9
 8000de2:	aa03      	add	r2, sp, #12
 8000de4:	4621      	mov	r1, r4
 8000de6:	4640      	mov	r0, r8
 8000de8:	f7ff fee2 	bl	8000bb0 <_printf_common>
 8000dec:	3001      	adds	r0, #1
 8000dee:	d14c      	bne.n	8000e8a <_printf_i+0x1fe>
 8000df0:	f04f 30ff 	mov.w	r0, #4294967295
 8000df4:	b004      	add	sp, #16
 8000df6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dfa:	4835      	ldr	r0, [pc, #212]	; (8000ed0 <_printf_i+0x244>)
 8000dfc:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e00:	6823      	ldr	r3, [r4, #0]
 8000e02:	680e      	ldr	r6, [r1, #0]
 8000e04:	061f      	lsls	r7, r3, #24
 8000e06:	f856 5b04 	ldr.w	r5, [r6], #4
 8000e0a:	600e      	str	r6, [r1, #0]
 8000e0c:	d514      	bpl.n	8000e38 <_printf_i+0x1ac>
 8000e0e:	07d9      	lsls	r1, r3, #31
 8000e10:	bf44      	itt	mi
 8000e12:	f043 0320 	orrmi.w	r3, r3, #32
 8000e16:	6023      	strmi	r3, [r4, #0]
 8000e18:	b91d      	cbnz	r5, 8000e22 <_printf_i+0x196>
 8000e1a:	6823      	ldr	r3, [r4, #0]
 8000e1c:	f023 0320 	bic.w	r3, r3, #32
 8000e20:	6023      	str	r3, [r4, #0]
 8000e22:	2310      	movs	r3, #16
 8000e24:	e7b0      	b.n	8000d88 <_printf_i+0xfc>
 8000e26:	6823      	ldr	r3, [r4, #0]
 8000e28:	f043 0320 	orr.w	r3, r3, #32
 8000e2c:	6023      	str	r3, [r4, #0]
 8000e2e:	2378      	movs	r3, #120	; 0x78
 8000e30:	4828      	ldr	r0, [pc, #160]	; (8000ed4 <_printf_i+0x248>)
 8000e32:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e36:	e7e3      	b.n	8000e00 <_printf_i+0x174>
 8000e38:	065e      	lsls	r6, r3, #25
 8000e3a:	bf48      	it	mi
 8000e3c:	b2ad      	uxthmi	r5, r5
 8000e3e:	e7e6      	b.n	8000e0e <_printf_i+0x182>
 8000e40:	4616      	mov	r6, r2
 8000e42:	e7bb      	b.n	8000dbc <_printf_i+0x130>
 8000e44:	680b      	ldr	r3, [r1, #0]
 8000e46:	6826      	ldr	r6, [r4, #0]
 8000e48:	6960      	ldr	r0, [r4, #20]
 8000e4a:	1d1d      	adds	r5, r3, #4
 8000e4c:	600d      	str	r5, [r1, #0]
 8000e4e:	0635      	lsls	r5, r6, #24
 8000e50:	681b      	ldr	r3, [r3, #0]
 8000e52:	d501      	bpl.n	8000e58 <_printf_i+0x1cc>
 8000e54:	6018      	str	r0, [r3, #0]
 8000e56:	e002      	b.n	8000e5e <_printf_i+0x1d2>
 8000e58:	0671      	lsls	r1, r6, #25
 8000e5a:	d5fb      	bpl.n	8000e54 <_printf_i+0x1c8>
 8000e5c:	8018      	strh	r0, [r3, #0]
 8000e5e:	2300      	movs	r3, #0
 8000e60:	6123      	str	r3, [r4, #16]
 8000e62:	4616      	mov	r6, r2
 8000e64:	e7ba      	b.n	8000ddc <_printf_i+0x150>
 8000e66:	680b      	ldr	r3, [r1, #0]
 8000e68:	1d1a      	adds	r2, r3, #4
 8000e6a:	600a      	str	r2, [r1, #0]
 8000e6c:	681e      	ldr	r6, [r3, #0]
 8000e6e:	6862      	ldr	r2, [r4, #4]
 8000e70:	2100      	movs	r1, #0
 8000e72:	4630      	mov	r0, r6
 8000e74:	f7ff f9bc 	bl	80001f0 <memchr>
 8000e78:	b108      	cbz	r0, 8000e7e <_printf_i+0x1f2>
 8000e7a:	1b80      	subs	r0, r0, r6
 8000e7c:	6060      	str	r0, [r4, #4]
 8000e7e:	6863      	ldr	r3, [r4, #4]
 8000e80:	6123      	str	r3, [r4, #16]
 8000e82:	2300      	movs	r3, #0
 8000e84:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e88:	e7a8      	b.n	8000ddc <_printf_i+0x150>
 8000e8a:	6923      	ldr	r3, [r4, #16]
 8000e8c:	4632      	mov	r2, r6
 8000e8e:	4649      	mov	r1, r9
 8000e90:	4640      	mov	r0, r8
 8000e92:	47d0      	blx	sl
 8000e94:	3001      	adds	r0, #1
 8000e96:	d0ab      	beq.n	8000df0 <_printf_i+0x164>
 8000e98:	6823      	ldr	r3, [r4, #0]
 8000e9a:	079b      	lsls	r3, r3, #30
 8000e9c:	d413      	bmi.n	8000ec6 <_printf_i+0x23a>
 8000e9e:	68e0      	ldr	r0, [r4, #12]
 8000ea0:	9b03      	ldr	r3, [sp, #12]
 8000ea2:	4298      	cmp	r0, r3
 8000ea4:	bfb8      	it	lt
 8000ea6:	4618      	movlt	r0, r3
 8000ea8:	e7a4      	b.n	8000df4 <_printf_i+0x168>
 8000eaa:	2301      	movs	r3, #1
 8000eac:	4632      	mov	r2, r6
 8000eae:	4649      	mov	r1, r9
 8000eb0:	4640      	mov	r0, r8
 8000eb2:	47d0      	blx	sl
 8000eb4:	3001      	adds	r0, #1
 8000eb6:	d09b      	beq.n	8000df0 <_printf_i+0x164>
 8000eb8:	3501      	adds	r5, #1
 8000eba:	68e3      	ldr	r3, [r4, #12]
 8000ebc:	9903      	ldr	r1, [sp, #12]
 8000ebe:	1a5b      	subs	r3, r3, r1
 8000ec0:	42ab      	cmp	r3, r5
 8000ec2:	dcf2      	bgt.n	8000eaa <_printf_i+0x21e>
 8000ec4:	e7eb      	b.n	8000e9e <_printf_i+0x212>
 8000ec6:	2500      	movs	r5, #0
 8000ec8:	f104 0619 	add.w	r6, r4, #25
 8000ecc:	e7f5      	b.n	8000eba <_printf_i+0x22e>
 8000ece:	bf00      	nop
 8000ed0:	0800157d 	.word	0x0800157d
 8000ed4:	0800158e 	.word	0x0800158e

08000ed8 <_sbrk_r>:
 8000ed8:	b538      	push	{r3, r4, r5, lr}
 8000eda:	4d06      	ldr	r5, [pc, #24]	; (8000ef4 <_sbrk_r+0x1c>)
 8000edc:	2300      	movs	r3, #0
 8000ede:	4604      	mov	r4, r0
 8000ee0:	4608      	mov	r0, r1
 8000ee2:	602b      	str	r3, [r5, #0]
 8000ee4:	f7ff fb0e 	bl	8000504 <_sbrk>
 8000ee8:	1c43      	adds	r3, r0, #1
 8000eea:	d102      	bne.n	8000ef2 <_sbrk_r+0x1a>
 8000eec:	682b      	ldr	r3, [r5, #0]
 8000eee:	b103      	cbz	r3, 8000ef2 <_sbrk_r+0x1a>
 8000ef0:	6023      	str	r3, [r4, #0]
 8000ef2:	bd38      	pop	{r3, r4, r5, pc}
 8000ef4:	200000a8 	.word	0x200000a8

08000ef8 <__sread>:
 8000ef8:	b510      	push	{r4, lr}
 8000efa:	460c      	mov	r4, r1
 8000efc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f00:	f000 fab4 	bl	800146c <_read_r>
 8000f04:	2800      	cmp	r0, #0
 8000f06:	bfab      	itete	ge
 8000f08:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000f0a:	89a3      	ldrhlt	r3, [r4, #12]
 8000f0c:	181b      	addge	r3, r3, r0
 8000f0e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000f12:	bfac      	ite	ge
 8000f14:	6563      	strge	r3, [r4, #84]	; 0x54
 8000f16:	81a3      	strhlt	r3, [r4, #12]
 8000f18:	bd10      	pop	{r4, pc}

08000f1a <__swrite>:
 8000f1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f1e:	461f      	mov	r7, r3
 8000f20:	898b      	ldrh	r3, [r1, #12]
 8000f22:	05db      	lsls	r3, r3, #23
 8000f24:	4605      	mov	r5, r0
 8000f26:	460c      	mov	r4, r1
 8000f28:	4616      	mov	r6, r2
 8000f2a:	d505      	bpl.n	8000f38 <__swrite+0x1e>
 8000f2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f30:	2302      	movs	r3, #2
 8000f32:	2200      	movs	r2, #0
 8000f34:	f000 f9c8 	bl	80012c8 <_lseek_r>
 8000f38:	89a3      	ldrh	r3, [r4, #12]
 8000f3a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f3e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f42:	81a3      	strh	r3, [r4, #12]
 8000f44:	4632      	mov	r2, r6
 8000f46:	463b      	mov	r3, r7
 8000f48:	4628      	mov	r0, r5
 8000f4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f4e:	f000 b869 	b.w	8001024 <_write_r>

08000f52 <__sseek>:
 8000f52:	b510      	push	{r4, lr}
 8000f54:	460c      	mov	r4, r1
 8000f56:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f5a:	f000 f9b5 	bl	80012c8 <_lseek_r>
 8000f5e:	1c43      	adds	r3, r0, #1
 8000f60:	89a3      	ldrh	r3, [r4, #12]
 8000f62:	bf15      	itete	ne
 8000f64:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f66:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f6a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f6e:	81a3      	strheq	r3, [r4, #12]
 8000f70:	bf18      	it	ne
 8000f72:	81a3      	strhne	r3, [r4, #12]
 8000f74:	bd10      	pop	{r4, pc}

08000f76 <__sclose>:
 8000f76:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f7a:	f000 b8d3 	b.w	8001124 <_close_r>
	...

08000f80 <__swbuf_r>:
 8000f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f82:	460e      	mov	r6, r1
 8000f84:	4614      	mov	r4, r2
 8000f86:	4605      	mov	r5, r0
 8000f88:	b118      	cbz	r0, 8000f92 <__swbuf_r+0x12>
 8000f8a:	6983      	ldr	r3, [r0, #24]
 8000f8c:	b90b      	cbnz	r3, 8000f92 <__swbuf_r+0x12>
 8000f8e:	f7ff fbbb 	bl	8000708 <__sinit>
 8000f92:	4b21      	ldr	r3, [pc, #132]	; (8001018 <__swbuf_r+0x98>)
 8000f94:	429c      	cmp	r4, r3
 8000f96:	d12b      	bne.n	8000ff0 <__swbuf_r+0x70>
 8000f98:	686c      	ldr	r4, [r5, #4]
 8000f9a:	69a3      	ldr	r3, [r4, #24]
 8000f9c:	60a3      	str	r3, [r4, #8]
 8000f9e:	89a3      	ldrh	r3, [r4, #12]
 8000fa0:	071a      	lsls	r2, r3, #28
 8000fa2:	d52f      	bpl.n	8001004 <__swbuf_r+0x84>
 8000fa4:	6923      	ldr	r3, [r4, #16]
 8000fa6:	b36b      	cbz	r3, 8001004 <__swbuf_r+0x84>
 8000fa8:	6923      	ldr	r3, [r4, #16]
 8000faa:	6820      	ldr	r0, [r4, #0]
 8000fac:	1ac0      	subs	r0, r0, r3
 8000fae:	6963      	ldr	r3, [r4, #20]
 8000fb0:	b2f6      	uxtb	r6, r6
 8000fb2:	4283      	cmp	r3, r0
 8000fb4:	4637      	mov	r7, r6
 8000fb6:	dc04      	bgt.n	8000fc2 <__swbuf_r+0x42>
 8000fb8:	4621      	mov	r1, r4
 8000fba:	4628      	mov	r0, r5
 8000fbc:	f000 f948 	bl	8001250 <_fflush_r>
 8000fc0:	bb30      	cbnz	r0, 8001010 <__swbuf_r+0x90>
 8000fc2:	68a3      	ldr	r3, [r4, #8]
 8000fc4:	3b01      	subs	r3, #1
 8000fc6:	60a3      	str	r3, [r4, #8]
 8000fc8:	6823      	ldr	r3, [r4, #0]
 8000fca:	1c5a      	adds	r2, r3, #1
 8000fcc:	6022      	str	r2, [r4, #0]
 8000fce:	701e      	strb	r6, [r3, #0]
 8000fd0:	6963      	ldr	r3, [r4, #20]
 8000fd2:	3001      	adds	r0, #1
 8000fd4:	4283      	cmp	r3, r0
 8000fd6:	d004      	beq.n	8000fe2 <__swbuf_r+0x62>
 8000fd8:	89a3      	ldrh	r3, [r4, #12]
 8000fda:	07db      	lsls	r3, r3, #31
 8000fdc:	d506      	bpl.n	8000fec <__swbuf_r+0x6c>
 8000fde:	2e0a      	cmp	r6, #10
 8000fe0:	d104      	bne.n	8000fec <__swbuf_r+0x6c>
 8000fe2:	4621      	mov	r1, r4
 8000fe4:	4628      	mov	r0, r5
 8000fe6:	f000 f933 	bl	8001250 <_fflush_r>
 8000fea:	b988      	cbnz	r0, 8001010 <__swbuf_r+0x90>
 8000fec:	4638      	mov	r0, r7
 8000fee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ff0:	4b0a      	ldr	r3, [pc, #40]	; (800101c <__swbuf_r+0x9c>)
 8000ff2:	429c      	cmp	r4, r3
 8000ff4:	d101      	bne.n	8000ffa <__swbuf_r+0x7a>
 8000ff6:	68ac      	ldr	r4, [r5, #8]
 8000ff8:	e7cf      	b.n	8000f9a <__swbuf_r+0x1a>
 8000ffa:	4b09      	ldr	r3, [pc, #36]	; (8001020 <__swbuf_r+0xa0>)
 8000ffc:	429c      	cmp	r4, r3
 8000ffe:	bf08      	it	eq
 8001000:	68ec      	ldreq	r4, [r5, #12]
 8001002:	e7ca      	b.n	8000f9a <__swbuf_r+0x1a>
 8001004:	4621      	mov	r1, r4
 8001006:	4628      	mov	r0, r5
 8001008:	f000 f81e 	bl	8001048 <__swsetup_r>
 800100c:	2800      	cmp	r0, #0
 800100e:	d0cb      	beq.n	8000fa8 <__swbuf_r+0x28>
 8001010:	f04f 37ff 	mov.w	r7, #4294967295
 8001014:	e7ea      	b.n	8000fec <__swbuf_r+0x6c>
 8001016:	bf00      	nop
 8001018:	0800152c 	.word	0x0800152c
 800101c:	0800154c 	.word	0x0800154c
 8001020:	0800150c 	.word	0x0800150c

08001024 <_write_r>:
 8001024:	b538      	push	{r3, r4, r5, lr}
 8001026:	4d07      	ldr	r5, [pc, #28]	; (8001044 <_write_r+0x20>)
 8001028:	4604      	mov	r4, r0
 800102a:	4608      	mov	r0, r1
 800102c:	4611      	mov	r1, r2
 800102e:	2200      	movs	r2, #0
 8001030:	602a      	str	r2, [r5, #0]
 8001032:	461a      	mov	r2, r3
 8001034:	f7ff fa15 	bl	8000462 <_write>
 8001038:	1c43      	adds	r3, r0, #1
 800103a:	d102      	bne.n	8001042 <_write_r+0x1e>
 800103c:	682b      	ldr	r3, [r5, #0]
 800103e:	b103      	cbz	r3, 8001042 <_write_r+0x1e>
 8001040:	6023      	str	r3, [r4, #0]
 8001042:	bd38      	pop	{r3, r4, r5, pc}
 8001044:	200000a8 	.word	0x200000a8

08001048 <__swsetup_r>:
 8001048:	4b32      	ldr	r3, [pc, #200]	; (8001114 <__swsetup_r+0xcc>)
 800104a:	b570      	push	{r4, r5, r6, lr}
 800104c:	681d      	ldr	r5, [r3, #0]
 800104e:	4606      	mov	r6, r0
 8001050:	460c      	mov	r4, r1
 8001052:	b125      	cbz	r5, 800105e <__swsetup_r+0x16>
 8001054:	69ab      	ldr	r3, [r5, #24]
 8001056:	b913      	cbnz	r3, 800105e <__swsetup_r+0x16>
 8001058:	4628      	mov	r0, r5
 800105a:	f7ff fb55 	bl	8000708 <__sinit>
 800105e:	4b2e      	ldr	r3, [pc, #184]	; (8001118 <__swsetup_r+0xd0>)
 8001060:	429c      	cmp	r4, r3
 8001062:	d10f      	bne.n	8001084 <__swsetup_r+0x3c>
 8001064:	686c      	ldr	r4, [r5, #4]
 8001066:	89a3      	ldrh	r3, [r4, #12]
 8001068:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800106c:	0719      	lsls	r1, r3, #28
 800106e:	d42c      	bmi.n	80010ca <__swsetup_r+0x82>
 8001070:	06dd      	lsls	r5, r3, #27
 8001072:	d411      	bmi.n	8001098 <__swsetup_r+0x50>
 8001074:	2309      	movs	r3, #9
 8001076:	6033      	str	r3, [r6, #0]
 8001078:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800107c:	81a3      	strh	r3, [r4, #12]
 800107e:	f04f 30ff 	mov.w	r0, #4294967295
 8001082:	e03e      	b.n	8001102 <__swsetup_r+0xba>
 8001084:	4b25      	ldr	r3, [pc, #148]	; (800111c <__swsetup_r+0xd4>)
 8001086:	429c      	cmp	r4, r3
 8001088:	d101      	bne.n	800108e <__swsetup_r+0x46>
 800108a:	68ac      	ldr	r4, [r5, #8]
 800108c:	e7eb      	b.n	8001066 <__swsetup_r+0x1e>
 800108e:	4b24      	ldr	r3, [pc, #144]	; (8001120 <__swsetup_r+0xd8>)
 8001090:	429c      	cmp	r4, r3
 8001092:	bf08      	it	eq
 8001094:	68ec      	ldreq	r4, [r5, #12]
 8001096:	e7e6      	b.n	8001066 <__swsetup_r+0x1e>
 8001098:	0758      	lsls	r0, r3, #29
 800109a:	d512      	bpl.n	80010c2 <__swsetup_r+0x7a>
 800109c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800109e:	b141      	cbz	r1, 80010b2 <__swsetup_r+0x6a>
 80010a0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010a4:	4299      	cmp	r1, r3
 80010a6:	d002      	beq.n	80010ae <__swsetup_r+0x66>
 80010a8:	4630      	mov	r0, r6
 80010aa:	f000 f98f 	bl	80013cc <_free_r>
 80010ae:	2300      	movs	r3, #0
 80010b0:	6363      	str	r3, [r4, #52]	; 0x34
 80010b2:	89a3      	ldrh	r3, [r4, #12]
 80010b4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80010b8:	81a3      	strh	r3, [r4, #12]
 80010ba:	2300      	movs	r3, #0
 80010bc:	6063      	str	r3, [r4, #4]
 80010be:	6923      	ldr	r3, [r4, #16]
 80010c0:	6023      	str	r3, [r4, #0]
 80010c2:	89a3      	ldrh	r3, [r4, #12]
 80010c4:	f043 0308 	orr.w	r3, r3, #8
 80010c8:	81a3      	strh	r3, [r4, #12]
 80010ca:	6923      	ldr	r3, [r4, #16]
 80010cc:	b94b      	cbnz	r3, 80010e2 <__swsetup_r+0x9a>
 80010ce:	89a3      	ldrh	r3, [r4, #12]
 80010d0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80010d4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010d8:	d003      	beq.n	80010e2 <__swsetup_r+0x9a>
 80010da:	4621      	mov	r1, r4
 80010dc:	4630      	mov	r0, r6
 80010de:	f000 f929 	bl	8001334 <__smakebuf_r>
 80010e2:	89a0      	ldrh	r0, [r4, #12]
 80010e4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010e8:	f010 0301 	ands.w	r3, r0, #1
 80010ec:	d00a      	beq.n	8001104 <__swsetup_r+0xbc>
 80010ee:	2300      	movs	r3, #0
 80010f0:	60a3      	str	r3, [r4, #8]
 80010f2:	6963      	ldr	r3, [r4, #20]
 80010f4:	425b      	negs	r3, r3
 80010f6:	61a3      	str	r3, [r4, #24]
 80010f8:	6923      	ldr	r3, [r4, #16]
 80010fa:	b943      	cbnz	r3, 800110e <__swsetup_r+0xc6>
 80010fc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001100:	d1ba      	bne.n	8001078 <__swsetup_r+0x30>
 8001102:	bd70      	pop	{r4, r5, r6, pc}
 8001104:	0781      	lsls	r1, r0, #30
 8001106:	bf58      	it	pl
 8001108:	6963      	ldrpl	r3, [r4, #20]
 800110a:	60a3      	str	r3, [r4, #8]
 800110c:	e7f4      	b.n	80010f8 <__swsetup_r+0xb0>
 800110e:	2000      	movs	r0, #0
 8001110:	e7f7      	b.n	8001102 <__swsetup_r+0xba>
 8001112:	bf00      	nop
 8001114:	20000010 	.word	0x20000010
 8001118:	0800152c 	.word	0x0800152c
 800111c:	0800154c 	.word	0x0800154c
 8001120:	0800150c 	.word	0x0800150c

08001124 <_close_r>:
 8001124:	b538      	push	{r3, r4, r5, lr}
 8001126:	4d06      	ldr	r5, [pc, #24]	; (8001140 <_close_r+0x1c>)
 8001128:	2300      	movs	r3, #0
 800112a:	4604      	mov	r4, r0
 800112c:	4608      	mov	r0, r1
 800112e:	602b      	str	r3, [r5, #0]
 8001130:	f7ff f9b3 	bl	800049a <_close>
 8001134:	1c43      	adds	r3, r0, #1
 8001136:	d102      	bne.n	800113e <_close_r+0x1a>
 8001138:	682b      	ldr	r3, [r5, #0]
 800113a:	b103      	cbz	r3, 800113e <_close_r+0x1a>
 800113c:	6023      	str	r3, [r4, #0]
 800113e:	bd38      	pop	{r3, r4, r5, pc}
 8001140:	200000a8 	.word	0x200000a8

08001144 <__sflush_r>:
 8001144:	898a      	ldrh	r2, [r1, #12]
 8001146:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800114a:	4605      	mov	r5, r0
 800114c:	0710      	lsls	r0, r2, #28
 800114e:	460c      	mov	r4, r1
 8001150:	d458      	bmi.n	8001204 <__sflush_r+0xc0>
 8001152:	684b      	ldr	r3, [r1, #4]
 8001154:	2b00      	cmp	r3, #0
 8001156:	dc05      	bgt.n	8001164 <__sflush_r+0x20>
 8001158:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800115a:	2b00      	cmp	r3, #0
 800115c:	dc02      	bgt.n	8001164 <__sflush_r+0x20>
 800115e:	2000      	movs	r0, #0
 8001160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001164:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001166:	2e00      	cmp	r6, #0
 8001168:	d0f9      	beq.n	800115e <__sflush_r+0x1a>
 800116a:	2300      	movs	r3, #0
 800116c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001170:	682f      	ldr	r7, [r5, #0]
 8001172:	602b      	str	r3, [r5, #0]
 8001174:	d032      	beq.n	80011dc <__sflush_r+0x98>
 8001176:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001178:	89a3      	ldrh	r3, [r4, #12]
 800117a:	075a      	lsls	r2, r3, #29
 800117c:	d505      	bpl.n	800118a <__sflush_r+0x46>
 800117e:	6863      	ldr	r3, [r4, #4]
 8001180:	1ac0      	subs	r0, r0, r3
 8001182:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001184:	b10b      	cbz	r3, 800118a <__sflush_r+0x46>
 8001186:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001188:	1ac0      	subs	r0, r0, r3
 800118a:	2300      	movs	r3, #0
 800118c:	4602      	mov	r2, r0
 800118e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001190:	6a21      	ldr	r1, [r4, #32]
 8001192:	4628      	mov	r0, r5
 8001194:	47b0      	blx	r6
 8001196:	1c43      	adds	r3, r0, #1
 8001198:	89a3      	ldrh	r3, [r4, #12]
 800119a:	d106      	bne.n	80011aa <__sflush_r+0x66>
 800119c:	6829      	ldr	r1, [r5, #0]
 800119e:	291d      	cmp	r1, #29
 80011a0:	d82c      	bhi.n	80011fc <__sflush_r+0xb8>
 80011a2:	4a2a      	ldr	r2, [pc, #168]	; (800124c <__sflush_r+0x108>)
 80011a4:	40ca      	lsrs	r2, r1
 80011a6:	07d6      	lsls	r6, r2, #31
 80011a8:	d528      	bpl.n	80011fc <__sflush_r+0xb8>
 80011aa:	2200      	movs	r2, #0
 80011ac:	6062      	str	r2, [r4, #4]
 80011ae:	04d9      	lsls	r1, r3, #19
 80011b0:	6922      	ldr	r2, [r4, #16]
 80011b2:	6022      	str	r2, [r4, #0]
 80011b4:	d504      	bpl.n	80011c0 <__sflush_r+0x7c>
 80011b6:	1c42      	adds	r2, r0, #1
 80011b8:	d101      	bne.n	80011be <__sflush_r+0x7a>
 80011ba:	682b      	ldr	r3, [r5, #0]
 80011bc:	b903      	cbnz	r3, 80011c0 <__sflush_r+0x7c>
 80011be:	6560      	str	r0, [r4, #84]	; 0x54
 80011c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011c2:	602f      	str	r7, [r5, #0]
 80011c4:	2900      	cmp	r1, #0
 80011c6:	d0ca      	beq.n	800115e <__sflush_r+0x1a>
 80011c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011cc:	4299      	cmp	r1, r3
 80011ce:	d002      	beq.n	80011d6 <__sflush_r+0x92>
 80011d0:	4628      	mov	r0, r5
 80011d2:	f000 f8fb 	bl	80013cc <_free_r>
 80011d6:	2000      	movs	r0, #0
 80011d8:	6360      	str	r0, [r4, #52]	; 0x34
 80011da:	e7c1      	b.n	8001160 <__sflush_r+0x1c>
 80011dc:	6a21      	ldr	r1, [r4, #32]
 80011de:	2301      	movs	r3, #1
 80011e0:	4628      	mov	r0, r5
 80011e2:	47b0      	blx	r6
 80011e4:	1c41      	adds	r1, r0, #1
 80011e6:	d1c7      	bne.n	8001178 <__sflush_r+0x34>
 80011e8:	682b      	ldr	r3, [r5, #0]
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d0c4      	beq.n	8001178 <__sflush_r+0x34>
 80011ee:	2b1d      	cmp	r3, #29
 80011f0:	d001      	beq.n	80011f6 <__sflush_r+0xb2>
 80011f2:	2b16      	cmp	r3, #22
 80011f4:	d101      	bne.n	80011fa <__sflush_r+0xb6>
 80011f6:	602f      	str	r7, [r5, #0]
 80011f8:	e7b1      	b.n	800115e <__sflush_r+0x1a>
 80011fa:	89a3      	ldrh	r3, [r4, #12]
 80011fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001200:	81a3      	strh	r3, [r4, #12]
 8001202:	e7ad      	b.n	8001160 <__sflush_r+0x1c>
 8001204:	690f      	ldr	r7, [r1, #16]
 8001206:	2f00      	cmp	r7, #0
 8001208:	d0a9      	beq.n	800115e <__sflush_r+0x1a>
 800120a:	0793      	lsls	r3, r2, #30
 800120c:	680e      	ldr	r6, [r1, #0]
 800120e:	bf08      	it	eq
 8001210:	694b      	ldreq	r3, [r1, #20]
 8001212:	600f      	str	r7, [r1, #0]
 8001214:	bf18      	it	ne
 8001216:	2300      	movne	r3, #0
 8001218:	eba6 0807 	sub.w	r8, r6, r7
 800121c:	608b      	str	r3, [r1, #8]
 800121e:	f1b8 0f00 	cmp.w	r8, #0
 8001222:	dd9c      	ble.n	800115e <__sflush_r+0x1a>
 8001224:	6a21      	ldr	r1, [r4, #32]
 8001226:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001228:	4643      	mov	r3, r8
 800122a:	463a      	mov	r2, r7
 800122c:	4628      	mov	r0, r5
 800122e:	47b0      	blx	r6
 8001230:	2800      	cmp	r0, #0
 8001232:	dc06      	bgt.n	8001242 <__sflush_r+0xfe>
 8001234:	89a3      	ldrh	r3, [r4, #12]
 8001236:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800123a:	81a3      	strh	r3, [r4, #12]
 800123c:	f04f 30ff 	mov.w	r0, #4294967295
 8001240:	e78e      	b.n	8001160 <__sflush_r+0x1c>
 8001242:	4407      	add	r7, r0
 8001244:	eba8 0800 	sub.w	r8, r8, r0
 8001248:	e7e9      	b.n	800121e <__sflush_r+0xda>
 800124a:	bf00      	nop
 800124c:	20400001 	.word	0x20400001

08001250 <_fflush_r>:
 8001250:	b538      	push	{r3, r4, r5, lr}
 8001252:	690b      	ldr	r3, [r1, #16]
 8001254:	4605      	mov	r5, r0
 8001256:	460c      	mov	r4, r1
 8001258:	b913      	cbnz	r3, 8001260 <_fflush_r+0x10>
 800125a:	2500      	movs	r5, #0
 800125c:	4628      	mov	r0, r5
 800125e:	bd38      	pop	{r3, r4, r5, pc}
 8001260:	b118      	cbz	r0, 800126a <_fflush_r+0x1a>
 8001262:	6983      	ldr	r3, [r0, #24]
 8001264:	b90b      	cbnz	r3, 800126a <_fflush_r+0x1a>
 8001266:	f7ff fa4f 	bl	8000708 <__sinit>
 800126a:	4b14      	ldr	r3, [pc, #80]	; (80012bc <_fflush_r+0x6c>)
 800126c:	429c      	cmp	r4, r3
 800126e:	d11b      	bne.n	80012a8 <_fflush_r+0x58>
 8001270:	686c      	ldr	r4, [r5, #4]
 8001272:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001276:	2b00      	cmp	r3, #0
 8001278:	d0ef      	beq.n	800125a <_fflush_r+0xa>
 800127a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800127c:	07d0      	lsls	r0, r2, #31
 800127e:	d404      	bmi.n	800128a <_fflush_r+0x3a>
 8001280:	0599      	lsls	r1, r3, #22
 8001282:	d402      	bmi.n	800128a <_fflush_r+0x3a>
 8001284:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001286:	f7ff fadd 	bl	8000844 <__retarget_lock_acquire_recursive>
 800128a:	4628      	mov	r0, r5
 800128c:	4621      	mov	r1, r4
 800128e:	f7ff ff59 	bl	8001144 <__sflush_r>
 8001292:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001294:	07da      	lsls	r2, r3, #31
 8001296:	4605      	mov	r5, r0
 8001298:	d4e0      	bmi.n	800125c <_fflush_r+0xc>
 800129a:	89a3      	ldrh	r3, [r4, #12]
 800129c:	059b      	lsls	r3, r3, #22
 800129e:	d4dd      	bmi.n	800125c <_fflush_r+0xc>
 80012a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012a2:	f7ff fad0 	bl	8000846 <__retarget_lock_release_recursive>
 80012a6:	e7d9      	b.n	800125c <_fflush_r+0xc>
 80012a8:	4b05      	ldr	r3, [pc, #20]	; (80012c0 <_fflush_r+0x70>)
 80012aa:	429c      	cmp	r4, r3
 80012ac:	d101      	bne.n	80012b2 <_fflush_r+0x62>
 80012ae:	68ac      	ldr	r4, [r5, #8]
 80012b0:	e7df      	b.n	8001272 <_fflush_r+0x22>
 80012b2:	4b04      	ldr	r3, [pc, #16]	; (80012c4 <_fflush_r+0x74>)
 80012b4:	429c      	cmp	r4, r3
 80012b6:	bf08      	it	eq
 80012b8:	68ec      	ldreq	r4, [r5, #12]
 80012ba:	e7da      	b.n	8001272 <_fflush_r+0x22>
 80012bc:	0800152c 	.word	0x0800152c
 80012c0:	0800154c 	.word	0x0800154c
 80012c4:	0800150c 	.word	0x0800150c

080012c8 <_lseek_r>:
 80012c8:	b538      	push	{r3, r4, r5, lr}
 80012ca:	4d07      	ldr	r5, [pc, #28]	; (80012e8 <_lseek_r+0x20>)
 80012cc:	4604      	mov	r4, r0
 80012ce:	4608      	mov	r0, r1
 80012d0:	4611      	mov	r1, r2
 80012d2:	2200      	movs	r2, #0
 80012d4:	602a      	str	r2, [r5, #0]
 80012d6:	461a      	mov	r2, r3
 80012d8:	f7ff f906 	bl	80004e8 <_lseek>
 80012dc:	1c43      	adds	r3, r0, #1
 80012de:	d102      	bne.n	80012e6 <_lseek_r+0x1e>
 80012e0:	682b      	ldr	r3, [r5, #0]
 80012e2:	b103      	cbz	r3, 80012e6 <_lseek_r+0x1e>
 80012e4:	6023      	str	r3, [r4, #0]
 80012e6:	bd38      	pop	{r3, r4, r5, pc}
 80012e8:	200000a8 	.word	0x200000a8

080012ec <__swhatbuf_r>:
 80012ec:	b570      	push	{r4, r5, r6, lr}
 80012ee:	460e      	mov	r6, r1
 80012f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012f4:	2900      	cmp	r1, #0
 80012f6:	b096      	sub	sp, #88	; 0x58
 80012f8:	4614      	mov	r4, r2
 80012fa:	461d      	mov	r5, r3
 80012fc:	da07      	bge.n	800130e <__swhatbuf_r+0x22>
 80012fe:	2300      	movs	r3, #0
 8001300:	602b      	str	r3, [r5, #0]
 8001302:	89b3      	ldrh	r3, [r6, #12]
 8001304:	061a      	lsls	r2, r3, #24
 8001306:	d410      	bmi.n	800132a <__swhatbuf_r+0x3e>
 8001308:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800130c:	e00e      	b.n	800132c <__swhatbuf_r+0x40>
 800130e:	466a      	mov	r2, sp
 8001310:	f000 f8be 	bl	8001490 <_fstat_r>
 8001314:	2800      	cmp	r0, #0
 8001316:	dbf2      	blt.n	80012fe <__swhatbuf_r+0x12>
 8001318:	9a01      	ldr	r2, [sp, #4]
 800131a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800131e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001322:	425a      	negs	r2, r3
 8001324:	415a      	adcs	r2, r3
 8001326:	602a      	str	r2, [r5, #0]
 8001328:	e7ee      	b.n	8001308 <__swhatbuf_r+0x1c>
 800132a:	2340      	movs	r3, #64	; 0x40
 800132c:	2000      	movs	r0, #0
 800132e:	6023      	str	r3, [r4, #0]
 8001330:	b016      	add	sp, #88	; 0x58
 8001332:	bd70      	pop	{r4, r5, r6, pc}

08001334 <__smakebuf_r>:
 8001334:	898b      	ldrh	r3, [r1, #12]
 8001336:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001338:	079d      	lsls	r5, r3, #30
 800133a:	4606      	mov	r6, r0
 800133c:	460c      	mov	r4, r1
 800133e:	d507      	bpl.n	8001350 <__smakebuf_r+0x1c>
 8001340:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001344:	6023      	str	r3, [r4, #0]
 8001346:	6123      	str	r3, [r4, #16]
 8001348:	2301      	movs	r3, #1
 800134a:	6163      	str	r3, [r4, #20]
 800134c:	b002      	add	sp, #8
 800134e:	bd70      	pop	{r4, r5, r6, pc}
 8001350:	ab01      	add	r3, sp, #4
 8001352:	466a      	mov	r2, sp
 8001354:	f7ff ffca 	bl	80012ec <__swhatbuf_r>
 8001358:	9900      	ldr	r1, [sp, #0]
 800135a:	4605      	mov	r5, r0
 800135c:	4630      	mov	r0, r6
 800135e:	f7ff fa73 	bl	8000848 <_malloc_r>
 8001362:	b948      	cbnz	r0, 8001378 <__smakebuf_r+0x44>
 8001364:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001368:	059a      	lsls	r2, r3, #22
 800136a:	d4ef      	bmi.n	800134c <__smakebuf_r+0x18>
 800136c:	f023 0303 	bic.w	r3, r3, #3
 8001370:	f043 0302 	orr.w	r3, r3, #2
 8001374:	81a3      	strh	r3, [r4, #12]
 8001376:	e7e3      	b.n	8001340 <__smakebuf_r+0xc>
 8001378:	4b0d      	ldr	r3, [pc, #52]	; (80013b0 <__smakebuf_r+0x7c>)
 800137a:	62b3      	str	r3, [r6, #40]	; 0x28
 800137c:	89a3      	ldrh	r3, [r4, #12]
 800137e:	6020      	str	r0, [r4, #0]
 8001380:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001384:	81a3      	strh	r3, [r4, #12]
 8001386:	9b00      	ldr	r3, [sp, #0]
 8001388:	6163      	str	r3, [r4, #20]
 800138a:	9b01      	ldr	r3, [sp, #4]
 800138c:	6120      	str	r0, [r4, #16]
 800138e:	b15b      	cbz	r3, 80013a8 <__smakebuf_r+0x74>
 8001390:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001394:	4630      	mov	r0, r6
 8001396:	f000 f88d 	bl	80014b4 <_isatty_r>
 800139a:	b128      	cbz	r0, 80013a8 <__smakebuf_r+0x74>
 800139c:	89a3      	ldrh	r3, [r4, #12]
 800139e:	f023 0303 	bic.w	r3, r3, #3
 80013a2:	f043 0301 	orr.w	r3, r3, #1
 80013a6:	81a3      	strh	r3, [r4, #12]
 80013a8:	89a0      	ldrh	r0, [r4, #12]
 80013aa:	4305      	orrs	r5, r0
 80013ac:	81a5      	strh	r5, [r4, #12]
 80013ae:	e7cd      	b.n	800134c <__smakebuf_r+0x18>
 80013b0:	080006a1 	.word	0x080006a1

080013b4 <__malloc_lock>:
 80013b4:	4801      	ldr	r0, [pc, #4]	; (80013bc <__malloc_lock+0x8>)
 80013b6:	f7ff ba45 	b.w	8000844 <__retarget_lock_acquire_recursive>
 80013ba:	bf00      	nop
 80013bc:	200000a0 	.word	0x200000a0

080013c0 <__malloc_unlock>:
 80013c0:	4801      	ldr	r0, [pc, #4]	; (80013c8 <__malloc_unlock+0x8>)
 80013c2:	f7ff ba40 	b.w	8000846 <__retarget_lock_release_recursive>
 80013c6:	bf00      	nop
 80013c8:	200000a0 	.word	0x200000a0

080013cc <_free_r>:
 80013cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80013ce:	2900      	cmp	r1, #0
 80013d0:	d048      	beq.n	8001464 <_free_r+0x98>
 80013d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80013d6:	9001      	str	r0, [sp, #4]
 80013d8:	2b00      	cmp	r3, #0
 80013da:	f1a1 0404 	sub.w	r4, r1, #4
 80013de:	bfb8      	it	lt
 80013e0:	18e4      	addlt	r4, r4, r3
 80013e2:	f7ff ffe7 	bl	80013b4 <__malloc_lock>
 80013e6:	4a20      	ldr	r2, [pc, #128]	; (8001468 <_free_r+0x9c>)
 80013e8:	9801      	ldr	r0, [sp, #4]
 80013ea:	6813      	ldr	r3, [r2, #0]
 80013ec:	4615      	mov	r5, r2
 80013ee:	b933      	cbnz	r3, 80013fe <_free_r+0x32>
 80013f0:	6063      	str	r3, [r4, #4]
 80013f2:	6014      	str	r4, [r2, #0]
 80013f4:	b003      	add	sp, #12
 80013f6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80013fa:	f7ff bfe1 	b.w	80013c0 <__malloc_unlock>
 80013fe:	42a3      	cmp	r3, r4
 8001400:	d90b      	bls.n	800141a <_free_r+0x4e>
 8001402:	6821      	ldr	r1, [r4, #0]
 8001404:	1862      	adds	r2, r4, r1
 8001406:	4293      	cmp	r3, r2
 8001408:	bf04      	itt	eq
 800140a:	681a      	ldreq	r2, [r3, #0]
 800140c:	685b      	ldreq	r3, [r3, #4]
 800140e:	6063      	str	r3, [r4, #4]
 8001410:	bf04      	itt	eq
 8001412:	1852      	addeq	r2, r2, r1
 8001414:	6022      	streq	r2, [r4, #0]
 8001416:	602c      	str	r4, [r5, #0]
 8001418:	e7ec      	b.n	80013f4 <_free_r+0x28>
 800141a:	461a      	mov	r2, r3
 800141c:	685b      	ldr	r3, [r3, #4]
 800141e:	b10b      	cbz	r3, 8001424 <_free_r+0x58>
 8001420:	42a3      	cmp	r3, r4
 8001422:	d9fa      	bls.n	800141a <_free_r+0x4e>
 8001424:	6811      	ldr	r1, [r2, #0]
 8001426:	1855      	adds	r5, r2, r1
 8001428:	42a5      	cmp	r5, r4
 800142a:	d10b      	bne.n	8001444 <_free_r+0x78>
 800142c:	6824      	ldr	r4, [r4, #0]
 800142e:	4421      	add	r1, r4
 8001430:	1854      	adds	r4, r2, r1
 8001432:	42a3      	cmp	r3, r4
 8001434:	6011      	str	r1, [r2, #0]
 8001436:	d1dd      	bne.n	80013f4 <_free_r+0x28>
 8001438:	681c      	ldr	r4, [r3, #0]
 800143a:	685b      	ldr	r3, [r3, #4]
 800143c:	6053      	str	r3, [r2, #4]
 800143e:	4421      	add	r1, r4
 8001440:	6011      	str	r1, [r2, #0]
 8001442:	e7d7      	b.n	80013f4 <_free_r+0x28>
 8001444:	d902      	bls.n	800144c <_free_r+0x80>
 8001446:	230c      	movs	r3, #12
 8001448:	6003      	str	r3, [r0, #0]
 800144a:	e7d3      	b.n	80013f4 <_free_r+0x28>
 800144c:	6825      	ldr	r5, [r4, #0]
 800144e:	1961      	adds	r1, r4, r5
 8001450:	428b      	cmp	r3, r1
 8001452:	bf04      	itt	eq
 8001454:	6819      	ldreq	r1, [r3, #0]
 8001456:	685b      	ldreq	r3, [r3, #4]
 8001458:	6063      	str	r3, [r4, #4]
 800145a:	bf04      	itt	eq
 800145c:	1949      	addeq	r1, r1, r5
 800145e:	6021      	streq	r1, [r4, #0]
 8001460:	6054      	str	r4, [r2, #4]
 8001462:	e7c7      	b.n	80013f4 <_free_r+0x28>
 8001464:	b003      	add	sp, #12
 8001466:	bd30      	pop	{r4, r5, pc}
 8001468:	20000094 	.word	0x20000094

0800146c <_read_r>:
 800146c:	b538      	push	{r3, r4, r5, lr}
 800146e:	4d07      	ldr	r5, [pc, #28]	; (800148c <_read_r+0x20>)
 8001470:	4604      	mov	r4, r0
 8001472:	4608      	mov	r0, r1
 8001474:	4611      	mov	r1, r2
 8001476:	2200      	movs	r2, #0
 8001478:	602a      	str	r2, [r5, #0]
 800147a:	461a      	mov	r2, r3
 800147c:	f7fe ffd4 	bl	8000428 <_read>
 8001480:	1c43      	adds	r3, r0, #1
 8001482:	d102      	bne.n	800148a <_read_r+0x1e>
 8001484:	682b      	ldr	r3, [r5, #0]
 8001486:	b103      	cbz	r3, 800148a <_read_r+0x1e>
 8001488:	6023      	str	r3, [r4, #0]
 800148a:	bd38      	pop	{r3, r4, r5, pc}
 800148c:	200000a8 	.word	0x200000a8

08001490 <_fstat_r>:
 8001490:	b538      	push	{r3, r4, r5, lr}
 8001492:	4d07      	ldr	r5, [pc, #28]	; (80014b0 <_fstat_r+0x20>)
 8001494:	2300      	movs	r3, #0
 8001496:	4604      	mov	r4, r0
 8001498:	4608      	mov	r0, r1
 800149a:	4611      	mov	r1, r2
 800149c:	602b      	str	r3, [r5, #0]
 800149e:	f7ff f808 	bl	80004b2 <_fstat>
 80014a2:	1c43      	adds	r3, r0, #1
 80014a4:	d102      	bne.n	80014ac <_fstat_r+0x1c>
 80014a6:	682b      	ldr	r3, [r5, #0]
 80014a8:	b103      	cbz	r3, 80014ac <_fstat_r+0x1c>
 80014aa:	6023      	str	r3, [r4, #0]
 80014ac:	bd38      	pop	{r3, r4, r5, pc}
 80014ae:	bf00      	nop
 80014b0:	200000a8 	.word	0x200000a8

080014b4 <_isatty_r>:
 80014b4:	b538      	push	{r3, r4, r5, lr}
 80014b6:	4d06      	ldr	r5, [pc, #24]	; (80014d0 <_isatty_r+0x1c>)
 80014b8:	2300      	movs	r3, #0
 80014ba:	4604      	mov	r4, r0
 80014bc:	4608      	mov	r0, r1
 80014be:	602b      	str	r3, [r5, #0]
 80014c0:	f7ff f807 	bl	80004d2 <_isatty>
 80014c4:	1c43      	adds	r3, r0, #1
 80014c6:	d102      	bne.n	80014ce <_isatty_r+0x1a>
 80014c8:	682b      	ldr	r3, [r5, #0]
 80014ca:	b103      	cbz	r3, 80014ce <_isatty_r+0x1a>
 80014cc:	6023      	str	r3, [r4, #0]
 80014ce:	bd38      	pop	{r3, r4, r5, pc}
 80014d0:	200000a8 	.word	0x200000a8

080014d4 <_init>:
 80014d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014d6:	bf00      	nop
 80014d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014da:	bc08      	pop	{r3}
 80014dc:	469e      	mov	lr, r3
 80014de:	4770      	bx	lr

080014e0 <_fini>:
 80014e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014e2:	bf00      	nop
 80014e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014e6:	bc08      	pop	{r3}
 80014e8:	469e      	mov	lr, r3
 80014ea:	4770      	bx	lr
