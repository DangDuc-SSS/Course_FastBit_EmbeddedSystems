
operation modes.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000147c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000120  0800162c  0800162c  0001162c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800174c  0800174c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800174c  0800174c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800174c  0800174c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800174c  0800174c  0001174c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001750  08001750  00011750  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001754  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000038  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000009c  2000009c  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002572  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000006aa  00000000  00000000  00022606  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000148  00000000  00000000  00022cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000110  00000000  00000000  00022df8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c02  00000000  00000000  00022f08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001413  00000000  00000000  00025b0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097c3  00000000  00000000  00026f1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000306e0  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c54  00000000  00000000  00030734  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001614 	.word	0x08001614

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001614 	.word	0x08001614

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <add_numbers>:
#include<stdio.h>

void SVC_Handle_c(uint32_t *pBaseStackFrame);

int32_t add_numbers(int32_t x , int32_t y )
{
 8000290:	b480      	push	{r7}
 8000292:	b085      	sub	sp, #20
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]
    int32_t res;
    __asm volatile("SVC #36");
 800029a:	df24      	svc	36	; 0x24
    __asm volatile ("MOV %0,R0": "=r"(res) ::);
 800029c:	4603      	mov	r3, r0
 800029e:	60fb      	str	r3, [r7, #12]
    return res;
 80002a0:	68fb      	ldr	r3, [r7, #12]

}
 80002a2:	4618      	mov	r0, r3
 80002a4:	3714      	adds	r7, #20
 80002a6:	46bd      	mov	sp, r7
 80002a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ac:	4770      	bx	lr

080002ae <sub_numbers>:


int32_t sub_numbers(int32_t x , int32_t y )
{
 80002ae:	b480      	push	{r7}
 80002b0:	b085      	sub	sp, #20
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	6078      	str	r0, [r7, #4]
 80002b6:	6039      	str	r1, [r7, #0]
   //TODO
	 int32_t res;
	__asm volatile("SVC #37");
 80002b8:	df25      	svc	37	; 0x25
	__asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002ba:	4603      	mov	r3, r0
 80002bc:	60fb      	str	r3, [r7, #12]
	return res;
 80002be:	68fb      	ldr	r3, [r7, #12]
}
 80002c0:	4618      	mov	r0, r3
 80002c2:	3714      	adds	r7, #20
 80002c4:	46bd      	mov	sp, r7
 80002c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ca:	4770      	bx	lr

080002cc <mul_numbers>:

int32_t mul_numbers(int32_t x , int32_t y )
{
 80002cc:	b480      	push	{r7}
 80002ce:	b085      	sub	sp, #20
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
 80002d4:	6039      	str	r1, [r7, #0]
    //TODO
	 int32_t res;
	__asm volatile("SVC #38");
 80002d6:	df26      	svc	38	; 0x26
	__asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002d8:	4603      	mov	r3, r0
 80002da:	60fb      	str	r3, [r7, #12]
	return res;
 80002dc:	68fb      	ldr	r3, [r7, #12]
}
 80002de:	4618      	mov	r0, r3
 80002e0:	3714      	adds	r7, #20
 80002e2:	46bd      	mov	sp, r7
 80002e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e8:	4770      	bx	lr

080002ea <div_numbers>:

int32_t div_numbers(int32_t x , int32_t y )
{
 80002ea:	b480      	push	{r7}
 80002ec:	b085      	sub	sp, #20
 80002ee:	af00      	add	r7, sp, #0
 80002f0:	6078      	str	r0, [r7, #4]
 80002f2:	6039      	str	r1, [r7, #0]
    //TODO
	 int32_t res;
	__asm volatile("SVC #38");
 80002f4:	df26      	svc	38	; 0x26
	__asm volatile ("MOV %0,R0": "=r"(res) ::);
 80002f6:	4603      	mov	r3, r0
 80002f8:	60fb      	str	r3, [r7, #12]
	return res;
 80002fa:	68fb      	ldr	r3, [r7, #12]
}
 80002fc:	4618      	mov	r0, r3
 80002fe:	3714      	adds	r7, #20
 8000300:	46bd      	mov	sp, r7
 8000302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000306:	4770      	bx	lr

08000308 <main>:


int main(void)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	b082      	sub	sp, #8
 800030c:	af00      	add	r7, sp, #0
    int32_t res;

    res = add_numbers(40, -90);
 800030e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8000312:	2028      	movs	r0, #40	; 0x28
 8000314:	f7ff ffbc 	bl	8000290 <add_numbers>
 8000318:	6078      	str	r0, [r7, #4]
    printf("Add result = %ld\n",res);
 800031a:	6879      	ldr	r1, [r7, #4]
 800031c:	4810      	ldr	r0, [pc, #64]	; (8000360 <main+0x58>)
 800031e:	f000 f9ad 	bl	800067c <iprintf>

    res = sub_numbers(25,150);
 8000322:	2196      	movs	r1, #150	; 0x96
 8000324:	2019      	movs	r0, #25
 8000326:	f7ff ffc2 	bl	80002ae <sub_numbers>
 800032a:	6078      	str	r0, [r7, #4]
    printf("Sub result = %ld\n",res);
 800032c:	6879      	ldr	r1, [r7, #4]
 800032e:	480d      	ldr	r0, [pc, #52]	; (8000364 <main+0x5c>)
 8000330:	f000 f9a4 	bl	800067c <iprintf>

    res = mul_numbers(374,890);
 8000334:	f240 317a 	movw	r1, #890	; 0x37a
 8000338:	f44f 70bb 	mov.w	r0, #374	; 0x176
 800033c:	f7ff ffc6 	bl	80002cc <mul_numbers>
 8000340:	6078      	str	r0, [r7, #4]
    printf("mul result = %ld\n", res);
 8000342:	6879      	ldr	r1, [r7, #4]
 8000344:	4808      	ldr	r0, [pc, #32]	; (8000368 <main+0x60>)
 8000346:	f000 f999 	bl	800067c <iprintf>

    res = div_numbers(67,-3);
 800034a:	f06f 0102 	mvn.w	r1, #2
 800034e:	2043      	movs	r0, #67	; 0x43
 8000350:	f7ff ffcb 	bl	80002ea <div_numbers>
 8000354:	6078      	str	r0, [r7, #4]
    printf("div result = %ld\n",res);
 8000356:	6879      	ldr	r1, [r7, #4]
 8000358:	4804      	ldr	r0, [pc, #16]	; (800036c <main+0x64>)
 800035a:	f000 f98f 	bl	800067c <iprintf>

    for(;;);
 800035e:	e7fe      	b.n	800035e <main+0x56>
 8000360:	0800162c 	.word	0x0800162c
 8000364:	08001640 	.word	0x08001640
 8000368:	08001654 	.word	0x08001654
 800036c:	08001668 	.word	0x08001668

08000370 <SVC_Handler>:
}


__attribute__( ( naked ) ) void SVC_Handler( void )
{
    __asm ("MRS r0,MSP");
 8000370:	f3ef 8008 	mrs	r0, MSP
    __asm( "B SVC_Handler_c");
 8000374:	f000 b802 	b.w	800037c <SVC_Handler_c>
}
 8000378:	bf00      	nop
	...

0800037c <SVC_Handler_c>:


//numbers to operate on are passed using R0 and R1
void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
 800037c:	b580      	push	{r7, lr}
 800037e:	b086      	sub	sp, #24
 8000380:	af00      	add	r7, sp, #0
 8000382:	6078      	str	r0, [r7, #4]
    printf("in SVC handler\n");
 8000384:	4826      	ldr	r0, [pc, #152]	; (8000420 <SVC_Handler_c+0xa4>)
 8000386:	f000 f9ff 	bl	8000788 <puts>

    int16_t arg0, arg1, res;

    uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	3318      	adds	r3, #24
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	613b      	str	r3, [r7, #16]

    //2. decrement the return address by 2 to point to
    //opcode of the SVC instruction in the program memory
    pReturn_addr-=2;
 8000392:	693b      	ldr	r3, [r7, #16]
 8000394:	3b02      	subs	r3, #2
 8000396:	613b      	str	r3, [r7, #16]


    //3. extract the SVC number (LSByte of the opcode)
    uint8_t svc_number = *pReturn_addr;
 8000398:	693b      	ldr	r3, [r7, #16]
 800039a:	781b      	ldrb	r3, [r3, #0]
 800039c:	73fb      	strb	r3, [r7, #15]

    arg0 = pBaseOfStackFrame[0]; // R0
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	81bb      	strh	r3, [r7, #12]
    arg1 = pBaseOfStackFrame[1]; // R1
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	3304      	adds	r3, #4
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	817b      	strh	r3, [r7, #10]

    printf("Svc number is : %d\n",svc_number);
 80003ac:	7bfb      	ldrb	r3, [r7, #15]
 80003ae:	4619      	mov	r1, r3
 80003b0:	481c      	ldr	r0, [pc, #112]	; (8000424 <SVC_Handler_c+0xa8>)
 80003b2:	f000 f963 	bl	800067c <iprintf>


/*SVC number signifies the type of operation , decode it */
    switch(svc_number)
 80003b6:	7bfb      	ldrb	r3, [r7, #15]
 80003b8:	3b24      	subs	r3, #36	; 0x24
 80003ba:	2b03      	cmp	r3, #3
 80003bc:	d825      	bhi.n	800040a <SVC_Handler_c+0x8e>
 80003be:	a201      	add	r2, pc, #4	; (adr r2, 80003c4 <SVC_Handler_c+0x48>)
 80003c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003c4:	080003d5 	.word	0x080003d5
 80003c8:	080003e1 	.word	0x080003e1
 80003cc:	080003ed 	.word	0x080003ed
 80003d0:	080003fb 	.word	0x080003fb
    {
    case 36:
        res = arg0 + arg1;
 80003d4:	89ba      	ldrh	r2, [r7, #12]
 80003d6:	897b      	ldrh	r3, [r7, #10]
 80003d8:	4413      	add	r3, r2
 80003da:	b29b      	uxth	r3, r3
 80003dc:	82fb      	strh	r3, [r7, #22]
        break;
 80003de:	e017      	b.n	8000410 <SVC_Handler_c+0x94>
    case 37:
    	res = arg0 - arg1;
 80003e0:	89ba      	ldrh	r2, [r7, #12]
 80003e2:	897b      	ldrh	r3, [r7, #10]
 80003e4:	1ad3      	subs	r3, r2, r3
 80003e6:	b29b      	uxth	r3, r3
 80003e8:	82fb      	strh	r3, [r7, #22]
        break;
 80003ea:	e011      	b.n	8000410 <SVC_Handler_c+0x94>
    case 38:
    	res = arg0 * arg1;
 80003ec:	89ba      	ldrh	r2, [r7, #12]
 80003ee:	897b      	ldrh	r3, [r7, #10]
 80003f0:	fb12 f303 	smulbb	r3, r2, r3
 80003f4:	b29b      	uxth	r3, r3
 80003f6:	82fb      	strh	r3, [r7, #22]
        break;
 80003f8:	e00a      	b.n	8000410 <SVC_Handler_c+0x94>
    case 39:
    	res = arg0 / arg1;
 80003fa:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80003fe:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8000402:	fb92 f3f3 	sdiv	r3, r2, r3
 8000406:	82fb      	strh	r3, [r7, #22]
        break;
 8000408:	e002      	b.n	8000410 <SVC_Handler_c+0x94>
    default:
        printf("invalid svc code\n");
 800040a:	4807      	ldr	r0, [pc, #28]	; (8000428 <SVC_Handler_c+0xac>)
 800040c:	f000 f9bc 	bl	8000788 <puts>

    }

/*store the result back to stack frame at R0's position */
    pBaseOfStackFrame[0] = res;
 8000410:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	601a      	str	r2, [r3, #0]

}
 8000418:	bf00      	nop
 800041a:	3718      	adds	r7, #24
 800041c:	46bd      	mov	sp, r7
 800041e:	bd80      	pop	{r7, pc}
 8000420:	0800167c 	.word	0x0800167c
 8000424:	0800168c 	.word	0x0800168c
 8000428:	080016a0 	.word	0x080016a0

0800042c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800042c:	b480      	push	{r7}
 800042e:	b083      	sub	sp, #12
 8000430:	af00      	add	r7, sp, #0
 8000432:	4603      	mov	r3, r0
 8000434:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000436:	4b0f      	ldr	r3, [pc, #60]	; (8000474 <ITM_SendChar+0x48>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	4a0e      	ldr	r2, [pc, #56]	; (8000474 <ITM_SendChar+0x48>)
 800043c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000440:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000442:	4b0d      	ldr	r3, [pc, #52]	; (8000478 <ITM_SendChar+0x4c>)
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	4a0c      	ldr	r2, [pc, #48]	; (8000478 <ITM_SendChar+0x4c>)
 8000448:	f043 0301 	orr.w	r3, r3, #1
 800044c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800044e:	bf00      	nop
 8000450:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	f003 0301 	and.w	r3, r3, #1
 800045a:	2b00      	cmp	r3, #0
 800045c:	d0f8      	beq.n	8000450 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800045e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000462:	79fb      	ldrb	r3, [r7, #7]
 8000464:	6013      	str	r3, [r2, #0]
}
 8000466:	bf00      	nop
 8000468:	370c      	adds	r7, #12
 800046a:	46bd      	mov	sp, r7
 800046c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000470:	4770      	bx	lr
 8000472:	bf00      	nop
 8000474:	e000edfc 	.word	0xe000edfc
 8000478:	e0000e00 	.word	0xe0000e00

0800047c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800047c:	b580      	push	{r7, lr}
 800047e:	b086      	sub	sp, #24
 8000480:	af00      	add	r7, sp, #0
 8000482:	60f8      	str	r0, [r7, #12]
 8000484:	60b9      	str	r1, [r7, #8]
 8000486:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000488:	2300      	movs	r3, #0
 800048a:	617b      	str	r3, [r7, #20]
 800048c:	e00a      	b.n	80004a4 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800048e:	f3af 8000 	nop.w
 8000492:	4601      	mov	r1, r0
 8000494:	68bb      	ldr	r3, [r7, #8]
 8000496:	1c5a      	adds	r2, r3, #1
 8000498:	60ba      	str	r2, [r7, #8]
 800049a:	b2ca      	uxtb	r2, r1
 800049c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800049e:	697b      	ldr	r3, [r7, #20]
 80004a0:	3301      	adds	r3, #1
 80004a2:	617b      	str	r3, [r7, #20]
 80004a4:	697a      	ldr	r2, [r7, #20]
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	429a      	cmp	r2, r3
 80004aa:	dbf0      	blt.n	800048e <_read+0x12>
	}

return len;
 80004ac:	687b      	ldr	r3, [r7, #4]
}
 80004ae:	4618      	mov	r0, r3
 80004b0:	3718      	adds	r7, #24
 80004b2:	46bd      	mov	sp, r7
 80004b4:	bd80      	pop	{r7, pc}

080004b6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004b6:	b580      	push	{r7, lr}
 80004b8:	b086      	sub	sp, #24
 80004ba:	af00      	add	r7, sp, #0
 80004bc:	60f8      	str	r0, [r7, #12]
 80004be:	60b9      	str	r1, [r7, #8]
 80004c0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004c2:	2300      	movs	r3, #0
 80004c4:	617b      	str	r3, [r7, #20]
 80004c6:	e009      	b.n	80004dc <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80004c8:	68bb      	ldr	r3, [r7, #8]
 80004ca:	1c5a      	adds	r2, r3, #1
 80004cc:	60ba      	str	r2, [r7, #8]
 80004ce:	781b      	ldrb	r3, [r3, #0]
 80004d0:	4618      	mov	r0, r3
 80004d2:	f7ff ffab 	bl	800042c <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004d6:	697b      	ldr	r3, [r7, #20]
 80004d8:	3301      	adds	r3, #1
 80004da:	617b      	str	r3, [r7, #20]
 80004dc:	697a      	ldr	r2, [r7, #20]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	429a      	cmp	r2, r3
 80004e2:	dbf1      	blt.n	80004c8 <_write+0x12>
	}
	return len;
 80004e4:	687b      	ldr	r3, [r7, #4]
}
 80004e6:	4618      	mov	r0, r3
 80004e8:	3718      	adds	r7, #24
 80004ea:	46bd      	mov	sp, r7
 80004ec:	bd80      	pop	{r7, pc}

080004ee <_close>:

int _close(int file)
{
 80004ee:	b480      	push	{r7}
 80004f0:	b083      	sub	sp, #12
 80004f2:	af00      	add	r7, sp, #0
 80004f4:	6078      	str	r0, [r7, #4]
	return -1;
 80004f6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004fa:	4618      	mov	r0, r3
 80004fc:	370c      	adds	r7, #12
 80004fe:	46bd      	mov	sp, r7
 8000500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000504:	4770      	bx	lr

08000506 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000506:	b480      	push	{r7}
 8000508:	b083      	sub	sp, #12
 800050a:	af00      	add	r7, sp, #0
 800050c:	6078      	str	r0, [r7, #4]
 800050e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000510:	683b      	ldr	r3, [r7, #0]
 8000512:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000516:	605a      	str	r2, [r3, #4]
	return 0;
 8000518:	2300      	movs	r3, #0
}
 800051a:	4618      	mov	r0, r3
 800051c:	370c      	adds	r7, #12
 800051e:	46bd      	mov	sp, r7
 8000520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000524:	4770      	bx	lr

08000526 <_isatty>:

int _isatty(int file)
{
 8000526:	b480      	push	{r7}
 8000528:	b083      	sub	sp, #12
 800052a:	af00      	add	r7, sp, #0
 800052c:	6078      	str	r0, [r7, #4]
	return 1;
 800052e:	2301      	movs	r3, #1
}
 8000530:	4618      	mov	r0, r3
 8000532:	370c      	adds	r7, #12
 8000534:	46bd      	mov	sp, r7
 8000536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053a:	4770      	bx	lr

0800053c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800053c:	b480      	push	{r7}
 800053e:	b085      	sub	sp, #20
 8000540:	af00      	add	r7, sp, #0
 8000542:	60f8      	str	r0, [r7, #12]
 8000544:	60b9      	str	r1, [r7, #8]
 8000546:	607a      	str	r2, [r7, #4]
	return 0;
 8000548:	2300      	movs	r3, #0
}
 800054a:	4618      	mov	r0, r3
 800054c:	3714      	adds	r7, #20
 800054e:	46bd      	mov	sp, r7
 8000550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000554:	4770      	bx	lr
	...

08000558 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000558:	b580      	push	{r7, lr}
 800055a:	b086      	sub	sp, #24
 800055c:	af00      	add	r7, sp, #0
 800055e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000560:	4a14      	ldr	r2, [pc, #80]	; (80005b4 <_sbrk+0x5c>)
 8000562:	4b15      	ldr	r3, [pc, #84]	; (80005b8 <_sbrk+0x60>)
 8000564:	1ad3      	subs	r3, r2, r3
 8000566:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000568:	697b      	ldr	r3, [r7, #20]
 800056a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800056c:	4b13      	ldr	r3, [pc, #76]	; (80005bc <_sbrk+0x64>)
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	2b00      	cmp	r3, #0
 8000572:	d102      	bne.n	800057a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000574:	4b11      	ldr	r3, [pc, #68]	; (80005bc <_sbrk+0x64>)
 8000576:	4a12      	ldr	r2, [pc, #72]	; (80005c0 <_sbrk+0x68>)
 8000578:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800057a:	4b10      	ldr	r3, [pc, #64]	; (80005bc <_sbrk+0x64>)
 800057c:	681a      	ldr	r2, [r3, #0]
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	4413      	add	r3, r2
 8000582:	693a      	ldr	r2, [r7, #16]
 8000584:	429a      	cmp	r2, r3
 8000586:	d207      	bcs.n	8000598 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000588:	f000 f846 	bl	8000618 <__errno>
 800058c:	4603      	mov	r3, r0
 800058e:	220c      	movs	r2, #12
 8000590:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000592:	f04f 33ff 	mov.w	r3, #4294967295
 8000596:	e009      	b.n	80005ac <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000598:	4b08      	ldr	r3, [pc, #32]	; (80005bc <_sbrk+0x64>)
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800059e:	4b07      	ldr	r3, [pc, #28]	; (80005bc <_sbrk+0x64>)
 80005a0:	681a      	ldr	r2, [r3, #0]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	4413      	add	r3, r2
 80005a6:	4a05      	ldr	r2, [pc, #20]	; (80005bc <_sbrk+0x64>)
 80005a8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80005aa:	68fb      	ldr	r3, [r7, #12]
}
 80005ac:	4618      	mov	r0, r3
 80005ae:	3718      	adds	r7, #24
 80005b0:	46bd      	mov	sp, r7
 80005b2:	bd80      	pop	{r7, pc}
 80005b4:	20020000 	.word	0x20020000
 80005b8:	00000400 	.word	0x00000400
 80005bc:	20000080 	.word	0x20000080
 80005c0:	200000a0 	.word	0x200000a0

080005c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005c4:	480d      	ldr	r0, [pc, #52]	; (80005fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005c6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005cc:	480c      	ldr	r0, [pc, #48]	; (8000600 <LoopForever+0x6>)
  ldr r1, =_edata
 80005ce:	490d      	ldr	r1, [pc, #52]	; (8000604 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005d0:	4a0d      	ldr	r2, [pc, #52]	; (8000608 <LoopForever+0xe>)
  movs r3, #0
 80005d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005d4:	e002      	b.n	80005dc <LoopCopyDataInit>

080005d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005da:	3304      	adds	r3, #4

080005dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005e0:	d3f9      	bcc.n	80005d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005e2:	4a0a      	ldr	r2, [pc, #40]	; (800060c <LoopForever+0x12>)
  ldr r4, =_ebss
 80005e4:	4c0a      	ldr	r4, [pc, #40]	; (8000610 <LoopForever+0x16>)
  movs r3, #0
 80005e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005e8:	e001      	b.n	80005ee <LoopFillZerobss>

080005ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005ec:	3204      	adds	r2, #4

080005ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005f0:	d3fb      	bcc.n	80005ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005f2:	f000 f817 	bl	8000624 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005f6:	f7ff fe87 	bl	8000308 <main>

080005fa <LoopForever>:

LoopForever:
    b LoopForever
 80005fa:	e7fe      	b.n	80005fa <LoopForever>
  ldr   r0, =_estack
 80005fc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000600:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000604:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000608:	08001754 	.word	0x08001754
  ldr r2, =_sbss
 800060c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000610:	2000009c 	.word	0x2000009c

08000614 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000614:	e7fe      	b.n	8000614 <ADC_IRQHandler>
	...

08000618 <__errno>:
 8000618:	4b01      	ldr	r3, [pc, #4]	; (8000620 <__errno+0x8>)
 800061a:	6818      	ldr	r0, [r3, #0]
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	20000000 	.word	0x20000000

08000624 <__libc_init_array>:
 8000624:	b570      	push	{r4, r5, r6, lr}
 8000626:	4d0d      	ldr	r5, [pc, #52]	; (800065c <__libc_init_array+0x38>)
 8000628:	4c0d      	ldr	r4, [pc, #52]	; (8000660 <__libc_init_array+0x3c>)
 800062a:	1b64      	subs	r4, r4, r5
 800062c:	10a4      	asrs	r4, r4, #2
 800062e:	2600      	movs	r6, #0
 8000630:	42a6      	cmp	r6, r4
 8000632:	d109      	bne.n	8000648 <__libc_init_array+0x24>
 8000634:	4d0b      	ldr	r5, [pc, #44]	; (8000664 <__libc_init_array+0x40>)
 8000636:	4c0c      	ldr	r4, [pc, #48]	; (8000668 <__libc_init_array+0x44>)
 8000638:	f000 ffec 	bl	8001614 <_init>
 800063c:	1b64      	subs	r4, r4, r5
 800063e:	10a4      	asrs	r4, r4, #2
 8000640:	2600      	movs	r6, #0
 8000642:	42a6      	cmp	r6, r4
 8000644:	d105      	bne.n	8000652 <__libc_init_array+0x2e>
 8000646:	bd70      	pop	{r4, r5, r6, pc}
 8000648:	f855 3b04 	ldr.w	r3, [r5], #4
 800064c:	4798      	blx	r3
 800064e:	3601      	adds	r6, #1
 8000650:	e7ee      	b.n	8000630 <__libc_init_array+0xc>
 8000652:	f855 3b04 	ldr.w	r3, [r5], #4
 8000656:	4798      	blx	r3
 8000658:	3601      	adds	r6, #1
 800065a:	e7f2      	b.n	8000642 <__libc_init_array+0x1e>
 800065c:	0800174c 	.word	0x0800174c
 8000660:	0800174c 	.word	0x0800174c
 8000664:	0800174c 	.word	0x0800174c
 8000668:	08001750 	.word	0x08001750

0800066c <memset>:
 800066c:	4402      	add	r2, r0
 800066e:	4603      	mov	r3, r0
 8000670:	4293      	cmp	r3, r2
 8000672:	d100      	bne.n	8000676 <memset+0xa>
 8000674:	4770      	bx	lr
 8000676:	f803 1b01 	strb.w	r1, [r3], #1
 800067a:	e7f9      	b.n	8000670 <memset+0x4>

0800067c <iprintf>:
 800067c:	b40f      	push	{r0, r1, r2, r3}
 800067e:	4b0a      	ldr	r3, [pc, #40]	; (80006a8 <iprintf+0x2c>)
 8000680:	b513      	push	{r0, r1, r4, lr}
 8000682:	681c      	ldr	r4, [r3, #0]
 8000684:	b124      	cbz	r4, 8000690 <iprintf+0x14>
 8000686:	69a3      	ldr	r3, [r4, #24]
 8000688:	b913      	cbnz	r3, 8000690 <iprintf+0x14>
 800068a:	4620      	mov	r0, r4
 800068c:	f000 fa5e 	bl	8000b4c <__sinit>
 8000690:	ab05      	add	r3, sp, #20
 8000692:	9a04      	ldr	r2, [sp, #16]
 8000694:	68a1      	ldr	r1, [r4, #8]
 8000696:	9301      	str	r3, [sp, #4]
 8000698:	4620      	mov	r0, r4
 800069a:	f000 fc2f 	bl	8000efc <_vfiprintf_r>
 800069e:	b002      	add	sp, #8
 80006a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006a4:	b004      	add	sp, #16
 80006a6:	4770      	bx	lr
 80006a8:	20000000 	.word	0x20000000

080006ac <_puts_r>:
 80006ac:	b570      	push	{r4, r5, r6, lr}
 80006ae:	460e      	mov	r6, r1
 80006b0:	4605      	mov	r5, r0
 80006b2:	b118      	cbz	r0, 80006bc <_puts_r+0x10>
 80006b4:	6983      	ldr	r3, [r0, #24]
 80006b6:	b90b      	cbnz	r3, 80006bc <_puts_r+0x10>
 80006b8:	f000 fa48 	bl	8000b4c <__sinit>
 80006bc:	69ab      	ldr	r3, [r5, #24]
 80006be:	68ac      	ldr	r4, [r5, #8]
 80006c0:	b913      	cbnz	r3, 80006c8 <_puts_r+0x1c>
 80006c2:	4628      	mov	r0, r5
 80006c4:	f000 fa42 	bl	8000b4c <__sinit>
 80006c8:	4b2c      	ldr	r3, [pc, #176]	; (800077c <_puts_r+0xd0>)
 80006ca:	429c      	cmp	r4, r3
 80006cc:	d120      	bne.n	8000710 <_puts_r+0x64>
 80006ce:	686c      	ldr	r4, [r5, #4]
 80006d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006d2:	07db      	lsls	r3, r3, #31
 80006d4:	d405      	bmi.n	80006e2 <_puts_r+0x36>
 80006d6:	89a3      	ldrh	r3, [r4, #12]
 80006d8:	0598      	lsls	r0, r3, #22
 80006da:	d402      	bmi.n	80006e2 <_puts_r+0x36>
 80006dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006de:	f000 fad3 	bl	8000c88 <__retarget_lock_acquire_recursive>
 80006e2:	89a3      	ldrh	r3, [r4, #12]
 80006e4:	0719      	lsls	r1, r3, #28
 80006e6:	d51d      	bpl.n	8000724 <_puts_r+0x78>
 80006e8:	6923      	ldr	r3, [r4, #16]
 80006ea:	b1db      	cbz	r3, 8000724 <_puts_r+0x78>
 80006ec:	3e01      	subs	r6, #1
 80006ee:	68a3      	ldr	r3, [r4, #8]
 80006f0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006f4:	3b01      	subs	r3, #1
 80006f6:	60a3      	str	r3, [r4, #8]
 80006f8:	bb39      	cbnz	r1, 800074a <_puts_r+0x9e>
 80006fa:	2b00      	cmp	r3, #0
 80006fc:	da38      	bge.n	8000770 <_puts_r+0xc4>
 80006fe:	4622      	mov	r2, r4
 8000700:	210a      	movs	r1, #10
 8000702:	4628      	mov	r0, r5
 8000704:	f000 f848 	bl	8000798 <__swbuf_r>
 8000708:	3001      	adds	r0, #1
 800070a:	d011      	beq.n	8000730 <_puts_r+0x84>
 800070c:	250a      	movs	r5, #10
 800070e:	e011      	b.n	8000734 <_puts_r+0x88>
 8000710:	4b1b      	ldr	r3, [pc, #108]	; (8000780 <_puts_r+0xd4>)
 8000712:	429c      	cmp	r4, r3
 8000714:	d101      	bne.n	800071a <_puts_r+0x6e>
 8000716:	68ac      	ldr	r4, [r5, #8]
 8000718:	e7da      	b.n	80006d0 <_puts_r+0x24>
 800071a:	4b1a      	ldr	r3, [pc, #104]	; (8000784 <_puts_r+0xd8>)
 800071c:	429c      	cmp	r4, r3
 800071e:	bf08      	it	eq
 8000720:	68ec      	ldreq	r4, [r5, #12]
 8000722:	e7d5      	b.n	80006d0 <_puts_r+0x24>
 8000724:	4621      	mov	r1, r4
 8000726:	4628      	mov	r0, r5
 8000728:	f000 f888 	bl	800083c <__swsetup_r>
 800072c:	2800      	cmp	r0, #0
 800072e:	d0dd      	beq.n	80006ec <_puts_r+0x40>
 8000730:	f04f 35ff 	mov.w	r5, #4294967295
 8000734:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000736:	07da      	lsls	r2, r3, #31
 8000738:	d405      	bmi.n	8000746 <_puts_r+0x9a>
 800073a:	89a3      	ldrh	r3, [r4, #12]
 800073c:	059b      	lsls	r3, r3, #22
 800073e:	d402      	bmi.n	8000746 <_puts_r+0x9a>
 8000740:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000742:	f000 faa2 	bl	8000c8a <__retarget_lock_release_recursive>
 8000746:	4628      	mov	r0, r5
 8000748:	bd70      	pop	{r4, r5, r6, pc}
 800074a:	2b00      	cmp	r3, #0
 800074c:	da04      	bge.n	8000758 <_puts_r+0xac>
 800074e:	69a2      	ldr	r2, [r4, #24]
 8000750:	429a      	cmp	r2, r3
 8000752:	dc06      	bgt.n	8000762 <_puts_r+0xb6>
 8000754:	290a      	cmp	r1, #10
 8000756:	d004      	beq.n	8000762 <_puts_r+0xb6>
 8000758:	6823      	ldr	r3, [r4, #0]
 800075a:	1c5a      	adds	r2, r3, #1
 800075c:	6022      	str	r2, [r4, #0]
 800075e:	7019      	strb	r1, [r3, #0]
 8000760:	e7c5      	b.n	80006ee <_puts_r+0x42>
 8000762:	4622      	mov	r2, r4
 8000764:	4628      	mov	r0, r5
 8000766:	f000 f817 	bl	8000798 <__swbuf_r>
 800076a:	3001      	adds	r0, #1
 800076c:	d1bf      	bne.n	80006ee <_puts_r+0x42>
 800076e:	e7df      	b.n	8000730 <_puts_r+0x84>
 8000770:	6823      	ldr	r3, [r4, #0]
 8000772:	250a      	movs	r5, #10
 8000774:	1c5a      	adds	r2, r3, #1
 8000776:	6022      	str	r2, [r4, #0]
 8000778:	701d      	strb	r5, [r3, #0]
 800077a:	e7db      	b.n	8000734 <_puts_r+0x88>
 800077c:	080016d8 	.word	0x080016d8
 8000780:	080016f8 	.word	0x080016f8
 8000784:	080016b8 	.word	0x080016b8

08000788 <puts>:
 8000788:	4b02      	ldr	r3, [pc, #8]	; (8000794 <puts+0xc>)
 800078a:	4601      	mov	r1, r0
 800078c:	6818      	ldr	r0, [r3, #0]
 800078e:	f7ff bf8d 	b.w	80006ac <_puts_r>
 8000792:	bf00      	nop
 8000794:	20000000 	.word	0x20000000

08000798 <__swbuf_r>:
 8000798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800079a:	460e      	mov	r6, r1
 800079c:	4614      	mov	r4, r2
 800079e:	4605      	mov	r5, r0
 80007a0:	b118      	cbz	r0, 80007aa <__swbuf_r+0x12>
 80007a2:	6983      	ldr	r3, [r0, #24]
 80007a4:	b90b      	cbnz	r3, 80007aa <__swbuf_r+0x12>
 80007a6:	f000 f9d1 	bl	8000b4c <__sinit>
 80007aa:	4b21      	ldr	r3, [pc, #132]	; (8000830 <__swbuf_r+0x98>)
 80007ac:	429c      	cmp	r4, r3
 80007ae:	d12b      	bne.n	8000808 <__swbuf_r+0x70>
 80007b0:	686c      	ldr	r4, [r5, #4]
 80007b2:	69a3      	ldr	r3, [r4, #24]
 80007b4:	60a3      	str	r3, [r4, #8]
 80007b6:	89a3      	ldrh	r3, [r4, #12]
 80007b8:	071a      	lsls	r2, r3, #28
 80007ba:	d52f      	bpl.n	800081c <__swbuf_r+0x84>
 80007bc:	6923      	ldr	r3, [r4, #16]
 80007be:	b36b      	cbz	r3, 800081c <__swbuf_r+0x84>
 80007c0:	6923      	ldr	r3, [r4, #16]
 80007c2:	6820      	ldr	r0, [r4, #0]
 80007c4:	1ac0      	subs	r0, r0, r3
 80007c6:	6963      	ldr	r3, [r4, #20]
 80007c8:	b2f6      	uxtb	r6, r6
 80007ca:	4283      	cmp	r3, r0
 80007cc:	4637      	mov	r7, r6
 80007ce:	dc04      	bgt.n	80007da <__swbuf_r+0x42>
 80007d0:	4621      	mov	r1, r4
 80007d2:	4628      	mov	r0, r5
 80007d4:	f000 f926 	bl	8000a24 <_fflush_r>
 80007d8:	bb30      	cbnz	r0, 8000828 <__swbuf_r+0x90>
 80007da:	68a3      	ldr	r3, [r4, #8]
 80007dc:	3b01      	subs	r3, #1
 80007de:	60a3      	str	r3, [r4, #8]
 80007e0:	6823      	ldr	r3, [r4, #0]
 80007e2:	1c5a      	adds	r2, r3, #1
 80007e4:	6022      	str	r2, [r4, #0]
 80007e6:	701e      	strb	r6, [r3, #0]
 80007e8:	6963      	ldr	r3, [r4, #20]
 80007ea:	3001      	adds	r0, #1
 80007ec:	4283      	cmp	r3, r0
 80007ee:	d004      	beq.n	80007fa <__swbuf_r+0x62>
 80007f0:	89a3      	ldrh	r3, [r4, #12]
 80007f2:	07db      	lsls	r3, r3, #31
 80007f4:	d506      	bpl.n	8000804 <__swbuf_r+0x6c>
 80007f6:	2e0a      	cmp	r6, #10
 80007f8:	d104      	bne.n	8000804 <__swbuf_r+0x6c>
 80007fa:	4621      	mov	r1, r4
 80007fc:	4628      	mov	r0, r5
 80007fe:	f000 f911 	bl	8000a24 <_fflush_r>
 8000802:	b988      	cbnz	r0, 8000828 <__swbuf_r+0x90>
 8000804:	4638      	mov	r0, r7
 8000806:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000808:	4b0a      	ldr	r3, [pc, #40]	; (8000834 <__swbuf_r+0x9c>)
 800080a:	429c      	cmp	r4, r3
 800080c:	d101      	bne.n	8000812 <__swbuf_r+0x7a>
 800080e:	68ac      	ldr	r4, [r5, #8]
 8000810:	e7cf      	b.n	80007b2 <__swbuf_r+0x1a>
 8000812:	4b09      	ldr	r3, [pc, #36]	; (8000838 <__swbuf_r+0xa0>)
 8000814:	429c      	cmp	r4, r3
 8000816:	bf08      	it	eq
 8000818:	68ec      	ldreq	r4, [r5, #12]
 800081a:	e7ca      	b.n	80007b2 <__swbuf_r+0x1a>
 800081c:	4621      	mov	r1, r4
 800081e:	4628      	mov	r0, r5
 8000820:	f000 f80c 	bl	800083c <__swsetup_r>
 8000824:	2800      	cmp	r0, #0
 8000826:	d0cb      	beq.n	80007c0 <__swbuf_r+0x28>
 8000828:	f04f 37ff 	mov.w	r7, #4294967295
 800082c:	e7ea      	b.n	8000804 <__swbuf_r+0x6c>
 800082e:	bf00      	nop
 8000830:	080016d8 	.word	0x080016d8
 8000834:	080016f8 	.word	0x080016f8
 8000838:	080016b8 	.word	0x080016b8

0800083c <__swsetup_r>:
 800083c:	4b32      	ldr	r3, [pc, #200]	; (8000908 <__swsetup_r+0xcc>)
 800083e:	b570      	push	{r4, r5, r6, lr}
 8000840:	681d      	ldr	r5, [r3, #0]
 8000842:	4606      	mov	r6, r0
 8000844:	460c      	mov	r4, r1
 8000846:	b125      	cbz	r5, 8000852 <__swsetup_r+0x16>
 8000848:	69ab      	ldr	r3, [r5, #24]
 800084a:	b913      	cbnz	r3, 8000852 <__swsetup_r+0x16>
 800084c:	4628      	mov	r0, r5
 800084e:	f000 f97d 	bl	8000b4c <__sinit>
 8000852:	4b2e      	ldr	r3, [pc, #184]	; (800090c <__swsetup_r+0xd0>)
 8000854:	429c      	cmp	r4, r3
 8000856:	d10f      	bne.n	8000878 <__swsetup_r+0x3c>
 8000858:	686c      	ldr	r4, [r5, #4]
 800085a:	89a3      	ldrh	r3, [r4, #12]
 800085c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000860:	0719      	lsls	r1, r3, #28
 8000862:	d42c      	bmi.n	80008be <__swsetup_r+0x82>
 8000864:	06dd      	lsls	r5, r3, #27
 8000866:	d411      	bmi.n	800088c <__swsetup_r+0x50>
 8000868:	2309      	movs	r3, #9
 800086a:	6033      	str	r3, [r6, #0]
 800086c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000870:	81a3      	strh	r3, [r4, #12]
 8000872:	f04f 30ff 	mov.w	r0, #4294967295
 8000876:	e03e      	b.n	80008f6 <__swsetup_r+0xba>
 8000878:	4b25      	ldr	r3, [pc, #148]	; (8000910 <__swsetup_r+0xd4>)
 800087a:	429c      	cmp	r4, r3
 800087c:	d101      	bne.n	8000882 <__swsetup_r+0x46>
 800087e:	68ac      	ldr	r4, [r5, #8]
 8000880:	e7eb      	b.n	800085a <__swsetup_r+0x1e>
 8000882:	4b24      	ldr	r3, [pc, #144]	; (8000914 <__swsetup_r+0xd8>)
 8000884:	429c      	cmp	r4, r3
 8000886:	bf08      	it	eq
 8000888:	68ec      	ldreq	r4, [r5, #12]
 800088a:	e7e6      	b.n	800085a <__swsetup_r+0x1e>
 800088c:	0758      	lsls	r0, r3, #29
 800088e:	d512      	bpl.n	80008b6 <__swsetup_r+0x7a>
 8000890:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000892:	b141      	cbz	r1, 80008a6 <__swsetup_r+0x6a>
 8000894:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000898:	4299      	cmp	r1, r3
 800089a:	d002      	beq.n	80008a2 <__swsetup_r+0x66>
 800089c:	4630      	mov	r0, r6
 800089e:	f000 fa59 	bl	8000d54 <_free_r>
 80008a2:	2300      	movs	r3, #0
 80008a4:	6363      	str	r3, [r4, #52]	; 0x34
 80008a6:	89a3      	ldrh	r3, [r4, #12]
 80008a8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80008ac:	81a3      	strh	r3, [r4, #12]
 80008ae:	2300      	movs	r3, #0
 80008b0:	6063      	str	r3, [r4, #4]
 80008b2:	6923      	ldr	r3, [r4, #16]
 80008b4:	6023      	str	r3, [r4, #0]
 80008b6:	89a3      	ldrh	r3, [r4, #12]
 80008b8:	f043 0308 	orr.w	r3, r3, #8
 80008bc:	81a3      	strh	r3, [r4, #12]
 80008be:	6923      	ldr	r3, [r4, #16]
 80008c0:	b94b      	cbnz	r3, 80008d6 <__swsetup_r+0x9a>
 80008c2:	89a3      	ldrh	r3, [r4, #12]
 80008c4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80008c8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008cc:	d003      	beq.n	80008d6 <__swsetup_r+0x9a>
 80008ce:	4621      	mov	r1, r4
 80008d0:	4630      	mov	r0, r6
 80008d2:	f000 f9ff 	bl	8000cd4 <__smakebuf_r>
 80008d6:	89a0      	ldrh	r0, [r4, #12]
 80008d8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80008dc:	f010 0301 	ands.w	r3, r0, #1
 80008e0:	d00a      	beq.n	80008f8 <__swsetup_r+0xbc>
 80008e2:	2300      	movs	r3, #0
 80008e4:	60a3      	str	r3, [r4, #8]
 80008e6:	6963      	ldr	r3, [r4, #20]
 80008e8:	425b      	negs	r3, r3
 80008ea:	61a3      	str	r3, [r4, #24]
 80008ec:	6923      	ldr	r3, [r4, #16]
 80008ee:	b943      	cbnz	r3, 8000902 <__swsetup_r+0xc6>
 80008f0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80008f4:	d1ba      	bne.n	800086c <__swsetup_r+0x30>
 80008f6:	bd70      	pop	{r4, r5, r6, pc}
 80008f8:	0781      	lsls	r1, r0, #30
 80008fa:	bf58      	it	pl
 80008fc:	6963      	ldrpl	r3, [r4, #20]
 80008fe:	60a3      	str	r3, [r4, #8]
 8000900:	e7f4      	b.n	80008ec <__swsetup_r+0xb0>
 8000902:	2000      	movs	r0, #0
 8000904:	e7f7      	b.n	80008f6 <__swsetup_r+0xba>
 8000906:	bf00      	nop
 8000908:	20000000 	.word	0x20000000
 800090c:	080016d8 	.word	0x080016d8
 8000910:	080016f8 	.word	0x080016f8
 8000914:	080016b8 	.word	0x080016b8

08000918 <__sflush_r>:
 8000918:	898a      	ldrh	r2, [r1, #12]
 800091a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800091e:	4605      	mov	r5, r0
 8000920:	0710      	lsls	r0, r2, #28
 8000922:	460c      	mov	r4, r1
 8000924:	d458      	bmi.n	80009d8 <__sflush_r+0xc0>
 8000926:	684b      	ldr	r3, [r1, #4]
 8000928:	2b00      	cmp	r3, #0
 800092a:	dc05      	bgt.n	8000938 <__sflush_r+0x20>
 800092c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800092e:	2b00      	cmp	r3, #0
 8000930:	dc02      	bgt.n	8000938 <__sflush_r+0x20>
 8000932:	2000      	movs	r0, #0
 8000934:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000938:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800093a:	2e00      	cmp	r6, #0
 800093c:	d0f9      	beq.n	8000932 <__sflush_r+0x1a>
 800093e:	2300      	movs	r3, #0
 8000940:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000944:	682f      	ldr	r7, [r5, #0]
 8000946:	602b      	str	r3, [r5, #0]
 8000948:	d032      	beq.n	80009b0 <__sflush_r+0x98>
 800094a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800094c:	89a3      	ldrh	r3, [r4, #12]
 800094e:	075a      	lsls	r2, r3, #29
 8000950:	d505      	bpl.n	800095e <__sflush_r+0x46>
 8000952:	6863      	ldr	r3, [r4, #4]
 8000954:	1ac0      	subs	r0, r0, r3
 8000956:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000958:	b10b      	cbz	r3, 800095e <__sflush_r+0x46>
 800095a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800095c:	1ac0      	subs	r0, r0, r3
 800095e:	2300      	movs	r3, #0
 8000960:	4602      	mov	r2, r0
 8000962:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000964:	6a21      	ldr	r1, [r4, #32]
 8000966:	4628      	mov	r0, r5
 8000968:	47b0      	blx	r6
 800096a:	1c43      	adds	r3, r0, #1
 800096c:	89a3      	ldrh	r3, [r4, #12]
 800096e:	d106      	bne.n	800097e <__sflush_r+0x66>
 8000970:	6829      	ldr	r1, [r5, #0]
 8000972:	291d      	cmp	r1, #29
 8000974:	d82c      	bhi.n	80009d0 <__sflush_r+0xb8>
 8000976:	4a2a      	ldr	r2, [pc, #168]	; (8000a20 <__sflush_r+0x108>)
 8000978:	40ca      	lsrs	r2, r1
 800097a:	07d6      	lsls	r6, r2, #31
 800097c:	d528      	bpl.n	80009d0 <__sflush_r+0xb8>
 800097e:	2200      	movs	r2, #0
 8000980:	6062      	str	r2, [r4, #4]
 8000982:	04d9      	lsls	r1, r3, #19
 8000984:	6922      	ldr	r2, [r4, #16]
 8000986:	6022      	str	r2, [r4, #0]
 8000988:	d504      	bpl.n	8000994 <__sflush_r+0x7c>
 800098a:	1c42      	adds	r2, r0, #1
 800098c:	d101      	bne.n	8000992 <__sflush_r+0x7a>
 800098e:	682b      	ldr	r3, [r5, #0]
 8000990:	b903      	cbnz	r3, 8000994 <__sflush_r+0x7c>
 8000992:	6560      	str	r0, [r4, #84]	; 0x54
 8000994:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000996:	602f      	str	r7, [r5, #0]
 8000998:	2900      	cmp	r1, #0
 800099a:	d0ca      	beq.n	8000932 <__sflush_r+0x1a>
 800099c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80009a0:	4299      	cmp	r1, r3
 80009a2:	d002      	beq.n	80009aa <__sflush_r+0x92>
 80009a4:	4628      	mov	r0, r5
 80009a6:	f000 f9d5 	bl	8000d54 <_free_r>
 80009aa:	2000      	movs	r0, #0
 80009ac:	6360      	str	r0, [r4, #52]	; 0x34
 80009ae:	e7c1      	b.n	8000934 <__sflush_r+0x1c>
 80009b0:	6a21      	ldr	r1, [r4, #32]
 80009b2:	2301      	movs	r3, #1
 80009b4:	4628      	mov	r0, r5
 80009b6:	47b0      	blx	r6
 80009b8:	1c41      	adds	r1, r0, #1
 80009ba:	d1c7      	bne.n	800094c <__sflush_r+0x34>
 80009bc:	682b      	ldr	r3, [r5, #0]
 80009be:	2b00      	cmp	r3, #0
 80009c0:	d0c4      	beq.n	800094c <__sflush_r+0x34>
 80009c2:	2b1d      	cmp	r3, #29
 80009c4:	d001      	beq.n	80009ca <__sflush_r+0xb2>
 80009c6:	2b16      	cmp	r3, #22
 80009c8:	d101      	bne.n	80009ce <__sflush_r+0xb6>
 80009ca:	602f      	str	r7, [r5, #0]
 80009cc:	e7b1      	b.n	8000932 <__sflush_r+0x1a>
 80009ce:	89a3      	ldrh	r3, [r4, #12]
 80009d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009d4:	81a3      	strh	r3, [r4, #12]
 80009d6:	e7ad      	b.n	8000934 <__sflush_r+0x1c>
 80009d8:	690f      	ldr	r7, [r1, #16]
 80009da:	2f00      	cmp	r7, #0
 80009dc:	d0a9      	beq.n	8000932 <__sflush_r+0x1a>
 80009de:	0793      	lsls	r3, r2, #30
 80009e0:	680e      	ldr	r6, [r1, #0]
 80009e2:	bf08      	it	eq
 80009e4:	694b      	ldreq	r3, [r1, #20]
 80009e6:	600f      	str	r7, [r1, #0]
 80009e8:	bf18      	it	ne
 80009ea:	2300      	movne	r3, #0
 80009ec:	eba6 0807 	sub.w	r8, r6, r7
 80009f0:	608b      	str	r3, [r1, #8]
 80009f2:	f1b8 0f00 	cmp.w	r8, #0
 80009f6:	dd9c      	ble.n	8000932 <__sflush_r+0x1a>
 80009f8:	6a21      	ldr	r1, [r4, #32]
 80009fa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80009fc:	4643      	mov	r3, r8
 80009fe:	463a      	mov	r2, r7
 8000a00:	4628      	mov	r0, r5
 8000a02:	47b0      	blx	r6
 8000a04:	2800      	cmp	r0, #0
 8000a06:	dc06      	bgt.n	8000a16 <__sflush_r+0xfe>
 8000a08:	89a3      	ldrh	r3, [r4, #12]
 8000a0a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a0e:	81a3      	strh	r3, [r4, #12]
 8000a10:	f04f 30ff 	mov.w	r0, #4294967295
 8000a14:	e78e      	b.n	8000934 <__sflush_r+0x1c>
 8000a16:	4407      	add	r7, r0
 8000a18:	eba8 0800 	sub.w	r8, r8, r0
 8000a1c:	e7e9      	b.n	80009f2 <__sflush_r+0xda>
 8000a1e:	bf00      	nop
 8000a20:	20400001 	.word	0x20400001

08000a24 <_fflush_r>:
 8000a24:	b538      	push	{r3, r4, r5, lr}
 8000a26:	690b      	ldr	r3, [r1, #16]
 8000a28:	4605      	mov	r5, r0
 8000a2a:	460c      	mov	r4, r1
 8000a2c:	b913      	cbnz	r3, 8000a34 <_fflush_r+0x10>
 8000a2e:	2500      	movs	r5, #0
 8000a30:	4628      	mov	r0, r5
 8000a32:	bd38      	pop	{r3, r4, r5, pc}
 8000a34:	b118      	cbz	r0, 8000a3e <_fflush_r+0x1a>
 8000a36:	6983      	ldr	r3, [r0, #24]
 8000a38:	b90b      	cbnz	r3, 8000a3e <_fflush_r+0x1a>
 8000a3a:	f000 f887 	bl	8000b4c <__sinit>
 8000a3e:	4b14      	ldr	r3, [pc, #80]	; (8000a90 <_fflush_r+0x6c>)
 8000a40:	429c      	cmp	r4, r3
 8000a42:	d11b      	bne.n	8000a7c <_fflush_r+0x58>
 8000a44:	686c      	ldr	r4, [r5, #4]
 8000a46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	d0ef      	beq.n	8000a2e <_fflush_r+0xa>
 8000a4e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000a50:	07d0      	lsls	r0, r2, #31
 8000a52:	d404      	bmi.n	8000a5e <_fflush_r+0x3a>
 8000a54:	0599      	lsls	r1, r3, #22
 8000a56:	d402      	bmi.n	8000a5e <_fflush_r+0x3a>
 8000a58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a5a:	f000 f915 	bl	8000c88 <__retarget_lock_acquire_recursive>
 8000a5e:	4628      	mov	r0, r5
 8000a60:	4621      	mov	r1, r4
 8000a62:	f7ff ff59 	bl	8000918 <__sflush_r>
 8000a66:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000a68:	07da      	lsls	r2, r3, #31
 8000a6a:	4605      	mov	r5, r0
 8000a6c:	d4e0      	bmi.n	8000a30 <_fflush_r+0xc>
 8000a6e:	89a3      	ldrh	r3, [r4, #12]
 8000a70:	059b      	lsls	r3, r3, #22
 8000a72:	d4dd      	bmi.n	8000a30 <_fflush_r+0xc>
 8000a74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a76:	f000 f908 	bl	8000c8a <__retarget_lock_release_recursive>
 8000a7a:	e7d9      	b.n	8000a30 <_fflush_r+0xc>
 8000a7c:	4b05      	ldr	r3, [pc, #20]	; (8000a94 <_fflush_r+0x70>)
 8000a7e:	429c      	cmp	r4, r3
 8000a80:	d101      	bne.n	8000a86 <_fflush_r+0x62>
 8000a82:	68ac      	ldr	r4, [r5, #8]
 8000a84:	e7df      	b.n	8000a46 <_fflush_r+0x22>
 8000a86:	4b04      	ldr	r3, [pc, #16]	; (8000a98 <_fflush_r+0x74>)
 8000a88:	429c      	cmp	r4, r3
 8000a8a:	bf08      	it	eq
 8000a8c:	68ec      	ldreq	r4, [r5, #12]
 8000a8e:	e7da      	b.n	8000a46 <_fflush_r+0x22>
 8000a90:	080016d8 	.word	0x080016d8
 8000a94:	080016f8 	.word	0x080016f8
 8000a98:	080016b8 	.word	0x080016b8

08000a9c <std>:
 8000a9c:	2300      	movs	r3, #0
 8000a9e:	b510      	push	{r4, lr}
 8000aa0:	4604      	mov	r4, r0
 8000aa2:	e9c0 3300 	strd	r3, r3, [r0]
 8000aa6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000aaa:	6083      	str	r3, [r0, #8]
 8000aac:	8181      	strh	r1, [r0, #12]
 8000aae:	6643      	str	r3, [r0, #100]	; 0x64
 8000ab0:	81c2      	strh	r2, [r0, #14]
 8000ab2:	6183      	str	r3, [r0, #24]
 8000ab4:	4619      	mov	r1, r3
 8000ab6:	2208      	movs	r2, #8
 8000ab8:	305c      	adds	r0, #92	; 0x5c
 8000aba:	f7ff fdd7 	bl	800066c <memset>
 8000abe:	4b05      	ldr	r3, [pc, #20]	; (8000ad4 <std+0x38>)
 8000ac0:	6263      	str	r3, [r4, #36]	; 0x24
 8000ac2:	4b05      	ldr	r3, [pc, #20]	; (8000ad8 <std+0x3c>)
 8000ac4:	62a3      	str	r3, [r4, #40]	; 0x28
 8000ac6:	4b05      	ldr	r3, [pc, #20]	; (8000adc <std+0x40>)
 8000ac8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000aca:	4b05      	ldr	r3, [pc, #20]	; (8000ae0 <std+0x44>)
 8000acc:	6224      	str	r4, [r4, #32]
 8000ace:	6323      	str	r3, [r4, #48]	; 0x30
 8000ad0:	bd10      	pop	{r4, pc}
 8000ad2:	bf00      	nop
 8000ad4:	080014a5 	.word	0x080014a5
 8000ad8:	080014c7 	.word	0x080014c7
 8000adc:	080014ff 	.word	0x080014ff
 8000ae0:	08001523 	.word	0x08001523

08000ae4 <_cleanup_r>:
 8000ae4:	4901      	ldr	r1, [pc, #4]	; (8000aec <_cleanup_r+0x8>)
 8000ae6:	f000 b8af 	b.w	8000c48 <_fwalk_reent>
 8000aea:	bf00      	nop
 8000aec:	08000a25 	.word	0x08000a25

08000af0 <__sfmoreglue>:
 8000af0:	b570      	push	{r4, r5, r6, lr}
 8000af2:	1e4a      	subs	r2, r1, #1
 8000af4:	2568      	movs	r5, #104	; 0x68
 8000af6:	4355      	muls	r5, r2
 8000af8:	460e      	mov	r6, r1
 8000afa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000afe:	f000 f979 	bl	8000df4 <_malloc_r>
 8000b02:	4604      	mov	r4, r0
 8000b04:	b140      	cbz	r0, 8000b18 <__sfmoreglue+0x28>
 8000b06:	2100      	movs	r1, #0
 8000b08:	e9c0 1600 	strd	r1, r6, [r0]
 8000b0c:	300c      	adds	r0, #12
 8000b0e:	60a0      	str	r0, [r4, #8]
 8000b10:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000b14:	f7ff fdaa 	bl	800066c <memset>
 8000b18:	4620      	mov	r0, r4
 8000b1a:	bd70      	pop	{r4, r5, r6, pc}

08000b1c <__sfp_lock_acquire>:
 8000b1c:	4801      	ldr	r0, [pc, #4]	; (8000b24 <__sfp_lock_acquire+0x8>)
 8000b1e:	f000 b8b3 	b.w	8000c88 <__retarget_lock_acquire_recursive>
 8000b22:	bf00      	nop
 8000b24:	20000094 	.word	0x20000094

08000b28 <__sfp_lock_release>:
 8000b28:	4801      	ldr	r0, [pc, #4]	; (8000b30 <__sfp_lock_release+0x8>)
 8000b2a:	f000 b8ae 	b.w	8000c8a <__retarget_lock_release_recursive>
 8000b2e:	bf00      	nop
 8000b30:	20000094 	.word	0x20000094

08000b34 <__sinit_lock_acquire>:
 8000b34:	4801      	ldr	r0, [pc, #4]	; (8000b3c <__sinit_lock_acquire+0x8>)
 8000b36:	f000 b8a7 	b.w	8000c88 <__retarget_lock_acquire_recursive>
 8000b3a:	bf00      	nop
 8000b3c:	2000008f 	.word	0x2000008f

08000b40 <__sinit_lock_release>:
 8000b40:	4801      	ldr	r0, [pc, #4]	; (8000b48 <__sinit_lock_release+0x8>)
 8000b42:	f000 b8a2 	b.w	8000c8a <__retarget_lock_release_recursive>
 8000b46:	bf00      	nop
 8000b48:	2000008f 	.word	0x2000008f

08000b4c <__sinit>:
 8000b4c:	b510      	push	{r4, lr}
 8000b4e:	4604      	mov	r4, r0
 8000b50:	f7ff fff0 	bl	8000b34 <__sinit_lock_acquire>
 8000b54:	69a3      	ldr	r3, [r4, #24]
 8000b56:	b11b      	cbz	r3, 8000b60 <__sinit+0x14>
 8000b58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b5c:	f7ff bff0 	b.w	8000b40 <__sinit_lock_release>
 8000b60:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000b64:	6523      	str	r3, [r4, #80]	; 0x50
 8000b66:	4b13      	ldr	r3, [pc, #76]	; (8000bb4 <__sinit+0x68>)
 8000b68:	4a13      	ldr	r2, [pc, #76]	; (8000bb8 <__sinit+0x6c>)
 8000b6a:	681b      	ldr	r3, [r3, #0]
 8000b6c:	62a2      	str	r2, [r4, #40]	; 0x28
 8000b6e:	42a3      	cmp	r3, r4
 8000b70:	bf04      	itt	eq
 8000b72:	2301      	moveq	r3, #1
 8000b74:	61a3      	streq	r3, [r4, #24]
 8000b76:	4620      	mov	r0, r4
 8000b78:	f000 f820 	bl	8000bbc <__sfp>
 8000b7c:	6060      	str	r0, [r4, #4]
 8000b7e:	4620      	mov	r0, r4
 8000b80:	f000 f81c 	bl	8000bbc <__sfp>
 8000b84:	60a0      	str	r0, [r4, #8]
 8000b86:	4620      	mov	r0, r4
 8000b88:	f000 f818 	bl	8000bbc <__sfp>
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	60e0      	str	r0, [r4, #12]
 8000b90:	2104      	movs	r1, #4
 8000b92:	6860      	ldr	r0, [r4, #4]
 8000b94:	f7ff ff82 	bl	8000a9c <std>
 8000b98:	68a0      	ldr	r0, [r4, #8]
 8000b9a:	2201      	movs	r2, #1
 8000b9c:	2109      	movs	r1, #9
 8000b9e:	f7ff ff7d 	bl	8000a9c <std>
 8000ba2:	68e0      	ldr	r0, [r4, #12]
 8000ba4:	2202      	movs	r2, #2
 8000ba6:	2112      	movs	r1, #18
 8000ba8:	f7ff ff78 	bl	8000a9c <std>
 8000bac:	2301      	movs	r3, #1
 8000bae:	61a3      	str	r3, [r4, #24]
 8000bb0:	e7d2      	b.n	8000b58 <__sinit+0xc>
 8000bb2:	bf00      	nop
 8000bb4:	080016b4 	.word	0x080016b4
 8000bb8:	08000ae5 	.word	0x08000ae5

08000bbc <__sfp>:
 8000bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bbe:	4607      	mov	r7, r0
 8000bc0:	f7ff ffac 	bl	8000b1c <__sfp_lock_acquire>
 8000bc4:	4b1e      	ldr	r3, [pc, #120]	; (8000c40 <__sfp+0x84>)
 8000bc6:	681e      	ldr	r6, [r3, #0]
 8000bc8:	69b3      	ldr	r3, [r6, #24]
 8000bca:	b913      	cbnz	r3, 8000bd2 <__sfp+0x16>
 8000bcc:	4630      	mov	r0, r6
 8000bce:	f7ff ffbd 	bl	8000b4c <__sinit>
 8000bd2:	3648      	adds	r6, #72	; 0x48
 8000bd4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000bd8:	3b01      	subs	r3, #1
 8000bda:	d503      	bpl.n	8000be4 <__sfp+0x28>
 8000bdc:	6833      	ldr	r3, [r6, #0]
 8000bde:	b30b      	cbz	r3, 8000c24 <__sfp+0x68>
 8000be0:	6836      	ldr	r6, [r6, #0]
 8000be2:	e7f7      	b.n	8000bd4 <__sfp+0x18>
 8000be4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000be8:	b9d5      	cbnz	r5, 8000c20 <__sfp+0x64>
 8000bea:	4b16      	ldr	r3, [pc, #88]	; (8000c44 <__sfp+0x88>)
 8000bec:	60e3      	str	r3, [r4, #12]
 8000bee:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000bf2:	6665      	str	r5, [r4, #100]	; 0x64
 8000bf4:	f000 f847 	bl	8000c86 <__retarget_lock_init_recursive>
 8000bf8:	f7ff ff96 	bl	8000b28 <__sfp_lock_release>
 8000bfc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000c00:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000c04:	6025      	str	r5, [r4, #0]
 8000c06:	61a5      	str	r5, [r4, #24]
 8000c08:	2208      	movs	r2, #8
 8000c0a:	4629      	mov	r1, r5
 8000c0c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000c10:	f7ff fd2c 	bl	800066c <memset>
 8000c14:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000c18:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000c1c:	4620      	mov	r0, r4
 8000c1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c20:	3468      	adds	r4, #104	; 0x68
 8000c22:	e7d9      	b.n	8000bd8 <__sfp+0x1c>
 8000c24:	2104      	movs	r1, #4
 8000c26:	4638      	mov	r0, r7
 8000c28:	f7ff ff62 	bl	8000af0 <__sfmoreglue>
 8000c2c:	4604      	mov	r4, r0
 8000c2e:	6030      	str	r0, [r6, #0]
 8000c30:	2800      	cmp	r0, #0
 8000c32:	d1d5      	bne.n	8000be0 <__sfp+0x24>
 8000c34:	f7ff ff78 	bl	8000b28 <__sfp_lock_release>
 8000c38:	230c      	movs	r3, #12
 8000c3a:	603b      	str	r3, [r7, #0]
 8000c3c:	e7ee      	b.n	8000c1c <__sfp+0x60>
 8000c3e:	bf00      	nop
 8000c40:	080016b4 	.word	0x080016b4
 8000c44:	ffff0001 	.word	0xffff0001

08000c48 <_fwalk_reent>:
 8000c48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c4c:	4606      	mov	r6, r0
 8000c4e:	4688      	mov	r8, r1
 8000c50:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000c54:	2700      	movs	r7, #0
 8000c56:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c5a:	f1b9 0901 	subs.w	r9, r9, #1
 8000c5e:	d505      	bpl.n	8000c6c <_fwalk_reent+0x24>
 8000c60:	6824      	ldr	r4, [r4, #0]
 8000c62:	2c00      	cmp	r4, #0
 8000c64:	d1f7      	bne.n	8000c56 <_fwalk_reent+0xe>
 8000c66:	4638      	mov	r0, r7
 8000c68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c6c:	89ab      	ldrh	r3, [r5, #12]
 8000c6e:	2b01      	cmp	r3, #1
 8000c70:	d907      	bls.n	8000c82 <_fwalk_reent+0x3a>
 8000c72:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c76:	3301      	adds	r3, #1
 8000c78:	d003      	beq.n	8000c82 <_fwalk_reent+0x3a>
 8000c7a:	4629      	mov	r1, r5
 8000c7c:	4630      	mov	r0, r6
 8000c7e:	47c0      	blx	r8
 8000c80:	4307      	orrs	r7, r0
 8000c82:	3568      	adds	r5, #104	; 0x68
 8000c84:	e7e9      	b.n	8000c5a <_fwalk_reent+0x12>

08000c86 <__retarget_lock_init_recursive>:
 8000c86:	4770      	bx	lr

08000c88 <__retarget_lock_acquire_recursive>:
 8000c88:	4770      	bx	lr

08000c8a <__retarget_lock_release_recursive>:
 8000c8a:	4770      	bx	lr

08000c8c <__swhatbuf_r>:
 8000c8c:	b570      	push	{r4, r5, r6, lr}
 8000c8e:	460e      	mov	r6, r1
 8000c90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c94:	2900      	cmp	r1, #0
 8000c96:	b096      	sub	sp, #88	; 0x58
 8000c98:	4614      	mov	r4, r2
 8000c9a:	461d      	mov	r5, r3
 8000c9c:	da07      	bge.n	8000cae <__swhatbuf_r+0x22>
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	602b      	str	r3, [r5, #0]
 8000ca2:	89b3      	ldrh	r3, [r6, #12]
 8000ca4:	061a      	lsls	r2, r3, #24
 8000ca6:	d410      	bmi.n	8000cca <__swhatbuf_r+0x3e>
 8000ca8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000cac:	e00e      	b.n	8000ccc <__swhatbuf_r+0x40>
 8000cae:	466a      	mov	r2, sp
 8000cb0:	f000 fc5e 	bl	8001570 <_fstat_r>
 8000cb4:	2800      	cmp	r0, #0
 8000cb6:	dbf2      	blt.n	8000c9e <__swhatbuf_r+0x12>
 8000cb8:	9a01      	ldr	r2, [sp, #4]
 8000cba:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000cbe:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000cc2:	425a      	negs	r2, r3
 8000cc4:	415a      	adcs	r2, r3
 8000cc6:	602a      	str	r2, [r5, #0]
 8000cc8:	e7ee      	b.n	8000ca8 <__swhatbuf_r+0x1c>
 8000cca:	2340      	movs	r3, #64	; 0x40
 8000ccc:	2000      	movs	r0, #0
 8000cce:	6023      	str	r3, [r4, #0]
 8000cd0:	b016      	add	sp, #88	; 0x58
 8000cd2:	bd70      	pop	{r4, r5, r6, pc}

08000cd4 <__smakebuf_r>:
 8000cd4:	898b      	ldrh	r3, [r1, #12]
 8000cd6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000cd8:	079d      	lsls	r5, r3, #30
 8000cda:	4606      	mov	r6, r0
 8000cdc:	460c      	mov	r4, r1
 8000cde:	d507      	bpl.n	8000cf0 <__smakebuf_r+0x1c>
 8000ce0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000ce4:	6023      	str	r3, [r4, #0]
 8000ce6:	6123      	str	r3, [r4, #16]
 8000ce8:	2301      	movs	r3, #1
 8000cea:	6163      	str	r3, [r4, #20]
 8000cec:	b002      	add	sp, #8
 8000cee:	bd70      	pop	{r4, r5, r6, pc}
 8000cf0:	ab01      	add	r3, sp, #4
 8000cf2:	466a      	mov	r2, sp
 8000cf4:	f7ff ffca 	bl	8000c8c <__swhatbuf_r>
 8000cf8:	9900      	ldr	r1, [sp, #0]
 8000cfa:	4605      	mov	r5, r0
 8000cfc:	4630      	mov	r0, r6
 8000cfe:	f000 f879 	bl	8000df4 <_malloc_r>
 8000d02:	b948      	cbnz	r0, 8000d18 <__smakebuf_r+0x44>
 8000d04:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d08:	059a      	lsls	r2, r3, #22
 8000d0a:	d4ef      	bmi.n	8000cec <__smakebuf_r+0x18>
 8000d0c:	f023 0303 	bic.w	r3, r3, #3
 8000d10:	f043 0302 	orr.w	r3, r3, #2
 8000d14:	81a3      	strh	r3, [r4, #12]
 8000d16:	e7e3      	b.n	8000ce0 <__smakebuf_r+0xc>
 8000d18:	4b0d      	ldr	r3, [pc, #52]	; (8000d50 <__smakebuf_r+0x7c>)
 8000d1a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000d1c:	89a3      	ldrh	r3, [r4, #12]
 8000d1e:	6020      	str	r0, [r4, #0]
 8000d20:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d24:	81a3      	strh	r3, [r4, #12]
 8000d26:	9b00      	ldr	r3, [sp, #0]
 8000d28:	6163      	str	r3, [r4, #20]
 8000d2a:	9b01      	ldr	r3, [sp, #4]
 8000d2c:	6120      	str	r0, [r4, #16]
 8000d2e:	b15b      	cbz	r3, 8000d48 <__smakebuf_r+0x74>
 8000d30:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d34:	4630      	mov	r0, r6
 8000d36:	f000 fc2d 	bl	8001594 <_isatty_r>
 8000d3a:	b128      	cbz	r0, 8000d48 <__smakebuf_r+0x74>
 8000d3c:	89a3      	ldrh	r3, [r4, #12]
 8000d3e:	f023 0303 	bic.w	r3, r3, #3
 8000d42:	f043 0301 	orr.w	r3, r3, #1
 8000d46:	81a3      	strh	r3, [r4, #12]
 8000d48:	89a0      	ldrh	r0, [r4, #12]
 8000d4a:	4305      	orrs	r5, r0
 8000d4c:	81a5      	strh	r5, [r4, #12]
 8000d4e:	e7cd      	b.n	8000cec <__smakebuf_r+0x18>
 8000d50:	08000ae5 	.word	0x08000ae5

08000d54 <_free_r>:
 8000d54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000d56:	2900      	cmp	r1, #0
 8000d58:	d048      	beq.n	8000dec <_free_r+0x98>
 8000d5a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000d5e:	9001      	str	r0, [sp, #4]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	f1a1 0404 	sub.w	r4, r1, #4
 8000d66:	bfb8      	it	lt
 8000d68:	18e4      	addlt	r4, r4, r3
 8000d6a:	f000 fc35 	bl	80015d8 <__malloc_lock>
 8000d6e:	4a20      	ldr	r2, [pc, #128]	; (8000df0 <_free_r+0x9c>)
 8000d70:	9801      	ldr	r0, [sp, #4]
 8000d72:	6813      	ldr	r3, [r2, #0]
 8000d74:	4615      	mov	r5, r2
 8000d76:	b933      	cbnz	r3, 8000d86 <_free_r+0x32>
 8000d78:	6063      	str	r3, [r4, #4]
 8000d7a:	6014      	str	r4, [r2, #0]
 8000d7c:	b003      	add	sp, #12
 8000d7e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000d82:	f000 bc2f 	b.w	80015e4 <__malloc_unlock>
 8000d86:	42a3      	cmp	r3, r4
 8000d88:	d90b      	bls.n	8000da2 <_free_r+0x4e>
 8000d8a:	6821      	ldr	r1, [r4, #0]
 8000d8c:	1862      	adds	r2, r4, r1
 8000d8e:	4293      	cmp	r3, r2
 8000d90:	bf04      	itt	eq
 8000d92:	681a      	ldreq	r2, [r3, #0]
 8000d94:	685b      	ldreq	r3, [r3, #4]
 8000d96:	6063      	str	r3, [r4, #4]
 8000d98:	bf04      	itt	eq
 8000d9a:	1852      	addeq	r2, r2, r1
 8000d9c:	6022      	streq	r2, [r4, #0]
 8000d9e:	602c      	str	r4, [r5, #0]
 8000da0:	e7ec      	b.n	8000d7c <_free_r+0x28>
 8000da2:	461a      	mov	r2, r3
 8000da4:	685b      	ldr	r3, [r3, #4]
 8000da6:	b10b      	cbz	r3, 8000dac <_free_r+0x58>
 8000da8:	42a3      	cmp	r3, r4
 8000daa:	d9fa      	bls.n	8000da2 <_free_r+0x4e>
 8000dac:	6811      	ldr	r1, [r2, #0]
 8000dae:	1855      	adds	r5, r2, r1
 8000db0:	42a5      	cmp	r5, r4
 8000db2:	d10b      	bne.n	8000dcc <_free_r+0x78>
 8000db4:	6824      	ldr	r4, [r4, #0]
 8000db6:	4421      	add	r1, r4
 8000db8:	1854      	adds	r4, r2, r1
 8000dba:	42a3      	cmp	r3, r4
 8000dbc:	6011      	str	r1, [r2, #0]
 8000dbe:	d1dd      	bne.n	8000d7c <_free_r+0x28>
 8000dc0:	681c      	ldr	r4, [r3, #0]
 8000dc2:	685b      	ldr	r3, [r3, #4]
 8000dc4:	6053      	str	r3, [r2, #4]
 8000dc6:	4421      	add	r1, r4
 8000dc8:	6011      	str	r1, [r2, #0]
 8000dca:	e7d7      	b.n	8000d7c <_free_r+0x28>
 8000dcc:	d902      	bls.n	8000dd4 <_free_r+0x80>
 8000dce:	230c      	movs	r3, #12
 8000dd0:	6003      	str	r3, [r0, #0]
 8000dd2:	e7d3      	b.n	8000d7c <_free_r+0x28>
 8000dd4:	6825      	ldr	r5, [r4, #0]
 8000dd6:	1961      	adds	r1, r4, r5
 8000dd8:	428b      	cmp	r3, r1
 8000dda:	bf04      	itt	eq
 8000ddc:	6819      	ldreq	r1, [r3, #0]
 8000dde:	685b      	ldreq	r3, [r3, #4]
 8000de0:	6063      	str	r3, [r4, #4]
 8000de2:	bf04      	itt	eq
 8000de4:	1949      	addeq	r1, r1, r5
 8000de6:	6021      	streq	r1, [r4, #0]
 8000de8:	6054      	str	r4, [r2, #4]
 8000dea:	e7c7      	b.n	8000d7c <_free_r+0x28>
 8000dec:	b003      	add	sp, #12
 8000dee:	bd30      	pop	{r4, r5, pc}
 8000df0:	20000084 	.word	0x20000084

08000df4 <_malloc_r>:
 8000df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000df6:	1ccd      	adds	r5, r1, #3
 8000df8:	f025 0503 	bic.w	r5, r5, #3
 8000dfc:	3508      	adds	r5, #8
 8000dfe:	2d0c      	cmp	r5, #12
 8000e00:	bf38      	it	cc
 8000e02:	250c      	movcc	r5, #12
 8000e04:	2d00      	cmp	r5, #0
 8000e06:	4606      	mov	r6, r0
 8000e08:	db01      	blt.n	8000e0e <_malloc_r+0x1a>
 8000e0a:	42a9      	cmp	r1, r5
 8000e0c:	d903      	bls.n	8000e16 <_malloc_r+0x22>
 8000e0e:	230c      	movs	r3, #12
 8000e10:	6033      	str	r3, [r6, #0]
 8000e12:	2000      	movs	r0, #0
 8000e14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000e16:	f000 fbdf 	bl	80015d8 <__malloc_lock>
 8000e1a:	4921      	ldr	r1, [pc, #132]	; (8000ea0 <_malloc_r+0xac>)
 8000e1c:	680a      	ldr	r2, [r1, #0]
 8000e1e:	4614      	mov	r4, r2
 8000e20:	b99c      	cbnz	r4, 8000e4a <_malloc_r+0x56>
 8000e22:	4f20      	ldr	r7, [pc, #128]	; (8000ea4 <_malloc_r+0xb0>)
 8000e24:	683b      	ldr	r3, [r7, #0]
 8000e26:	b923      	cbnz	r3, 8000e32 <_malloc_r+0x3e>
 8000e28:	4621      	mov	r1, r4
 8000e2a:	4630      	mov	r0, r6
 8000e2c:	f000 fb2a 	bl	8001484 <_sbrk_r>
 8000e30:	6038      	str	r0, [r7, #0]
 8000e32:	4629      	mov	r1, r5
 8000e34:	4630      	mov	r0, r6
 8000e36:	f000 fb25 	bl	8001484 <_sbrk_r>
 8000e3a:	1c43      	adds	r3, r0, #1
 8000e3c:	d123      	bne.n	8000e86 <_malloc_r+0x92>
 8000e3e:	230c      	movs	r3, #12
 8000e40:	6033      	str	r3, [r6, #0]
 8000e42:	4630      	mov	r0, r6
 8000e44:	f000 fbce 	bl	80015e4 <__malloc_unlock>
 8000e48:	e7e3      	b.n	8000e12 <_malloc_r+0x1e>
 8000e4a:	6823      	ldr	r3, [r4, #0]
 8000e4c:	1b5b      	subs	r3, r3, r5
 8000e4e:	d417      	bmi.n	8000e80 <_malloc_r+0x8c>
 8000e50:	2b0b      	cmp	r3, #11
 8000e52:	d903      	bls.n	8000e5c <_malloc_r+0x68>
 8000e54:	6023      	str	r3, [r4, #0]
 8000e56:	441c      	add	r4, r3
 8000e58:	6025      	str	r5, [r4, #0]
 8000e5a:	e004      	b.n	8000e66 <_malloc_r+0x72>
 8000e5c:	6863      	ldr	r3, [r4, #4]
 8000e5e:	42a2      	cmp	r2, r4
 8000e60:	bf0c      	ite	eq
 8000e62:	600b      	streq	r3, [r1, #0]
 8000e64:	6053      	strne	r3, [r2, #4]
 8000e66:	4630      	mov	r0, r6
 8000e68:	f000 fbbc 	bl	80015e4 <__malloc_unlock>
 8000e6c:	f104 000b 	add.w	r0, r4, #11
 8000e70:	1d23      	adds	r3, r4, #4
 8000e72:	f020 0007 	bic.w	r0, r0, #7
 8000e76:	1ac2      	subs	r2, r0, r3
 8000e78:	d0cc      	beq.n	8000e14 <_malloc_r+0x20>
 8000e7a:	1a1b      	subs	r3, r3, r0
 8000e7c:	50a3      	str	r3, [r4, r2]
 8000e7e:	e7c9      	b.n	8000e14 <_malloc_r+0x20>
 8000e80:	4622      	mov	r2, r4
 8000e82:	6864      	ldr	r4, [r4, #4]
 8000e84:	e7cc      	b.n	8000e20 <_malloc_r+0x2c>
 8000e86:	1cc4      	adds	r4, r0, #3
 8000e88:	f024 0403 	bic.w	r4, r4, #3
 8000e8c:	42a0      	cmp	r0, r4
 8000e8e:	d0e3      	beq.n	8000e58 <_malloc_r+0x64>
 8000e90:	1a21      	subs	r1, r4, r0
 8000e92:	4630      	mov	r0, r6
 8000e94:	f000 faf6 	bl	8001484 <_sbrk_r>
 8000e98:	3001      	adds	r0, #1
 8000e9a:	d1dd      	bne.n	8000e58 <_malloc_r+0x64>
 8000e9c:	e7cf      	b.n	8000e3e <_malloc_r+0x4a>
 8000e9e:	bf00      	nop
 8000ea0:	20000084 	.word	0x20000084
 8000ea4:	20000088 	.word	0x20000088

08000ea8 <__sfputc_r>:
 8000ea8:	6893      	ldr	r3, [r2, #8]
 8000eaa:	3b01      	subs	r3, #1
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	b410      	push	{r4}
 8000eb0:	6093      	str	r3, [r2, #8]
 8000eb2:	da08      	bge.n	8000ec6 <__sfputc_r+0x1e>
 8000eb4:	6994      	ldr	r4, [r2, #24]
 8000eb6:	42a3      	cmp	r3, r4
 8000eb8:	db01      	blt.n	8000ebe <__sfputc_r+0x16>
 8000eba:	290a      	cmp	r1, #10
 8000ebc:	d103      	bne.n	8000ec6 <__sfputc_r+0x1e>
 8000ebe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ec2:	f7ff bc69 	b.w	8000798 <__swbuf_r>
 8000ec6:	6813      	ldr	r3, [r2, #0]
 8000ec8:	1c58      	adds	r0, r3, #1
 8000eca:	6010      	str	r0, [r2, #0]
 8000ecc:	7019      	strb	r1, [r3, #0]
 8000ece:	4608      	mov	r0, r1
 8000ed0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ed4:	4770      	bx	lr

08000ed6 <__sfputs_r>:
 8000ed6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ed8:	4606      	mov	r6, r0
 8000eda:	460f      	mov	r7, r1
 8000edc:	4614      	mov	r4, r2
 8000ede:	18d5      	adds	r5, r2, r3
 8000ee0:	42ac      	cmp	r4, r5
 8000ee2:	d101      	bne.n	8000ee8 <__sfputs_r+0x12>
 8000ee4:	2000      	movs	r0, #0
 8000ee6:	e007      	b.n	8000ef8 <__sfputs_r+0x22>
 8000ee8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000eec:	463a      	mov	r2, r7
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f7ff ffda 	bl	8000ea8 <__sfputc_r>
 8000ef4:	1c43      	adds	r3, r0, #1
 8000ef6:	d1f3      	bne.n	8000ee0 <__sfputs_r+0xa>
 8000ef8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000efc <_vfiprintf_r>:
 8000efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f00:	460d      	mov	r5, r1
 8000f02:	b09d      	sub	sp, #116	; 0x74
 8000f04:	4614      	mov	r4, r2
 8000f06:	4698      	mov	r8, r3
 8000f08:	4606      	mov	r6, r0
 8000f0a:	b118      	cbz	r0, 8000f14 <_vfiprintf_r+0x18>
 8000f0c:	6983      	ldr	r3, [r0, #24]
 8000f0e:	b90b      	cbnz	r3, 8000f14 <_vfiprintf_r+0x18>
 8000f10:	f7ff fe1c 	bl	8000b4c <__sinit>
 8000f14:	4b89      	ldr	r3, [pc, #548]	; (800113c <_vfiprintf_r+0x240>)
 8000f16:	429d      	cmp	r5, r3
 8000f18:	d11b      	bne.n	8000f52 <_vfiprintf_r+0x56>
 8000f1a:	6875      	ldr	r5, [r6, #4]
 8000f1c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f1e:	07d9      	lsls	r1, r3, #31
 8000f20:	d405      	bmi.n	8000f2e <_vfiprintf_r+0x32>
 8000f22:	89ab      	ldrh	r3, [r5, #12]
 8000f24:	059a      	lsls	r2, r3, #22
 8000f26:	d402      	bmi.n	8000f2e <_vfiprintf_r+0x32>
 8000f28:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f2a:	f7ff fead 	bl	8000c88 <__retarget_lock_acquire_recursive>
 8000f2e:	89ab      	ldrh	r3, [r5, #12]
 8000f30:	071b      	lsls	r3, r3, #28
 8000f32:	d501      	bpl.n	8000f38 <_vfiprintf_r+0x3c>
 8000f34:	692b      	ldr	r3, [r5, #16]
 8000f36:	b9eb      	cbnz	r3, 8000f74 <_vfiprintf_r+0x78>
 8000f38:	4629      	mov	r1, r5
 8000f3a:	4630      	mov	r0, r6
 8000f3c:	f7ff fc7e 	bl	800083c <__swsetup_r>
 8000f40:	b1c0      	cbz	r0, 8000f74 <_vfiprintf_r+0x78>
 8000f42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f44:	07dc      	lsls	r4, r3, #31
 8000f46:	d50e      	bpl.n	8000f66 <_vfiprintf_r+0x6a>
 8000f48:	f04f 30ff 	mov.w	r0, #4294967295
 8000f4c:	b01d      	add	sp, #116	; 0x74
 8000f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f52:	4b7b      	ldr	r3, [pc, #492]	; (8001140 <_vfiprintf_r+0x244>)
 8000f54:	429d      	cmp	r5, r3
 8000f56:	d101      	bne.n	8000f5c <_vfiprintf_r+0x60>
 8000f58:	68b5      	ldr	r5, [r6, #8]
 8000f5a:	e7df      	b.n	8000f1c <_vfiprintf_r+0x20>
 8000f5c:	4b79      	ldr	r3, [pc, #484]	; (8001144 <_vfiprintf_r+0x248>)
 8000f5e:	429d      	cmp	r5, r3
 8000f60:	bf08      	it	eq
 8000f62:	68f5      	ldreq	r5, [r6, #12]
 8000f64:	e7da      	b.n	8000f1c <_vfiprintf_r+0x20>
 8000f66:	89ab      	ldrh	r3, [r5, #12]
 8000f68:	0598      	lsls	r0, r3, #22
 8000f6a:	d4ed      	bmi.n	8000f48 <_vfiprintf_r+0x4c>
 8000f6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f6e:	f7ff fe8c 	bl	8000c8a <__retarget_lock_release_recursive>
 8000f72:	e7e9      	b.n	8000f48 <_vfiprintf_r+0x4c>
 8000f74:	2300      	movs	r3, #0
 8000f76:	9309      	str	r3, [sp, #36]	; 0x24
 8000f78:	2320      	movs	r3, #32
 8000f7a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000f7e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000f82:	2330      	movs	r3, #48	; 0x30
 8000f84:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001148 <_vfiprintf_r+0x24c>
 8000f88:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f8c:	f04f 0901 	mov.w	r9, #1
 8000f90:	4623      	mov	r3, r4
 8000f92:	469a      	mov	sl, r3
 8000f94:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f98:	b10a      	cbz	r2, 8000f9e <_vfiprintf_r+0xa2>
 8000f9a:	2a25      	cmp	r2, #37	; 0x25
 8000f9c:	d1f9      	bne.n	8000f92 <_vfiprintf_r+0x96>
 8000f9e:	ebba 0b04 	subs.w	fp, sl, r4
 8000fa2:	d00b      	beq.n	8000fbc <_vfiprintf_r+0xc0>
 8000fa4:	465b      	mov	r3, fp
 8000fa6:	4622      	mov	r2, r4
 8000fa8:	4629      	mov	r1, r5
 8000faa:	4630      	mov	r0, r6
 8000fac:	f7ff ff93 	bl	8000ed6 <__sfputs_r>
 8000fb0:	3001      	adds	r0, #1
 8000fb2:	f000 80aa 	beq.w	800110a <_vfiprintf_r+0x20e>
 8000fb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000fb8:	445a      	add	r2, fp
 8000fba:	9209      	str	r2, [sp, #36]	; 0x24
 8000fbc:	f89a 3000 	ldrb.w	r3, [sl]
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	f000 80a2 	beq.w	800110a <_vfiprintf_r+0x20e>
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	f04f 32ff 	mov.w	r2, #4294967295
 8000fcc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000fd0:	f10a 0a01 	add.w	sl, sl, #1
 8000fd4:	9304      	str	r3, [sp, #16]
 8000fd6:	9307      	str	r3, [sp, #28]
 8000fd8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000fdc:	931a      	str	r3, [sp, #104]	; 0x68
 8000fde:	4654      	mov	r4, sl
 8000fe0:	2205      	movs	r2, #5
 8000fe2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000fe6:	4858      	ldr	r0, [pc, #352]	; (8001148 <_vfiprintf_r+0x24c>)
 8000fe8:	f7ff f902 	bl	80001f0 <memchr>
 8000fec:	9a04      	ldr	r2, [sp, #16]
 8000fee:	b9d8      	cbnz	r0, 8001028 <_vfiprintf_r+0x12c>
 8000ff0:	06d1      	lsls	r1, r2, #27
 8000ff2:	bf44      	itt	mi
 8000ff4:	2320      	movmi	r3, #32
 8000ff6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ffa:	0713      	lsls	r3, r2, #28
 8000ffc:	bf44      	itt	mi
 8000ffe:	232b      	movmi	r3, #43	; 0x2b
 8001000:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001004:	f89a 3000 	ldrb.w	r3, [sl]
 8001008:	2b2a      	cmp	r3, #42	; 0x2a
 800100a:	d015      	beq.n	8001038 <_vfiprintf_r+0x13c>
 800100c:	9a07      	ldr	r2, [sp, #28]
 800100e:	4654      	mov	r4, sl
 8001010:	2000      	movs	r0, #0
 8001012:	f04f 0c0a 	mov.w	ip, #10
 8001016:	4621      	mov	r1, r4
 8001018:	f811 3b01 	ldrb.w	r3, [r1], #1
 800101c:	3b30      	subs	r3, #48	; 0x30
 800101e:	2b09      	cmp	r3, #9
 8001020:	d94e      	bls.n	80010c0 <_vfiprintf_r+0x1c4>
 8001022:	b1b0      	cbz	r0, 8001052 <_vfiprintf_r+0x156>
 8001024:	9207      	str	r2, [sp, #28]
 8001026:	e014      	b.n	8001052 <_vfiprintf_r+0x156>
 8001028:	eba0 0308 	sub.w	r3, r0, r8
 800102c:	fa09 f303 	lsl.w	r3, r9, r3
 8001030:	4313      	orrs	r3, r2
 8001032:	9304      	str	r3, [sp, #16]
 8001034:	46a2      	mov	sl, r4
 8001036:	e7d2      	b.n	8000fde <_vfiprintf_r+0xe2>
 8001038:	9b03      	ldr	r3, [sp, #12]
 800103a:	1d19      	adds	r1, r3, #4
 800103c:	681b      	ldr	r3, [r3, #0]
 800103e:	9103      	str	r1, [sp, #12]
 8001040:	2b00      	cmp	r3, #0
 8001042:	bfbb      	ittet	lt
 8001044:	425b      	neglt	r3, r3
 8001046:	f042 0202 	orrlt.w	r2, r2, #2
 800104a:	9307      	strge	r3, [sp, #28]
 800104c:	9307      	strlt	r3, [sp, #28]
 800104e:	bfb8      	it	lt
 8001050:	9204      	strlt	r2, [sp, #16]
 8001052:	7823      	ldrb	r3, [r4, #0]
 8001054:	2b2e      	cmp	r3, #46	; 0x2e
 8001056:	d10c      	bne.n	8001072 <_vfiprintf_r+0x176>
 8001058:	7863      	ldrb	r3, [r4, #1]
 800105a:	2b2a      	cmp	r3, #42	; 0x2a
 800105c:	d135      	bne.n	80010ca <_vfiprintf_r+0x1ce>
 800105e:	9b03      	ldr	r3, [sp, #12]
 8001060:	1d1a      	adds	r2, r3, #4
 8001062:	681b      	ldr	r3, [r3, #0]
 8001064:	9203      	str	r2, [sp, #12]
 8001066:	2b00      	cmp	r3, #0
 8001068:	bfb8      	it	lt
 800106a:	f04f 33ff 	movlt.w	r3, #4294967295
 800106e:	3402      	adds	r4, #2
 8001070:	9305      	str	r3, [sp, #20]
 8001072:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001158 <_vfiprintf_r+0x25c>
 8001076:	7821      	ldrb	r1, [r4, #0]
 8001078:	2203      	movs	r2, #3
 800107a:	4650      	mov	r0, sl
 800107c:	f7ff f8b8 	bl	80001f0 <memchr>
 8001080:	b140      	cbz	r0, 8001094 <_vfiprintf_r+0x198>
 8001082:	2340      	movs	r3, #64	; 0x40
 8001084:	eba0 000a 	sub.w	r0, r0, sl
 8001088:	fa03 f000 	lsl.w	r0, r3, r0
 800108c:	9b04      	ldr	r3, [sp, #16]
 800108e:	4303      	orrs	r3, r0
 8001090:	3401      	adds	r4, #1
 8001092:	9304      	str	r3, [sp, #16]
 8001094:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001098:	482c      	ldr	r0, [pc, #176]	; (800114c <_vfiprintf_r+0x250>)
 800109a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800109e:	2206      	movs	r2, #6
 80010a0:	f7ff f8a6 	bl	80001f0 <memchr>
 80010a4:	2800      	cmp	r0, #0
 80010a6:	d03f      	beq.n	8001128 <_vfiprintf_r+0x22c>
 80010a8:	4b29      	ldr	r3, [pc, #164]	; (8001150 <_vfiprintf_r+0x254>)
 80010aa:	bb1b      	cbnz	r3, 80010f4 <_vfiprintf_r+0x1f8>
 80010ac:	9b03      	ldr	r3, [sp, #12]
 80010ae:	3307      	adds	r3, #7
 80010b0:	f023 0307 	bic.w	r3, r3, #7
 80010b4:	3308      	adds	r3, #8
 80010b6:	9303      	str	r3, [sp, #12]
 80010b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80010ba:	443b      	add	r3, r7
 80010bc:	9309      	str	r3, [sp, #36]	; 0x24
 80010be:	e767      	b.n	8000f90 <_vfiprintf_r+0x94>
 80010c0:	fb0c 3202 	mla	r2, ip, r2, r3
 80010c4:	460c      	mov	r4, r1
 80010c6:	2001      	movs	r0, #1
 80010c8:	e7a5      	b.n	8001016 <_vfiprintf_r+0x11a>
 80010ca:	2300      	movs	r3, #0
 80010cc:	3401      	adds	r4, #1
 80010ce:	9305      	str	r3, [sp, #20]
 80010d0:	4619      	mov	r1, r3
 80010d2:	f04f 0c0a 	mov.w	ip, #10
 80010d6:	4620      	mov	r0, r4
 80010d8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80010dc:	3a30      	subs	r2, #48	; 0x30
 80010de:	2a09      	cmp	r2, #9
 80010e0:	d903      	bls.n	80010ea <_vfiprintf_r+0x1ee>
 80010e2:	2b00      	cmp	r3, #0
 80010e4:	d0c5      	beq.n	8001072 <_vfiprintf_r+0x176>
 80010e6:	9105      	str	r1, [sp, #20]
 80010e8:	e7c3      	b.n	8001072 <_vfiprintf_r+0x176>
 80010ea:	fb0c 2101 	mla	r1, ip, r1, r2
 80010ee:	4604      	mov	r4, r0
 80010f0:	2301      	movs	r3, #1
 80010f2:	e7f0      	b.n	80010d6 <_vfiprintf_r+0x1da>
 80010f4:	ab03      	add	r3, sp, #12
 80010f6:	9300      	str	r3, [sp, #0]
 80010f8:	462a      	mov	r2, r5
 80010fa:	4b16      	ldr	r3, [pc, #88]	; (8001154 <_vfiprintf_r+0x258>)
 80010fc:	a904      	add	r1, sp, #16
 80010fe:	4630      	mov	r0, r6
 8001100:	f3af 8000 	nop.w
 8001104:	4607      	mov	r7, r0
 8001106:	1c78      	adds	r0, r7, #1
 8001108:	d1d6      	bne.n	80010b8 <_vfiprintf_r+0x1bc>
 800110a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800110c:	07d9      	lsls	r1, r3, #31
 800110e:	d405      	bmi.n	800111c <_vfiprintf_r+0x220>
 8001110:	89ab      	ldrh	r3, [r5, #12]
 8001112:	059a      	lsls	r2, r3, #22
 8001114:	d402      	bmi.n	800111c <_vfiprintf_r+0x220>
 8001116:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001118:	f7ff fdb7 	bl	8000c8a <__retarget_lock_release_recursive>
 800111c:	89ab      	ldrh	r3, [r5, #12]
 800111e:	065b      	lsls	r3, r3, #25
 8001120:	f53f af12 	bmi.w	8000f48 <_vfiprintf_r+0x4c>
 8001124:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001126:	e711      	b.n	8000f4c <_vfiprintf_r+0x50>
 8001128:	ab03      	add	r3, sp, #12
 800112a:	9300      	str	r3, [sp, #0]
 800112c:	462a      	mov	r2, r5
 800112e:	4b09      	ldr	r3, [pc, #36]	; (8001154 <_vfiprintf_r+0x258>)
 8001130:	a904      	add	r1, sp, #16
 8001132:	4630      	mov	r0, r6
 8001134:	f000 f880 	bl	8001238 <_printf_i>
 8001138:	e7e4      	b.n	8001104 <_vfiprintf_r+0x208>
 800113a:	bf00      	nop
 800113c:	080016d8 	.word	0x080016d8
 8001140:	080016f8 	.word	0x080016f8
 8001144:	080016b8 	.word	0x080016b8
 8001148:	08001718 	.word	0x08001718
 800114c:	08001722 	.word	0x08001722
 8001150:	00000000 	.word	0x00000000
 8001154:	08000ed7 	.word	0x08000ed7
 8001158:	0800171e 	.word	0x0800171e

0800115c <_printf_common>:
 800115c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001160:	4616      	mov	r6, r2
 8001162:	4699      	mov	r9, r3
 8001164:	688a      	ldr	r2, [r1, #8]
 8001166:	690b      	ldr	r3, [r1, #16]
 8001168:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800116c:	4293      	cmp	r3, r2
 800116e:	bfb8      	it	lt
 8001170:	4613      	movlt	r3, r2
 8001172:	6033      	str	r3, [r6, #0]
 8001174:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001178:	4607      	mov	r7, r0
 800117a:	460c      	mov	r4, r1
 800117c:	b10a      	cbz	r2, 8001182 <_printf_common+0x26>
 800117e:	3301      	adds	r3, #1
 8001180:	6033      	str	r3, [r6, #0]
 8001182:	6823      	ldr	r3, [r4, #0]
 8001184:	0699      	lsls	r1, r3, #26
 8001186:	bf42      	ittt	mi
 8001188:	6833      	ldrmi	r3, [r6, #0]
 800118a:	3302      	addmi	r3, #2
 800118c:	6033      	strmi	r3, [r6, #0]
 800118e:	6825      	ldr	r5, [r4, #0]
 8001190:	f015 0506 	ands.w	r5, r5, #6
 8001194:	d106      	bne.n	80011a4 <_printf_common+0x48>
 8001196:	f104 0a19 	add.w	sl, r4, #25
 800119a:	68e3      	ldr	r3, [r4, #12]
 800119c:	6832      	ldr	r2, [r6, #0]
 800119e:	1a9b      	subs	r3, r3, r2
 80011a0:	42ab      	cmp	r3, r5
 80011a2:	dc26      	bgt.n	80011f2 <_printf_common+0x96>
 80011a4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80011a8:	1e13      	subs	r3, r2, #0
 80011aa:	6822      	ldr	r2, [r4, #0]
 80011ac:	bf18      	it	ne
 80011ae:	2301      	movne	r3, #1
 80011b0:	0692      	lsls	r2, r2, #26
 80011b2:	d42b      	bmi.n	800120c <_printf_common+0xb0>
 80011b4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80011b8:	4649      	mov	r1, r9
 80011ba:	4638      	mov	r0, r7
 80011bc:	47c0      	blx	r8
 80011be:	3001      	adds	r0, #1
 80011c0:	d01e      	beq.n	8001200 <_printf_common+0xa4>
 80011c2:	6823      	ldr	r3, [r4, #0]
 80011c4:	68e5      	ldr	r5, [r4, #12]
 80011c6:	6832      	ldr	r2, [r6, #0]
 80011c8:	f003 0306 	and.w	r3, r3, #6
 80011cc:	2b04      	cmp	r3, #4
 80011ce:	bf08      	it	eq
 80011d0:	1aad      	subeq	r5, r5, r2
 80011d2:	68a3      	ldr	r3, [r4, #8]
 80011d4:	6922      	ldr	r2, [r4, #16]
 80011d6:	bf0c      	ite	eq
 80011d8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80011dc:	2500      	movne	r5, #0
 80011de:	4293      	cmp	r3, r2
 80011e0:	bfc4      	itt	gt
 80011e2:	1a9b      	subgt	r3, r3, r2
 80011e4:	18ed      	addgt	r5, r5, r3
 80011e6:	2600      	movs	r6, #0
 80011e8:	341a      	adds	r4, #26
 80011ea:	42b5      	cmp	r5, r6
 80011ec:	d11a      	bne.n	8001224 <_printf_common+0xc8>
 80011ee:	2000      	movs	r0, #0
 80011f0:	e008      	b.n	8001204 <_printf_common+0xa8>
 80011f2:	2301      	movs	r3, #1
 80011f4:	4652      	mov	r2, sl
 80011f6:	4649      	mov	r1, r9
 80011f8:	4638      	mov	r0, r7
 80011fa:	47c0      	blx	r8
 80011fc:	3001      	adds	r0, #1
 80011fe:	d103      	bne.n	8001208 <_printf_common+0xac>
 8001200:	f04f 30ff 	mov.w	r0, #4294967295
 8001204:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001208:	3501      	adds	r5, #1
 800120a:	e7c6      	b.n	800119a <_printf_common+0x3e>
 800120c:	18e1      	adds	r1, r4, r3
 800120e:	1c5a      	adds	r2, r3, #1
 8001210:	2030      	movs	r0, #48	; 0x30
 8001212:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001216:	4422      	add	r2, r4
 8001218:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800121c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001220:	3302      	adds	r3, #2
 8001222:	e7c7      	b.n	80011b4 <_printf_common+0x58>
 8001224:	2301      	movs	r3, #1
 8001226:	4622      	mov	r2, r4
 8001228:	4649      	mov	r1, r9
 800122a:	4638      	mov	r0, r7
 800122c:	47c0      	blx	r8
 800122e:	3001      	adds	r0, #1
 8001230:	d0e6      	beq.n	8001200 <_printf_common+0xa4>
 8001232:	3601      	adds	r6, #1
 8001234:	e7d9      	b.n	80011ea <_printf_common+0x8e>
	...

08001238 <_printf_i>:
 8001238:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800123c:	460c      	mov	r4, r1
 800123e:	4691      	mov	r9, r2
 8001240:	7e27      	ldrb	r7, [r4, #24]
 8001242:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001244:	2f78      	cmp	r7, #120	; 0x78
 8001246:	4680      	mov	r8, r0
 8001248:	469a      	mov	sl, r3
 800124a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800124e:	d807      	bhi.n	8001260 <_printf_i+0x28>
 8001250:	2f62      	cmp	r7, #98	; 0x62
 8001252:	d80a      	bhi.n	800126a <_printf_i+0x32>
 8001254:	2f00      	cmp	r7, #0
 8001256:	f000 80d8 	beq.w	800140a <_printf_i+0x1d2>
 800125a:	2f58      	cmp	r7, #88	; 0x58
 800125c:	f000 80a3 	beq.w	80013a6 <_printf_i+0x16e>
 8001260:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001264:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001268:	e03a      	b.n	80012e0 <_printf_i+0xa8>
 800126a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800126e:	2b15      	cmp	r3, #21
 8001270:	d8f6      	bhi.n	8001260 <_printf_i+0x28>
 8001272:	a001      	add	r0, pc, #4	; (adr r0, 8001278 <_printf_i+0x40>)
 8001274:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001278:	080012d1 	.word	0x080012d1
 800127c:	080012e5 	.word	0x080012e5
 8001280:	08001261 	.word	0x08001261
 8001284:	08001261 	.word	0x08001261
 8001288:	08001261 	.word	0x08001261
 800128c:	08001261 	.word	0x08001261
 8001290:	080012e5 	.word	0x080012e5
 8001294:	08001261 	.word	0x08001261
 8001298:	08001261 	.word	0x08001261
 800129c:	08001261 	.word	0x08001261
 80012a0:	08001261 	.word	0x08001261
 80012a4:	080013f1 	.word	0x080013f1
 80012a8:	08001315 	.word	0x08001315
 80012ac:	080013d3 	.word	0x080013d3
 80012b0:	08001261 	.word	0x08001261
 80012b4:	08001261 	.word	0x08001261
 80012b8:	08001413 	.word	0x08001413
 80012bc:	08001261 	.word	0x08001261
 80012c0:	08001315 	.word	0x08001315
 80012c4:	08001261 	.word	0x08001261
 80012c8:	08001261 	.word	0x08001261
 80012cc:	080013db 	.word	0x080013db
 80012d0:	680b      	ldr	r3, [r1, #0]
 80012d2:	1d1a      	adds	r2, r3, #4
 80012d4:	681b      	ldr	r3, [r3, #0]
 80012d6:	600a      	str	r2, [r1, #0]
 80012d8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80012dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80012e0:	2301      	movs	r3, #1
 80012e2:	e0a3      	b.n	800142c <_printf_i+0x1f4>
 80012e4:	6825      	ldr	r5, [r4, #0]
 80012e6:	6808      	ldr	r0, [r1, #0]
 80012e8:	062e      	lsls	r6, r5, #24
 80012ea:	f100 0304 	add.w	r3, r0, #4
 80012ee:	d50a      	bpl.n	8001306 <_printf_i+0xce>
 80012f0:	6805      	ldr	r5, [r0, #0]
 80012f2:	600b      	str	r3, [r1, #0]
 80012f4:	2d00      	cmp	r5, #0
 80012f6:	da03      	bge.n	8001300 <_printf_i+0xc8>
 80012f8:	232d      	movs	r3, #45	; 0x2d
 80012fa:	426d      	negs	r5, r5
 80012fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001300:	485e      	ldr	r0, [pc, #376]	; (800147c <_printf_i+0x244>)
 8001302:	230a      	movs	r3, #10
 8001304:	e019      	b.n	800133a <_printf_i+0x102>
 8001306:	f015 0f40 	tst.w	r5, #64	; 0x40
 800130a:	6805      	ldr	r5, [r0, #0]
 800130c:	600b      	str	r3, [r1, #0]
 800130e:	bf18      	it	ne
 8001310:	b22d      	sxthne	r5, r5
 8001312:	e7ef      	b.n	80012f4 <_printf_i+0xbc>
 8001314:	680b      	ldr	r3, [r1, #0]
 8001316:	6825      	ldr	r5, [r4, #0]
 8001318:	1d18      	adds	r0, r3, #4
 800131a:	6008      	str	r0, [r1, #0]
 800131c:	0628      	lsls	r0, r5, #24
 800131e:	d501      	bpl.n	8001324 <_printf_i+0xec>
 8001320:	681d      	ldr	r5, [r3, #0]
 8001322:	e002      	b.n	800132a <_printf_i+0xf2>
 8001324:	0669      	lsls	r1, r5, #25
 8001326:	d5fb      	bpl.n	8001320 <_printf_i+0xe8>
 8001328:	881d      	ldrh	r5, [r3, #0]
 800132a:	4854      	ldr	r0, [pc, #336]	; (800147c <_printf_i+0x244>)
 800132c:	2f6f      	cmp	r7, #111	; 0x6f
 800132e:	bf0c      	ite	eq
 8001330:	2308      	moveq	r3, #8
 8001332:	230a      	movne	r3, #10
 8001334:	2100      	movs	r1, #0
 8001336:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800133a:	6866      	ldr	r6, [r4, #4]
 800133c:	60a6      	str	r6, [r4, #8]
 800133e:	2e00      	cmp	r6, #0
 8001340:	bfa2      	ittt	ge
 8001342:	6821      	ldrge	r1, [r4, #0]
 8001344:	f021 0104 	bicge.w	r1, r1, #4
 8001348:	6021      	strge	r1, [r4, #0]
 800134a:	b90d      	cbnz	r5, 8001350 <_printf_i+0x118>
 800134c:	2e00      	cmp	r6, #0
 800134e:	d04d      	beq.n	80013ec <_printf_i+0x1b4>
 8001350:	4616      	mov	r6, r2
 8001352:	fbb5 f1f3 	udiv	r1, r5, r3
 8001356:	fb03 5711 	mls	r7, r3, r1, r5
 800135a:	5dc7      	ldrb	r7, [r0, r7]
 800135c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001360:	462f      	mov	r7, r5
 8001362:	42bb      	cmp	r3, r7
 8001364:	460d      	mov	r5, r1
 8001366:	d9f4      	bls.n	8001352 <_printf_i+0x11a>
 8001368:	2b08      	cmp	r3, #8
 800136a:	d10b      	bne.n	8001384 <_printf_i+0x14c>
 800136c:	6823      	ldr	r3, [r4, #0]
 800136e:	07df      	lsls	r7, r3, #31
 8001370:	d508      	bpl.n	8001384 <_printf_i+0x14c>
 8001372:	6923      	ldr	r3, [r4, #16]
 8001374:	6861      	ldr	r1, [r4, #4]
 8001376:	4299      	cmp	r1, r3
 8001378:	bfde      	ittt	le
 800137a:	2330      	movle	r3, #48	; 0x30
 800137c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001380:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001384:	1b92      	subs	r2, r2, r6
 8001386:	6122      	str	r2, [r4, #16]
 8001388:	f8cd a000 	str.w	sl, [sp]
 800138c:	464b      	mov	r3, r9
 800138e:	aa03      	add	r2, sp, #12
 8001390:	4621      	mov	r1, r4
 8001392:	4640      	mov	r0, r8
 8001394:	f7ff fee2 	bl	800115c <_printf_common>
 8001398:	3001      	adds	r0, #1
 800139a:	d14c      	bne.n	8001436 <_printf_i+0x1fe>
 800139c:	f04f 30ff 	mov.w	r0, #4294967295
 80013a0:	b004      	add	sp, #16
 80013a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80013a6:	4835      	ldr	r0, [pc, #212]	; (800147c <_printf_i+0x244>)
 80013a8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80013ac:	6823      	ldr	r3, [r4, #0]
 80013ae:	680e      	ldr	r6, [r1, #0]
 80013b0:	061f      	lsls	r7, r3, #24
 80013b2:	f856 5b04 	ldr.w	r5, [r6], #4
 80013b6:	600e      	str	r6, [r1, #0]
 80013b8:	d514      	bpl.n	80013e4 <_printf_i+0x1ac>
 80013ba:	07d9      	lsls	r1, r3, #31
 80013bc:	bf44      	itt	mi
 80013be:	f043 0320 	orrmi.w	r3, r3, #32
 80013c2:	6023      	strmi	r3, [r4, #0]
 80013c4:	b91d      	cbnz	r5, 80013ce <_printf_i+0x196>
 80013c6:	6823      	ldr	r3, [r4, #0]
 80013c8:	f023 0320 	bic.w	r3, r3, #32
 80013cc:	6023      	str	r3, [r4, #0]
 80013ce:	2310      	movs	r3, #16
 80013d0:	e7b0      	b.n	8001334 <_printf_i+0xfc>
 80013d2:	6823      	ldr	r3, [r4, #0]
 80013d4:	f043 0320 	orr.w	r3, r3, #32
 80013d8:	6023      	str	r3, [r4, #0]
 80013da:	2378      	movs	r3, #120	; 0x78
 80013dc:	4828      	ldr	r0, [pc, #160]	; (8001480 <_printf_i+0x248>)
 80013de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80013e2:	e7e3      	b.n	80013ac <_printf_i+0x174>
 80013e4:	065e      	lsls	r6, r3, #25
 80013e6:	bf48      	it	mi
 80013e8:	b2ad      	uxthmi	r5, r5
 80013ea:	e7e6      	b.n	80013ba <_printf_i+0x182>
 80013ec:	4616      	mov	r6, r2
 80013ee:	e7bb      	b.n	8001368 <_printf_i+0x130>
 80013f0:	680b      	ldr	r3, [r1, #0]
 80013f2:	6826      	ldr	r6, [r4, #0]
 80013f4:	6960      	ldr	r0, [r4, #20]
 80013f6:	1d1d      	adds	r5, r3, #4
 80013f8:	600d      	str	r5, [r1, #0]
 80013fa:	0635      	lsls	r5, r6, #24
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	d501      	bpl.n	8001404 <_printf_i+0x1cc>
 8001400:	6018      	str	r0, [r3, #0]
 8001402:	e002      	b.n	800140a <_printf_i+0x1d2>
 8001404:	0671      	lsls	r1, r6, #25
 8001406:	d5fb      	bpl.n	8001400 <_printf_i+0x1c8>
 8001408:	8018      	strh	r0, [r3, #0]
 800140a:	2300      	movs	r3, #0
 800140c:	6123      	str	r3, [r4, #16]
 800140e:	4616      	mov	r6, r2
 8001410:	e7ba      	b.n	8001388 <_printf_i+0x150>
 8001412:	680b      	ldr	r3, [r1, #0]
 8001414:	1d1a      	adds	r2, r3, #4
 8001416:	600a      	str	r2, [r1, #0]
 8001418:	681e      	ldr	r6, [r3, #0]
 800141a:	6862      	ldr	r2, [r4, #4]
 800141c:	2100      	movs	r1, #0
 800141e:	4630      	mov	r0, r6
 8001420:	f7fe fee6 	bl	80001f0 <memchr>
 8001424:	b108      	cbz	r0, 800142a <_printf_i+0x1f2>
 8001426:	1b80      	subs	r0, r0, r6
 8001428:	6060      	str	r0, [r4, #4]
 800142a:	6863      	ldr	r3, [r4, #4]
 800142c:	6123      	str	r3, [r4, #16]
 800142e:	2300      	movs	r3, #0
 8001430:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001434:	e7a8      	b.n	8001388 <_printf_i+0x150>
 8001436:	6923      	ldr	r3, [r4, #16]
 8001438:	4632      	mov	r2, r6
 800143a:	4649      	mov	r1, r9
 800143c:	4640      	mov	r0, r8
 800143e:	47d0      	blx	sl
 8001440:	3001      	adds	r0, #1
 8001442:	d0ab      	beq.n	800139c <_printf_i+0x164>
 8001444:	6823      	ldr	r3, [r4, #0]
 8001446:	079b      	lsls	r3, r3, #30
 8001448:	d413      	bmi.n	8001472 <_printf_i+0x23a>
 800144a:	68e0      	ldr	r0, [r4, #12]
 800144c:	9b03      	ldr	r3, [sp, #12]
 800144e:	4298      	cmp	r0, r3
 8001450:	bfb8      	it	lt
 8001452:	4618      	movlt	r0, r3
 8001454:	e7a4      	b.n	80013a0 <_printf_i+0x168>
 8001456:	2301      	movs	r3, #1
 8001458:	4632      	mov	r2, r6
 800145a:	4649      	mov	r1, r9
 800145c:	4640      	mov	r0, r8
 800145e:	47d0      	blx	sl
 8001460:	3001      	adds	r0, #1
 8001462:	d09b      	beq.n	800139c <_printf_i+0x164>
 8001464:	3501      	adds	r5, #1
 8001466:	68e3      	ldr	r3, [r4, #12]
 8001468:	9903      	ldr	r1, [sp, #12]
 800146a:	1a5b      	subs	r3, r3, r1
 800146c:	42ab      	cmp	r3, r5
 800146e:	dcf2      	bgt.n	8001456 <_printf_i+0x21e>
 8001470:	e7eb      	b.n	800144a <_printf_i+0x212>
 8001472:	2500      	movs	r5, #0
 8001474:	f104 0619 	add.w	r6, r4, #25
 8001478:	e7f5      	b.n	8001466 <_printf_i+0x22e>
 800147a:	bf00      	nop
 800147c:	08001729 	.word	0x08001729
 8001480:	0800173a 	.word	0x0800173a

08001484 <_sbrk_r>:
 8001484:	b538      	push	{r3, r4, r5, lr}
 8001486:	4d06      	ldr	r5, [pc, #24]	; (80014a0 <_sbrk_r+0x1c>)
 8001488:	2300      	movs	r3, #0
 800148a:	4604      	mov	r4, r0
 800148c:	4608      	mov	r0, r1
 800148e:	602b      	str	r3, [r5, #0]
 8001490:	f7ff f862 	bl	8000558 <_sbrk>
 8001494:	1c43      	adds	r3, r0, #1
 8001496:	d102      	bne.n	800149e <_sbrk_r+0x1a>
 8001498:	682b      	ldr	r3, [r5, #0]
 800149a:	b103      	cbz	r3, 800149e <_sbrk_r+0x1a>
 800149c:	6023      	str	r3, [r4, #0]
 800149e:	bd38      	pop	{r3, r4, r5, pc}
 80014a0:	20000098 	.word	0x20000098

080014a4 <__sread>:
 80014a4:	b510      	push	{r4, lr}
 80014a6:	460c      	mov	r4, r1
 80014a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014ac:	f000 f8a0 	bl	80015f0 <_read_r>
 80014b0:	2800      	cmp	r0, #0
 80014b2:	bfab      	itete	ge
 80014b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80014b6:	89a3      	ldrhlt	r3, [r4, #12]
 80014b8:	181b      	addge	r3, r3, r0
 80014ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80014be:	bfac      	ite	ge
 80014c0:	6563      	strge	r3, [r4, #84]	; 0x54
 80014c2:	81a3      	strhlt	r3, [r4, #12]
 80014c4:	bd10      	pop	{r4, pc}

080014c6 <__swrite>:
 80014c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014ca:	461f      	mov	r7, r3
 80014cc:	898b      	ldrh	r3, [r1, #12]
 80014ce:	05db      	lsls	r3, r3, #23
 80014d0:	4605      	mov	r5, r0
 80014d2:	460c      	mov	r4, r1
 80014d4:	4616      	mov	r6, r2
 80014d6:	d505      	bpl.n	80014e4 <__swrite+0x1e>
 80014d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014dc:	2302      	movs	r3, #2
 80014de:	2200      	movs	r2, #0
 80014e0:	f000 f868 	bl	80015b4 <_lseek_r>
 80014e4:	89a3      	ldrh	r3, [r4, #12]
 80014e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014ea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014ee:	81a3      	strh	r3, [r4, #12]
 80014f0:	4632      	mov	r2, r6
 80014f2:	463b      	mov	r3, r7
 80014f4:	4628      	mov	r0, r5
 80014f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014fa:	f000 b817 	b.w	800152c <_write_r>

080014fe <__sseek>:
 80014fe:	b510      	push	{r4, lr}
 8001500:	460c      	mov	r4, r1
 8001502:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001506:	f000 f855 	bl	80015b4 <_lseek_r>
 800150a:	1c43      	adds	r3, r0, #1
 800150c:	89a3      	ldrh	r3, [r4, #12]
 800150e:	bf15      	itete	ne
 8001510:	6560      	strne	r0, [r4, #84]	; 0x54
 8001512:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001516:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800151a:	81a3      	strheq	r3, [r4, #12]
 800151c:	bf18      	it	ne
 800151e:	81a3      	strhne	r3, [r4, #12]
 8001520:	bd10      	pop	{r4, pc}

08001522 <__sclose>:
 8001522:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001526:	f000 b813 	b.w	8001550 <_close_r>
	...

0800152c <_write_r>:
 800152c:	b538      	push	{r3, r4, r5, lr}
 800152e:	4d07      	ldr	r5, [pc, #28]	; (800154c <_write_r+0x20>)
 8001530:	4604      	mov	r4, r0
 8001532:	4608      	mov	r0, r1
 8001534:	4611      	mov	r1, r2
 8001536:	2200      	movs	r2, #0
 8001538:	602a      	str	r2, [r5, #0]
 800153a:	461a      	mov	r2, r3
 800153c:	f7fe ffbb 	bl	80004b6 <_write>
 8001540:	1c43      	adds	r3, r0, #1
 8001542:	d102      	bne.n	800154a <_write_r+0x1e>
 8001544:	682b      	ldr	r3, [r5, #0]
 8001546:	b103      	cbz	r3, 800154a <_write_r+0x1e>
 8001548:	6023      	str	r3, [r4, #0]
 800154a:	bd38      	pop	{r3, r4, r5, pc}
 800154c:	20000098 	.word	0x20000098

08001550 <_close_r>:
 8001550:	b538      	push	{r3, r4, r5, lr}
 8001552:	4d06      	ldr	r5, [pc, #24]	; (800156c <_close_r+0x1c>)
 8001554:	2300      	movs	r3, #0
 8001556:	4604      	mov	r4, r0
 8001558:	4608      	mov	r0, r1
 800155a:	602b      	str	r3, [r5, #0]
 800155c:	f7fe ffc7 	bl	80004ee <_close>
 8001560:	1c43      	adds	r3, r0, #1
 8001562:	d102      	bne.n	800156a <_close_r+0x1a>
 8001564:	682b      	ldr	r3, [r5, #0]
 8001566:	b103      	cbz	r3, 800156a <_close_r+0x1a>
 8001568:	6023      	str	r3, [r4, #0]
 800156a:	bd38      	pop	{r3, r4, r5, pc}
 800156c:	20000098 	.word	0x20000098

08001570 <_fstat_r>:
 8001570:	b538      	push	{r3, r4, r5, lr}
 8001572:	4d07      	ldr	r5, [pc, #28]	; (8001590 <_fstat_r+0x20>)
 8001574:	2300      	movs	r3, #0
 8001576:	4604      	mov	r4, r0
 8001578:	4608      	mov	r0, r1
 800157a:	4611      	mov	r1, r2
 800157c:	602b      	str	r3, [r5, #0]
 800157e:	f7fe ffc2 	bl	8000506 <_fstat>
 8001582:	1c43      	adds	r3, r0, #1
 8001584:	d102      	bne.n	800158c <_fstat_r+0x1c>
 8001586:	682b      	ldr	r3, [r5, #0]
 8001588:	b103      	cbz	r3, 800158c <_fstat_r+0x1c>
 800158a:	6023      	str	r3, [r4, #0]
 800158c:	bd38      	pop	{r3, r4, r5, pc}
 800158e:	bf00      	nop
 8001590:	20000098 	.word	0x20000098

08001594 <_isatty_r>:
 8001594:	b538      	push	{r3, r4, r5, lr}
 8001596:	4d06      	ldr	r5, [pc, #24]	; (80015b0 <_isatty_r+0x1c>)
 8001598:	2300      	movs	r3, #0
 800159a:	4604      	mov	r4, r0
 800159c:	4608      	mov	r0, r1
 800159e:	602b      	str	r3, [r5, #0]
 80015a0:	f7fe ffc1 	bl	8000526 <_isatty>
 80015a4:	1c43      	adds	r3, r0, #1
 80015a6:	d102      	bne.n	80015ae <_isatty_r+0x1a>
 80015a8:	682b      	ldr	r3, [r5, #0]
 80015aa:	b103      	cbz	r3, 80015ae <_isatty_r+0x1a>
 80015ac:	6023      	str	r3, [r4, #0]
 80015ae:	bd38      	pop	{r3, r4, r5, pc}
 80015b0:	20000098 	.word	0x20000098

080015b4 <_lseek_r>:
 80015b4:	b538      	push	{r3, r4, r5, lr}
 80015b6:	4d07      	ldr	r5, [pc, #28]	; (80015d4 <_lseek_r+0x20>)
 80015b8:	4604      	mov	r4, r0
 80015ba:	4608      	mov	r0, r1
 80015bc:	4611      	mov	r1, r2
 80015be:	2200      	movs	r2, #0
 80015c0:	602a      	str	r2, [r5, #0]
 80015c2:	461a      	mov	r2, r3
 80015c4:	f7fe ffba 	bl	800053c <_lseek>
 80015c8:	1c43      	adds	r3, r0, #1
 80015ca:	d102      	bne.n	80015d2 <_lseek_r+0x1e>
 80015cc:	682b      	ldr	r3, [r5, #0]
 80015ce:	b103      	cbz	r3, 80015d2 <_lseek_r+0x1e>
 80015d0:	6023      	str	r3, [r4, #0]
 80015d2:	bd38      	pop	{r3, r4, r5, pc}
 80015d4:	20000098 	.word	0x20000098

080015d8 <__malloc_lock>:
 80015d8:	4801      	ldr	r0, [pc, #4]	; (80015e0 <__malloc_lock+0x8>)
 80015da:	f7ff bb55 	b.w	8000c88 <__retarget_lock_acquire_recursive>
 80015de:	bf00      	nop
 80015e0:	20000090 	.word	0x20000090

080015e4 <__malloc_unlock>:
 80015e4:	4801      	ldr	r0, [pc, #4]	; (80015ec <__malloc_unlock+0x8>)
 80015e6:	f7ff bb50 	b.w	8000c8a <__retarget_lock_release_recursive>
 80015ea:	bf00      	nop
 80015ec:	20000090 	.word	0x20000090

080015f0 <_read_r>:
 80015f0:	b538      	push	{r3, r4, r5, lr}
 80015f2:	4d07      	ldr	r5, [pc, #28]	; (8001610 <_read_r+0x20>)
 80015f4:	4604      	mov	r4, r0
 80015f6:	4608      	mov	r0, r1
 80015f8:	4611      	mov	r1, r2
 80015fa:	2200      	movs	r2, #0
 80015fc:	602a      	str	r2, [r5, #0]
 80015fe:	461a      	mov	r2, r3
 8001600:	f7fe ff3c 	bl	800047c <_read>
 8001604:	1c43      	adds	r3, r0, #1
 8001606:	d102      	bne.n	800160e <_read_r+0x1e>
 8001608:	682b      	ldr	r3, [r5, #0]
 800160a:	b103      	cbz	r3, 800160e <_read_r+0x1e>
 800160c:	6023      	str	r3, [r4, #0]
 800160e:	bd38      	pop	{r3, r4, r5, pc}
 8001610:	20000098 	.word	0x20000098

08001614 <_init>:
 8001614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001616:	bf00      	nop
 8001618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800161a:	bc08      	pop	{r3}
 800161c:	469e      	mov	lr, r3
 800161e:	4770      	bx	lr

08001620 <_fini>:
 8001620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001622:	bf00      	nop
 8001624:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001626:	bc08      	pop	{r3}
 8001628:	469e      	mov	lr, r3
 800162a:	4770      	bx	lr
